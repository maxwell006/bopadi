/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;

@layer theme {

    :root,
    :host {
        --font-sans: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto;
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
            "Courier New", monospace;
        --color-yellow-400: oklch(85.2% 0.199 91.936);
        --color-blue-500: oklch(62.3% 0.214 259.815);
        --color-blue-600: oklch(54.6% 0.245 262.881);
        --color-blue-800: oklch(42.4% 0.199 265.638);
        --color-purple-300: oklch(82.7% 0.119 306.383);
        --color-gray-50: oklch(98.5% 0.002 247.839);
        --color-gray-100: oklch(96.7% 0.003 264.542);
        --color-gray-200: oklch(92.8% 0.006 264.531);
        --color-gray-500: oklch(55.1% 0.027 264.364);
        --color-gray-600: oklch(44.6% 0.03 256.802);
        --color-gray-800: oklch(27.8% 0.033 256.848);
        --color-gray-900: oklch(21% 0.034 264.665);
        --color-neutral-500: oklch(55.6% 0 0);
        --color-neutral-800: oklch(26.9% 0 0);
        --color-black: #000;
        --color-white: #fff;
        --spacing: 0.25rem;
        --container-xs: 20rem;
        --container-sm: 24rem;
        --container-md: 28rem;
        --container-lg: 32rem;
        --container-xl: 36rem;
        --container-2xl: 42rem;
        --container-3xl: 48rem;
        --container-4xl: 56rem;
        --container-5xl: 64rem;
        --container-7xl: 80rem;
        --text-xs: 0.75rem;
        --text-xs--line-height: calc(1 / 0.75);
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --text-7xl: 4.5rem;
        --text-7xl--line-height: 1;
        --text-8xl: 6rem;
        --text-8xl--line-height: 1;
        --text-9xl: 8rem;
        --text-9xl--line-height: 1;
        --font-weight-light: 300;
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-wide: 0.025em;
        --tracking-wider: 0.05em;
        --leading-relaxed: 1.625;
        --radius-xs: 0.125rem;
        --radius-sm: 0.25rem;
        --radius-md: 0.375rem;
        --radius-lg: 0.5rem;
        --radius-xl: 0.75rem;
        --radius-2xl: 1rem;
        --radius-3xl: 1.5rem;
        --radius-4xl: 2rem;
        --ease-in: cubic-bezier(0.4, 0, 1, 1);
        --ease-out: cubic-bezier(0, 0, 0.2, 1);
        --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
        --animate-spin: spin 1s linear infinite;
        --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        --blur-sm: 8px;
        --blur-md: 12px;
        --blur-2xl: 40px;
        --blur-3xl: 64px;
        --default-transition-duration: 150ms;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
        --animate-marqueeRight: marqueeRight 20s linear infinite;
        --animate-marqueeLeft: marqueeLeft 20s linear infinite;
        --animate-marqueeTop: marqueeTop 25s linear infinite;
        --animate-marqueeBottom: marqueeBottom 25s linear infinite;
    }
}

@layer base {

    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }

    html,
    :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b,
    strong {
        font-weight: bolder;
    }

    code,
    kbd,
    samp,
    pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sub {
        bottom: -0.25em;
    }

    sup {
        top: -0.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol,
    ul,
    menu {
        list-style: none;
    }

    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        display: block;
        vertical-align: middle;
    }

    img,
    video {
        max-width: 100%;
        height: auto;
    }

    button,
    input,
    select,
    optgroup,
    textarea,
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
    }

    @supports (not (-webkit-appearance: -apple-pay-button)) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field,
    ::-webkit-datetime-edit-second-field,
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button,
    input:where([type="button"], [type="reset"], [type="submit"]),
    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }
}

@layer utilities {
    .zz8ar {
        position: relative;
        display: grid;
        width: 100%;
        overflow: hidden;
        container-type: inline-size;
        grid-template-columns: auto 1fr;
    }

    .d4063 {
        pointer-events: none;
        position: fixed;
        inset: calc(0.25rem * 0);
        z-index: 80;
        margin: calc(0.25rem * 0);
        display: grid;
        width: 100%;
        height: 100%;
        justify-items: center;
        overflow-x: hidden;
        overflow-y: auto;
        padding: calc(0.25rem * 4);
        opacity: 0%;
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .carousel-prev {
        position: absolute;
        inset-block: calc(0.25rem * 0);
        margin-block: auto;
        display: inline-flex;
        height: max-content;
        cursor: pointer;
        align-items: center;
        justify-content: center;

        &.disabled {
            pointer-events: none;
        }

        border-start-start-radius: var(--radius-2xl);
        border-end-start-radius: var(--radius-2xl);
    }

    .carousel-next {
        position: absolute;
        inset-block: calc(0.25rem * 0);
        margin-block: auto;
        display: inline-flex;
        height: max-content;
        cursor: pointer;
        align-items: center;
        justify-content: center;

        &.disabled {
            pointer-events: none;
        }

        border-start-end-radius: var(--radius-2xl);
        border-end-end-radius: var(--radius-2xl);
    }

    .ge0s0 {
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;

        &:after {
            pointer-events: none;
            position: absolute;
            inset-inline-end: 1px;
            top: calc(1/2 * 100%);
            bottom: calc(0.25rem * 0);
            z-index: 1;
            width: calc(0.25rem * 5);
            height: calc(0.25rem * 5);
            rotate: 45deg;
            border-style: var(--tw-border-style);
            border-width: 2px;
            border-color: var(--color-base-100);
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 40%, transparent);
            }

            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow),
            var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow),
            var(--tw-shadow);
            --tw-shadow-color: var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
            }

            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-offset: calc(2px * -1);
            outline-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                outline-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
            }

            --tw-backdrop-blur: blur(8px);
            webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
            backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
            backdrop-filter: blur(8px);
            --tw-content: '';
            content: var(--tw-content);
            translate: 50% -50%;
        }

        &>* {
            pointer-events: none;
            position: absolute;
            inset-inline-start: calc(0.25rem * 0);
            top: calc(0.25rem * 0);
            bottom: calc(0.25rem * 0);
            height: 100%;
            width: 100cqi;
            max-width: none;
            object-fit: cover;
            object-position: center;
        }

        [dir="rtl"] &:after {
            right: auto;
            left: 1px;
            translate: -50% -50%;
        }

        [dir="rtl"] &>* {
            left: auto;
            right: 0;
        }
    }

    .sq3d8 {
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        overflow: hidden;
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 2px;
        border-color: var(--color-base-100);

        &>* {
            pointer-events: none;
            position: absolute;
            inset-inline-start: calc(0.25rem * 0);
            top: calc(0.25rem * 0);
            bottom: calc(0.25rem * 0);
            height: 100%;
            width: 100cqi;
            max-width: none;
            object-fit: cover;
            object-position: center;
        }

        [dir="rtl"] &>* {
            left: auto;
            right: 0;
        }
    }

    .pxu4h {
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        gap: calc(0.25rem * 0.5);
        border-radius: var(--radius-box);
        padding: calc(0.25rem * 2);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --menu-active-fg: var(--color-primary);
        --menu-active-bg: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --menu-active-bg: color-mix(in oklab, var(--color-primary) 10%, #0000);
        }

        --menu-hover-fg: var(--color-base-content);
        --menu-hover-bg: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            --menu-hover-bg: color-mix(in oklab, var(--color-neutral) 10%, #0000);
        }

        :where(li ul) {
            position: relative;
            white-space: nowrap;
        }

        :where(li:not(.dropdown) ul) {
            margin-inline-start: calc(0.25rem * 4);
            padding-inline-start: calc(0.25rem * 2);

            &:before {
                position: absolute;
                inset-inline-start: calc(0.25rem * 0);
                top: calc(0.25rem * 3);
                bottom: calc(0.25rem * 2.5);
                background-color: var(--color-base-content);
                opacity: 10%;
                width: var(--border);
                content: "";
            }
        }

        :where(li > .p0s74:not(.p0s74-show)) {
            display: none;
        }

        :where(.pxu4h li:empty) {
            background-color: var(--color-base-content);
            opacity: 10%;
            margin: 0.5rem 1rem;
            height: 1px;
        }

        :where(li:not(.bsinl, .tooltip) > *:not(ul, .collapse, .accordion-content, .bsinl, .btn)) {
            border-radius: var(--radius-field);
            padding-inline: calc(0.25rem * 4);
            padding-block: calc(0.25rem * 2.5);
            text-align: start;
            transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 200ms;
            --tw-duration: 200ms;
            --tw-ease: var(--ease-out);
            text-wrap: balance;
        }

        :where(li:not(.bsinl) > *:not(ul, .collapse, .accordion-content, .bsinl, .btn)) {
            display: grid;
            grid-auto-flow: column;
            align-content: flex-start;
            align-items: center;
            gap: calc(0.25rem * 2);
            grid-auto-columns: minmax(auto, max-content) auto max-content;
            user-select: none;
        }

        :where(li.tooltip)>* {
            border-radius: var(--radius-field);
            padding-inline: calc(0.25rem * 4);
            padding-block: calc(0.25rem * 2.5);
            text-align: start;
        }

        :where(.pxu4h li:not(.bsinl, .pxu4h-disabled)) {
            color: var(--color-base-content);
        }

        :where(.pxu4h li:not(.bsinl, .pxu4h-disabled) > *:not(ul, .collapse, .accordion-content, .dropdown-active, .pxu4h-title)) {
            &:not(.btn):focus-visible {
                cursor: pointer;
                --tw-outline-style: none;
                outline-style: none;
                color: var(--menu-hover-fg);
                background-color: var(--menu-hover-bg);
            }

            &:hover {
                cursor: pointer;
                --tw-outline-style: none;
                outline-style: none;
                color: var(--menu-hover-fg);
                background-color: var(--menu-hover-bg);
            }
        }

        li:not(.bsinl, .p851q)> :not(ul, .bsinl, .collapse, .accordion-content, .btn).w0v1k {
            color: var(--menu-active-fg);
            background-color: var(--menu-active-bg);
            background-size: auto, calc(var(--noise) * 100%);
            background-image: none, var(--fx-noise);
        }

        li.p851q {
            pointer-events: none;
            opacity: 50%;
            webkit-user-select: none;
            user-select: none;
        }

        :where(& li) {
            position: relative;
            display: flex;
            flex-shrink: 0;
            flex-direction: column;
            flex-wrap: wrap;
            align-items: stretch;

            .badge {
                justify-self: flex-end;
            }
        }
    }

    .hdlg5 {
        pointer-events: none;
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        margin-inline-start: calc(0.25rem * 3);
        width: fit-content;
        overflow: hidden;
        background-color: transparent;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        text-overflow: ellipsis;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }

        top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
        translate: 0 -50%;
        transition: top 0.1s ease-out,
        translate 0.1s ease-out,
        scale 0.1s ease-out,
        opacity 0.1s ease-out;
    }

    .amw3a {
        pointer-events: none;
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        inset-inline-start: 1px;
        margin-inline-start: calc(0.25rem * 4);
        width: fit-content;
        overflow: hidden;
        background-color: transparent;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        text-overflow: ellipsis;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }

        top: 9px;
        transition: top 0.1s ease-out,
        translate 0.1s ease-out,
        scale 0.1s ease-out,
        opacity 0.1s ease-out;
    }

    .y9rox {
        --link-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            --link-color: color-mix(in oklab, var(--color-base-content) 80%, #0000);
        }

        display: inline-block;
        cursor: pointer;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        text-decoration-line: underline;
        color: var(--link-color);

        &:hover {
            color: var(--link-color);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--link-color) 80%, #000);
            }
        }

        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }

        &:focus-visible {
            outline: 2px solid currentColor;
            outline-offset: 2px;
        }

        &.disabled,
        &[disabled],
        &:disabled {
            pointer-events: none;
            opacity: 50%;
        }

        &:where(.dg5t4) {
            text-decoration-line: none;

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        text-decoration-line: underline;
                    }
                }
            }
        }

        &:where(.sy890) {
            position: relative;
            text-decoration-line: none;

            &::before {
                content: var(--tw-content);
                pointer-events: none;
                position: absolute;
                inset-inline-start: calc(0.25rem * 0);
                bottom: calc(0.25rem * 0);
                height: 1px;
                width: 100%;
                background-color: currentColor;
                transition-property: transform, translate, scale, rotate;
                transition-timing-function: var(--ease-in-out);
                transition-duration: 300ms;
                --tw-duration: 300ms;
                --tw-ease: var(--ease-in-out);
                --tw-content: '';
            }
        }

        &:where(.sy890)::before {
            transform-origin: 100% 50%;
            transform: scale3d(0, 1, 1);
        }

        &:where(.sy890):hover::before {
            transform-origin: 0% 50%;
            transform: scale3d(1, 1, 1);
        }
    }

    .sy890 {
        .y9rox:where(&) {
            position: relative;
            text-decoration-line: none;

            &::before {
                content: var(--tw-content);
                pointer-events: none;
                position: absolute;
                inset-inline-start: calc(0.25rem * 0);
                bottom: calc(0.25rem * 0);
                height: 1px;
                width: 100%;
                background-color: currentColor;
                transition-property: transform, translate, scale, rotate;
                transition-timing-function: var(--ease-in-out);
                transition-duration: 300ms;
                --tw-duration: 300ms;
                --tw-ease: var(--ease-in-out);
                --tw-content: '';
            }
        }

        .y9rox:where(&)::before {
            transform-origin: 100% 50%;
            transform: scale3d(0, 1, 1);
        }

        .y9rox:where(&):hover::before {
            transform-origin: 0% 50%;
            transform: scale3d(1, 1, 1);
        }
    }

    .f7bj4 {
        .wz3vx:has(> &) {
            padding: calc(0.25rem * 0);

            :where(.f7bj4:first-child)>textarea {
                padding-block: calc(0.25rem * 2);
                padding-inline-start: calc(0.25rem * 4);
            }

            :where(.f7bj4:nth-child(2))>textarea {
                padding-block: calc(0.25rem * 2);
            }

            :where(.f7bj4:last-child)>textarea {
                padding-block: calc(0.25rem * 2);
                padding-inline-end: calc(0.25rem * 4);
            }

            :where(.f7bj4:nth-child(2)) .amw3a,
            :where(.f7bj4:last-child) .amw3a {
                margin-inline-start: calc(0.25rem * 0);
            }

            & *>textarea {
                width: 100%;
                height: 100%;
                min-height: calc(0.25rem * 20);
            }
        }

        .wz3vx:has(> &) textarea {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }
        }

        position: relative;
        display: block;
        width: 100%;

        .wz3vx {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }

            field-sizing: content;

            &:has(> textarea[disabled]),
            &:is(:disabled, [disabled]) {
                border-style: var(--tw-border-style);
                border-width: 1px;
                border-color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
                }

                background-color: transparent;
                opacity: 50%;

                &::placeholder {
                    color: transparent;
                }

                &~.amw3a {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
                    }
                }
            }
        }

        &:focus-within,
        &:not(:has(textarea:placeholder-shown)),
        &:has(.wz3vx:focus) {
            .amw3a {
                pointer-events: auto;
                top: calc(0.25rem * 0);
                background-color: var(--color-base-100);
                padding-inline: calc(0.25rem * 1);
                --tw-font-weight: var(--font-weight-medium);
                font-weight: var(--font-weight-medium);
                color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                }

                translate: -12.5% calc(-50% - 0.125em);
                scale: 0.75;
            }
        }

        &:focus-within,
        &:has(.wz3vx:focus) {
            .amw3a {
                --input-color: var(--color-primary);
                color: var(--input-color);
            }
        }

        &:has(.yxy9c) .amw3a {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }

        &:has(.zi458) .amw3a {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        &:has(.qjv76) .amw3a {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }

        &:has(.afhoz) .amw3a {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }

        &:has(.ud2k2) .amw3a {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
    }

    .r48nb {
        .lt6if:has(> &) input {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }
        }

        position: relative;
        display: block;
        width: 100%;

        .lt6if {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }

            &:has(> input[disabled]),
            &:is(:disabled, [disabled]) {
                border-style: var(--tw-border-style);
                border-width: 1px;
                background-color: transparent;
                opacity: 50%;

                &~.hdlg5 {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
                    }
                }
            }
        }

        &:focus-within,
        &:not(:has(input:placeholder-shown)),
        &:has(.lt6if:focus) {
            .hdlg5 {
                pointer-events: auto;
                top: calc(0.25rem * 0);
                background-color: var(--color-base-100);
                padding-inline: calc(0.25rem * 1);
                --tw-font-weight: var(--font-weight-medium);
                font-weight: var(--font-weight-medium);
                color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                }

                translate: -12.5% calc(-50% - 0.125em);
                scale: 0.75;
            }
        }

        &:focus-within,
        &:has(.lt6if:focus) {
            .hdlg5 {
                --input-color: var(--color-primary);
                color: var(--input-color);
            }
        }

        &:has(.oeghr) .hdlg5 {
            margin-inline-start: calc(0.25rem * 2.5);
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
            top: calc(var(--size-field, 0.25rem) * 6 / 2);
        }

        &:has(.j8n2r) .hdlg5 {
            margin-inline-start: calc(0.25rem * 2.5);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            top: calc(var(--size-field, 0.25rem) * 7.5 / 2);
        }

        &:has(.i6t40) .hdlg5 {
            margin-inline-start: calc(0.25rem * 3);
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            top: calc(var(--size-field, 0.25rem) * 9.5 / 2);
        }

        &:has(.ynugf) .hdlg5 {
            margin-inline-start: calc(0.25rem * 4);
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            top: calc(var(--size-field, 0.25rem) * 11.5 / 2);
        }

        &:has(.moz2m) .hdlg5 {
            margin-inline-start: calc(0.25rem * 4.5);
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
            top: calc(var(--size-field, 0.25rem) * 14 / 2);
        }
    }

    .nb3o8 {
        appearance: none;
        webkit-appearance: none;
        --range-color: var(--color-base-content);
        --range-thumb-border-width: 3px;
        --range-track-height: 8px;
        --range-thumb-size: 16px;
        position: relative;
        width: 100%;
        border-radius: calc(infinity * 1px);
        background-color: transparent;
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        height: var(--range-track-height);

        &::-webkit-slider-runnable-track {
            width: 100%;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }

            height: var(--range-track-height);
        }

        &::-moz-range-track {
            width: 100%;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }

            height: var(--range-track-height);
        }

        &::-webkit-slider-thumb {
            position: relative;
            top: calc(1/2 * 100%);
            --tw-translate-y: calc(calc(1/2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
            border-radius: calc(infinity * 1px);
            background-color: var(--color-base-100);
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-shadow-color: var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
            }

            transition-property: all;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 150ms;
            --tw-duration: 150ms;
            --tw-ease: var(--ease-in-out);

            &:hover {
                @media (hover: hover) {
                    --tw-scale-x: 125%;
                    --tw-scale-y: 125%;
                    --tw-scale-z: 125%;
                    scale: var(--tw-scale-x) var(--tw-scale-y);
                }

                cursor: grab;
                box-shadow: 0 0 0 2px var(--range-color);
            }

            &:active {
                --tw-scale-x: 125%;
                --tw-scale-y: 125%;
                --tw-scale-z: 125%;
                scale: var(--tw-scale-x) var(--tw-scale-y);
                cursor: grabbing;
                box-shadow: 0 0 0 3px var(--range-color);
            }

            appearance: none;
            box-sizing: border-box;
            webkit-appearance: none;
            color: var(--range-color);
            border-color: var(--range-color);
            border-style: solid;
            border-width: var(--range-thumb-border-width);
            height: var(--range-thumb-size);
            width: var(--range-thumb-size);
        }

        &::-moz-range-thumb {
            position: relative;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-base-100);
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            transition-property: all;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 150ms;
            --tw-duration: 150ms;
            --tw-ease: var(--ease-in-out);
            top: 50%;
            color: var(--range-color);
            box-sizing: border-box;
            border-color: var(--range-color);
            border-style: solid;
            border-width: var(--range-thumb-border-width);
            height: var(--range-thumb-size);
            width: var(--range-thumb-size);

            &:hover {
                cursor: grab;
                box-shadow: 0 0 0 2px var(--range-color);
            }

            &:active {
                cursor: grabbing;
                box-shadow: 0 0 0 3px var(--range-color);
            }
        }

        &:focus {
            outline: none;
        }

        &.disabled {
            pointer-events: none;
            opacity: 50%;
        }

        &:disabled {
            pointer-events: none;
            opacity: 50%;
        }

        &[disabled] {
            pointer-events: none;
            opacity: 50%;
        }

        [dir="rtl"] &::-webkit-slider-thumb {
            transform: scaleX(-1);
        }

        [dir="rtl"] &::-moz-range-thumb {
            transform: scaleX(-1);
        }

        [dir="rtl"] &::-webkit-slider-runnable-track {
            direction: rtl;
        }

        [dir="rtl"] &::-moz-range-track {
            direction: rtl;
        }
    }

    .qqm0l {
        .dhabj>&:focus-visible {
            border-end-end-radius: 0;
            border-end-start-radius: 0;
        }

        position: relative;
        display: inline-flex;
        cursor: pointer;
        appearance: none;
        align-items: center;
        justify-content: center;
        text-align: center;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--color-base-content);
        webkit-user-select: none;
        user-select: none;
        height: var(--size);
        --size: calc(var(--size-field, 0.25rem) * 9.5);
        --tab-p: 1rem;
        --tab-bg: var(--color-base-100);
        --tab-border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            --tab-border-color: color-mix(in oklab, var(--color-base-content), #0000 90%);
        }

        padding-inline: var(--tab-p, 1rem);

        &:focus,
        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        &[disabled] {
            pointer-events: none;
            opacity: 40%;
        }

        @media (hover: hover) {
            &[disabled]:hover {
                pointer-events: none;
                opacity: 40%;
            }
        }

        .lz7kr>& {
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        border-color: var(--color-primary);

                        @supports (color: color-mix(in lab, red, red)) {
                            border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
                        }
                    }
                }
            }

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        color: var(--color-primary);
                    }
                }
            }

            border-style: solid;
            border-bottom-width: calc(var(--border, 1px) + 1px);
        }

        .dhabj>& {
            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        border-color: var(--color-primary);

                        @supports (color: color-mix(in lab, red, red)) {
                            border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
                        }
                    }
                }
            }

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        color: var(--color-primary);
                    }
                }
            }

            border: var(--tab-border, 1px) solid transparent;
            border-width: 0 0 var(--tab-border, 1px) 0;
            border-radius: var(--radius-field, 0.375rem);
            border-bottom-color: var(--tab-border-color);
            padding-inline-start: var(--tab-p, 1rem);
            padding-inline-end: var(--tab-p, 1rem);
            padding-top: var(--tab-border, 1px);
        }

        .dhabj>&.uh65i:not([disabled]) {
            background-color: var(--tab-bg);
            border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
            border-color: var(--tab-border-color);
            border-end-start-radius: 0;
            border-end-end-radius: 0;
            padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
            padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
            padding-bottom: var(--tab-border, 1px);
            padding-top: 0;
        }

        .dhabj>&.uh65i:not([disabled]):before {
            content: "";
            display: block;
            position: absolute;
            z-index: 1;
            width: calc(100% + var(--radius-field, 0.375rem) * 2);
            height: var(--radius-field, 0.375rem);
            bottom: 0;
            background-size: var(--radius-field, 0.375rem);
            background-repeat: no-repeat;
            background-position: top left, top right;
            --tab-grad: calc(69% - var(--tab-border, 1px));
            --radius-start: radial-gradient(circle at top left,
                    transparent var(--tab-grad),
                    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
            --radius-end: radial-gradient(circle at top right,
                    transparent var(--tab-grad),
                    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
            background-image: var(--radius-start), var(--radius-end);
        }

        .dhabj>&.uh65i:not([disabled]):first-child:before {
            background-image: var(--radius-end);
            background-position: top right;
        }

        .dhabj>&.uh65i:not([disabled]):last-child:before {
            background-image: var(--radius-start);
            background-position: top left;
        }

        [dir="rtl"] .dhabj>&.uh65i:not([disabled]):first-child:before {
            background-image: var(--radius-start);
            background-position: top left;
        }

        [dir="rtl"] .dhabj>&.uh65i:not([disabled]):last-child:before {
            background-image: var(--radius-end);
            background-position: top right;
        }

        .x3643 :where(&) {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
            --size: calc(var(--size-field, 0.25rem) * 14);
            --tab-p: 1.5rem;
        }

        .f8b31 :where(&) {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            --size: calc(var(--size-field, 0.25rem) * 11.5);
            --tab-p: 1.25rem;
        }

        .p1tyb :where(&) {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            --size: calc(var(--size-field, 0.25rem) * 9.5);
            --tab-p: 1rem;
        }

        .bviur :where(&) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            --size: calc(var(--size-field, 0.25rem) * 7.5);
            --tab-p: 0.75rem;
        }

        .rpaay :where(&) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            --size: calc(var(--size-field, 0.25rem) * 6);
            --tab-p: 0.5rem;
        }
    }

    .btn {
        display: inline-flex;
        flex-shrink: 0;
        cursor: pointer;
        flex-wrap: nowrap;
        align-items: center;
        justify-content: center;
        gap: calc(0.25rem * 2);
        text-align: center;
        vertical-align: middle;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        text-decoration-line: none;
        webkit-user-select: none;
        user-select: none;

        @media (prefers-reduced-motion: reduce) {
            transition-property: none;
        }

        padding-inline: var(--btn-p);
        color: var(--btn-fg);
        height: var(--size);
        outline-color: var(--btn-color, var(--color-neutral));

        @supports (color: color-mix(in lab, red, red)) {
            outline-color: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, var(--color-base-100));
        }

        transition-property: color,
        background-color,
        border-color,
        box-shadow;
        transition-timing-function: cubic-bezier(0, 0, 0.96, 1.03);
        transition-duration: 0.25s;
        border-start-start-radius: var(--join-ss, var(--radius-field));
        border-start-end-radius: var(--join-se, var(--radius-field));
        border-end-start-radius: var(--join-es, var(--radius-field));
        border-end-end-radius: var(--join-ee, var(--radius-field));
        background-color: var(--btn-bg);
        background-size: auto,
        calc(var(--noise) * 100%);
        background-image: none,
        var(--btn-noise);
        border: var(--border) solid var(--btn-border);
        box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 8%)) inset,
        var(--btn-shadow);
        --size: calc(var(--size-field, 0.25rem) * 9.5);
        --btn-bg: var(--btn-color, var(--color-neutral));
        --btn-fg: var(--color-neutral-content);
        --btn-p: 1rem;
        --btn-border: var(--btn-bg);

        @supports (color: color-mix(in lab, red, red)) {
            --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
        }

        --btn-shadow: 0px 1px 3px 0px var(--color-base-300),
        0px 1px 2px -1px var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--color-base-300) 40%, #0000),
                0px 1px 2px -1px color-mix(in oklab, var(--color-base-300) 40%, #0000);
        }

        --btn-noise: var(--fx-noise);

        @media (hover: hover) {
            &:hover {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
                }
            }
        }

        &:active:hover:not(.gmf3v),
        &:active:focus:not(.gmf3v) {
            --tw-scale-x: 95%;
            --tw-scale-y: 95%;
            --tw-scale-z: 95%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: ease-out;
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 300ms;
            --tw-duration: 300ms;
        }

        &:focus-visible {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)), #000 10%);
            }

            outline-width: 2px;
            outline-style: solid;
        }

        &:is(:disabled, [disabled], .iidbg) {
            pointer-events: none;
            opacity: 50%;
            --tw-shadow: 0 0 #0000;
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }

        &:is(input[type="checkbox"], input[type="radio"]) {
            appearance: none;

            &::after {
                content: attr(aria-label);
            }

            &:checked {
                background: var(--color-primary);
                color: var(--color-primary-content);
                outline-color: var(--color-primary);
                --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
                isolation: isolate;
            }
        }
    }

    .rhn0q {
        border-radius: var(--radius-field);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }

        background-color: var(--color-base-100);
        text-align: center;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));

        &::placeholder {
            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
            }
        }

        height: var(--size);
        width: var(--size);
        transition: border-color 0.15s ease-in-out,
        box-shadow 0.15s ease-in-out;
        --size: calc(var(--size-field, 0.25rem) * 9.5);

        &:hover:not(:focus, :focus-within) {
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
            }
        }

        &:focus,
        &:focus-within {
            border-color: var(--color-primary);
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-shadow-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, var(--color-primary) 30%, #0000);
            }

            outline: 1px solid var(--color-primary);
            isolation: isolate;
        }

        &.disabled,
        &:disabled,
        &[disabled] {
            pointer-events: none;
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
            }

            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
            }

            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }

            &::placeholder {
                color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
                }
            }
        }
    }

    .dropdown-item {
        clear: both;
        display: flex;
        width: 100%;
        align-items: center;
        column-gap: calc(0.25rem * 2);
        border-radius: var(--radius-field);
        background-color: transparent;
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 2.5);
        color: var(--color-base-content);
        text-decoration-line: none;
        text-decoration-thickness: 0px;
        text-align: inherit;

        &:hover:not(.dropdown-active),
        &:focus:not(.dropdown-active),
        &:focus-within:not(.dropdown-active),
        &:focus-visible:not(.dropdown-active) {
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }

            --tw-outline-style: none;
            outline-style: none;
        }

        &.j70n4,
        &:disabled,
        &[disabled] {
            pointer-events: none;
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 5%, transparent);
            }

            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }
        }
    }

    .loading {
        pointer-events: none;
        display: inline-block;
        aspect-ratio: 1 / 1;
        background-color: currentColor;
        vertical-align: middle;
        width: calc(var(--size-selector, 0.25rem) * 6);
        mask-size: 100%;
        mask-repeat: no-repeat;
        mask-position: center;
        mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
    }

    .swwbz {
        pointer-events: auto;
        display: flex;
        flex-direction: column;
        border-radius: var(--radius-lg);
        background-color: var(--color-base-100);
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }

        max-height: calc(100vh - 2rem);
        overscroll-behavior: contain;
    }

    .accordion-toggle {
        width: 100%;
        cursor: pointer;
        padding-inline: calc(0.25rem * 5);
        padding-block: calc(0.25rem * 4);
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);

        &:disabled {
            pointer-events: none;
            opacity: 50%;
        }
    }

    .disabled {
        .nb3o8& {
            pointer-events: none;
            opacity: 50%;
        }
    }

    .disabled {
        .carousel-prev& {
            pointer-events: none;
        }

        .carousel-next& {
            pointer-events: none;
        }
    }

    .rboif {
        pointer-events: none;
    }

    .tooltip-content {
        visibility: hidden;
        position: absolute;
        display: inline-block;
        padding: calc(0.25rem * 2);
        opacity: 0%;
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        width: max-content;
        z-index: 20;
    }

    .collapse {
        visibility: collapse;
    }

    .collapse {
        &:not(td):not(tr):not(colgroup) {
            visibility: visible;
        }
    }

    .hq1d9 {
        visibility: hidden;
    }

    .hkkhu {
        visibility: visible;
    }

    .xbz92 {
        position: relative;
        box-sizing: content-box;
        display: inline-grid;
        place-content: center;
        border-radius: calc(infinity * 1px);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
        vertical-align: middle;
        height: var(--size);
        width: var(--size);
        --value: 0;
        --size: 5rem;
        --thickness: calc(var(--size) / 10);
        --radialprogress: calc(var(--value) * 1%);
        transition: --radialprogress 0.3s linear;

        &:before {
            position: absolute;
            inset: calc(0.25rem * 0);
            border-radius: calc(infinity * 1px);
            content: "";
            background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat, conic-gradient(currentColor var(--radialprogress), var(--color-base-content) 0);

            @supports (color: color-mix(in lab, red, red)) {
                background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat, conic-gradient(currentColor var(--radialprogress), color-mix(in oklab, var(--color-base-content) 20%, transparent) 0);
            }

            webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - var(--thickness)), #000 calc(100% + 0.5px - var(--thickness)));
            mask: radial-gradient(farthest-side, #0000 calc(100% - var(--thickness)), #000 calc(100% + 0.5px - var(--thickness)));
        }

        &:after {
            position: absolute;
            border-radius: calc(infinity * 1px);
            background-color: currentColor;
            transition: transform 0.3s linear;
            content: "";
            inset: calc(50% - var(--thickness) / 2);
            transform: rotate(calc(var(--value) * 3.6deg - 90deg)) translate(calc(var(--size) / 2 - 50%));
        }
    }

    .iz8aa {
        position: relative;
        display: inline-flex;
        width: max-content;

        :where(.gbw4v) {
            z-index: 1;
            position: absolute;
            white-space: nowrap;
            top: var(--indicator-t, 0);
            bottom: var(--indicator-b, auto);
            inset-inline-start: var(--indicator-s, auto);
            inset-inline-end: var(--indicator-e, 0);
            translate: var(--indicator-x, 50%) var(--indicator-y, -50%);

            [dir="rtl"] & {
                --indicator-x: -50%;
            }
        }
    }

    .k2nmm {
        position: relative;
        width: 100%;
        overflow-x: auto;
        overflow-y: hidden;
        border-radius: var(--radius-box);

        pre[data-prefix] {
            &:before {
                content: attr(data-prefix);
                display: inline-block;
                text-align: right;
            }
        }

        .xfzad {
            margin-block: calc(0.25rem * 3);
            display: inline-flex;
            width: 100%;
            align-items: center;
            padding-inline-end: 1.4em;
            direction: ltr;

            &:before {
                content: "";
                margin-inline-end: 4.8rem;
                display: inline-block;
                aspect-ratio: 1 / 1;
                height: calc(0.25rem * 3);
                border-radius: calc(infinity * 1px);
                opacity: 30%;
                box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
            }

            .lt6if {
                position: relative;
                margin-inline: auto;
                display: block;
                height: calc(0.25rem * 7);
                width: calc(0.25rem * 96);
                overflow: hidden;
                padding-inline-start: calc(0.25rem * 8);
                padding-top: calc(0.25rem * 0.5);
                text-overflow: ellipsis;
                white-space: nowrap;

                &:before {
                    content: "";
                    position: absolute;
                    inset-inline-start: calc(0.25rem * 2);
                    top: calc(1/2 * 100%);
                    aspect-ratio: 1 / 1;
                    height: calc(0.25rem * 3);
                    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
                    translate: var(--tw-translate-x) var(--tw-translate-y);
                    border-radius: calc(infinity * 1px);
                    border-style: var(--tw-border-style);
                    border-width: 2px;
                    border-color: currentColor;
                    opacity: 60%;
                }

                &:after {
                    content: "";
                    position: absolute;
                    inset-inline-start: calc(0.25rem * 5);
                    top: calc(1/2 * 100%);
                    height: calc(0.25rem * 2);
                    --tw-translate-y: calc(1/4 * 100%);
                    translate: var(--tw-translate-x) var(--tw-translate-y);
                    rotate: calc(45deg * -1);
                    border-radius: calc(infinity * 1px);
                    border-style: var(--tw-border-style);
                    border-width: 1px;
                    border-color: currentColor;
                    opacity: 60%;
                }
            }
        }
    }

    .nz55r {
        position: relative;
        margin-inline-start: calc(0.25rem * 4);
        padding-inline-start: calc(0.25rem * 4);

        &::before {
            content: var(--tw-content);
            position: absolute;
            inset-inline-start: calc(0.25rem * 0);
            top: calc(0.25rem * 0);
            margin-inline-start: calc(0.25rem * -0.5);
            height: 100%;
            width: calc(0.25rem * 0.5);
            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
            }
        }
    }

    .nwjd7 {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 0);
        margin-inline-start: calc(0.25rem * 3);
        width: fit-content;
        overflow: hidden;
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        text-overflow: ellipsis;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }

        scale: 0.75;
        translate: -12.5% calc(-50% - 0.125em);
    }

    .chat {
        display: grid;
        grid-template-columns: repeat(2, minmax(0, 1fr));
        column-gap: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 1);

        .s4ezt {
            grid-row: span 2 / span 2;
            align-self: flex-end;
        }

        .hb8q4 {
            grid-row-start: 1;
            margin-bottom: calc(0.25rem * 1);
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }

        .hsnbh {
            grid-row-start: 3;
            margin-top: calc(0.25rem * 1);
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }

        .s0eum {
            position: relative;
            display: block;
            width: fit-content;
            border-radius: var(--radius-box);
            padding: calc(0.25rem * 3);
            max-width: 90%;
            min-height: 2.75rem;
            min-width: 2.75rem;

            &:before {
                position: absolute;
                bottom: calc(0.25rem * 0);
                width: calc(0.25rem * 4);
                height: calc(0.25rem * 4);
                background-color: inherit;
                content: "";
                mask-size: contain;
                mask-repeat: no-repeat;
                mask-position: center;
            }
        }

        &.qj105 {
            place-items: start;
            grid-template-columns: auto 1fr;

            .hb8q4 {
                grid-column-start: 2;
            }

            .hsnbh {
                grid-column-start: 2;
            }

            .s4ezt {
                grid-column-start: 1;
            }

            .s0eum {
                grid-column-start: 2;
                border-end-start-radius: 0;
                background-color: var(--color-base-100);
                color: var(--color-base-content);

                &:before {
                    inset-inline-start: -0.749rem;
                    mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
                }

                [dir="rtl"] &:before {
                    mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
                }
            }
        }

        &.ku8kq {
            place-items: end;
            grid-template-columns: 1fr auto;

            .hb8q4 {
                grid-column-start: 1;
            }

            .hsnbh {
                grid-column-start: 1;
            }

            .s4ezt {
                grid-column-start: 2;
            }

            .s0eum {
                grid-column-start: 1;
                border-end-end-radius: 0;
                background-color: var(--color-primary);
                text-align: end;
                color: var(--color-primary-content);

                &:before {
                    inset-inline-start: 99.9%;
                    mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
                }

                [dir="rtl"] &:before {
                    mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
                }
            }
        }
    }

    .switch {
        border: var(--border) solid #0000;
        color: var(--color-base-100);
        position: relative;
        display: inline-grid;
        flex-shrink: 0;
        cursor: pointer;
        appearance: none;
        place-content: center;
        vertical-align: middle;
        webkit-user-select: none;
        user-select: none;

        @media print {
            outline: .25rem solid;
        }

        grid-template-columns: 0fr 1fr 1fr;
        padding: var(--switch-p);
        box-shadow: 0 1px currentColor inset;

        @supports (color: color-mix(in lab, red, red)) {
            box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
        }

        background-color: var(--input-color);
        --radius-selector-max: calc(var(--radius-selector) + var(--radius-selector) + var(--radius-selector));
        border-radius: calc(var(--radius-selector) + min(var(--switch-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)));
        transition: color 0.3s,
        grid-template-columns 0.2s;
        --input-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            --input-color: color-mix(in oklab, var(--color-neutral) 22%, #0000);
        }

        --switch-p: 0.1875rem;
        --size: calc(var(--size-selector, 0.25rem) * 6);
        width: calc((var(--size) * 2) - (var(--border) + var(--switch-p)) * 2);
        height: var(--size);

        &:before {
            position: relative;
            inset-inline-start: calc(0.25rem * 0);
            grid-column-start: 2;
            grid-row-start: 1;
            aspect-ratio: 1 / 1;
            height: 100%;
            border-radius: var(--radius-selector);
            background-color: currentColor;

            @media print {
                outline: .25rem solid;
            }

            @media print {
                outline-offset: -1rem;
            }

            translate: 0;
            --tw-content: "";
            content: var(--tw-content);
            transition: background-color 0.1s,
            translate 0.2s,
            inset-inline-start 0.2s;
            box-shadow: 0 -1px oklch(59.99% 0 0 / calc(var(--depth) * 0.08)) inset,
            0 8px 0 -4px oklch(59.99% 0 0 / calc(var(--depth) * 0.08)) inset,
            0 1px 2px 0 oklch(0% 0 0 / 0.2);
            background-size: auto,
            calc(var(--noise) * 100%);
            background-image: none,
            var(--fx-noise);

            @media (forced-colors: active) {
                outline-style: var(--tw-outline-style);
                outline-width: 1px;
                outline-offset: calc(1px * -1);
            }
        }

        &:focus-visible,
        &:has(:focus-visible) {
            outline: 2px solid var(--input-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
            }

            outline-offset: 0px;
        }

        &:checked,
        &[aria-checked="true"],
        &:has(> input:checked) {
            grid-template-columns: 1fr 1fr 0fr;
            --input-color: var(--color-neutral);
            background-color: var(--input-color);

            &:before {
                background-color: currentColor;

                @starting-style {
                    opacity: 0;
                }
            }
        }

        &:indeterminate {
            grid-template-columns: 0.5fr 1fr 0.5fr;
        }

        &:disabled {
            cursor: not-allowed;
            opacity: 50%;

            &:before {
                background-color: transparent;
            }
        }
    }

    .agbl4 {
        position: relative;
        width: 100%;
        overflow-x: hidden;
        overflow-y: auto;
        border-radius: var(--radius-box);
        text-align: left;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            text-align: right;
        }

        tr.q5op8 {

            &,
            &:nth-child(even) {
                &:hover {
                    @media (hover: hover) {
                        background-color: var(--color-base-200);

                        @supports (color: color-mix(in lab, red, red)) {
                            background-color: color-mix(in oklab, var(--color-base-200) 80%, transparent);
                        }
                    }
                }
            }
        }

        tr.aqmao {

            &,
            &:nth-child(even) {
                background-color: var(--color-base-200);
            }
        }

        :where(th, td) {
            padding-inline: calc(0.25rem * 5);
            padding-block: calc(0.25rem * 3);
            vertical-align: middle;
            text-wrap: nowrap;
        }

        :where(thead, tfoot) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            white-space: nowrap;
            color: var(--color-base-content);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        :where(th) {
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
        }

        :where(.xhtcv thead tr) {
            position: sticky;
            top: calc(0.25rem * 0);
            z-index: 1;
            background-color: var(--color-base-100);
        }

        :where(.xhtcv tfoot tr) {
            position: sticky;
            bottom: calc(0.25rem * 0);
            z-index: 1;
            background-color: var(--color-base-100);
        }

        :where(.qdiam tr th) {
            position: sticky;
            right: calc(0.25rem * 0);
            left: calc(0.25rem * 0);
            background-color: var(--color-base-100);
        }

        :where(thead tr) {
            border-bottom: var(--border) solid var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
            }
        }

        :where(tbody tr:not(:last-child)) {
            border-bottom: var(--border) solid var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 10%, #0000);
            }
        }

        :where(tfoot) {
            border-top: var(--border) solid var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 25%, #0000);
            }
        }
    }

    .fchz4 {
        display: inline-block;
        border: 4px solid #4e4d4d;
        border-radius: 50px;
        background-color: #000;
        padding: 6px;
        margin: 0 auto;
        overflow: hidden;

        .bj845 {
            border-radius: calc(infinity * 1px);
            position: relative;
            top: 5px;
            left: 0px;
            background: #000;
            height: 25px;
            width: 33%;
            margin: 0 auto;

            &:after {
                content: "";
                position: absolute;
                top: 25%;
                right: 8%;
                width: 12px;
                height: 12px;
                border-radius: 5px;
                background-color: #2a292d;
            }
        }

        .kwevi {
            overflow: hidden;
            border-radius: 40px;
            margin-top: -25px;
        }
    }

    .cbcwn {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-warning);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            top: 3%;
            right: 3%;
        }
    }

    .dyfdy {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-error);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            top: 3%;
            right: 3%;
        }
    }

    .as33q {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-base-200);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            top: 3%;
            right: 3%;
        }
    }

    .esr61 {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-success);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            top: 3%;
            right: 3%;
        }
    }

    .j9x1k {
        top: calc(1/2 * 100%);
        z-index: 1;
        height: calc(0.25rem * 1.5);
        width: 25rem;
        max-width: calc(100cqi - 1rem);
        min-width: calc(0.25rem * 4);
        --tw-translate-x: 0.335rem;
        translate: var(--tw-translate-x) var(--tw-translate-y);
        --tw-translate-y: calc(0.18rem * -1);
        --tw-scale-y: 400%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        resize: horizontal;
        overflow: hidden;
        opacity: 0%;
        clip-path: inset(calc(100% - 0.75rem) 0 0 calc(100% - 0.75rem));
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;

        [dir="rtl"] & {
            transform-origin: 0 100%;
            translate: -0.29rem 0.37rem;
            clip-path: inset(calc(100% - 0.75rem) calc(100% - 0.75rem) 0 0);
        }
    }

    .jn2hv {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-warning);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            bottom: 3%;
            right: 3%;
        }
    }

    .j6u5b {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-error);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            bottom: 3%;
            right: 3%;
        }
    }

    .gs8jb {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-base-200);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            bottom: 3%;
            right: 3%;
        }
    }

    .vbh5a {
        &:before {
            content: "";
            position: absolute;
            z-index: 10;
            display: block;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-success);
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-width: 2px;
            outline-color: var(--color-base-100);
            width: 20%;
            height: 20%;
            bottom: 3%;
            right: 3%;
        }
    }

    .dhabj {
        &>.qqm0l:focus-visible {
            border-end-end-radius: 0;
            border-end-start-radius: 0;
        }

        &>.qqm0l {
            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        border-color: var(--color-primary);

                        @supports (color: color-mix(in lab, red, red)) {
                            border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
                        }
                    }
                }
            }

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        color: var(--color-primary);
                    }
                }
            }

            border: var(--tab-border, 1px) solid transparent;
            border-width: 0 0 var(--tab-border, 1px) 0;
            border-radius: var(--radius-field, 0.375rem);
            border-bottom-color: var(--tab-border-color);
            padding-inline-start: var(--tab-p, 1rem);
            padding-inline-end: var(--tab-p, 1rem);
            padding-top: var(--tab-border, 1px);
        }

        &>.qqm0l.uh65i:not([disabled]) {
            background-color: var(--tab-bg);
            border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
            border-color: var(--tab-border-color);
            border-end-start-radius: 0;
            border-end-end-radius: 0;
            padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
            padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
            padding-bottom: var(--tab-border, 1px);
            padding-top: 0;
        }

        &>.qqm0l.uh65i:not([disabled]):before {
            content: "";
            display: block;
            position: absolute;
            z-index: 1;
            width: calc(100% + var(--radius-field, 0.375rem) * 2);
            height: var(--radius-field, 0.375rem);
            bottom: 0;
            background-size: var(--radius-field, 0.375rem);
            background-repeat: no-repeat;
            background-position: top left, top right;
            --tab-grad: calc(69% - var(--tab-border, 1px));
            --radius-start: radial-gradient(circle at top left,
                    transparent var(--tab-grad),
                    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
            --radius-end: radial-gradient(circle at top right,
                    transparent var(--tab-grad),
                    var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                    var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                    var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
            background-image: var(--radius-start), var(--radius-end);
        }

        &>.qqm0l.uh65i:not([disabled]):first-child:before {
            background-image: var(--radius-end);
            background-position: top right;
        }

        &>.qqm0l.uh65i:not([disabled]):last-child:before {
            background-image: var(--radius-start);
            background-position: top left;
        }

        [dir="rtl"] &>.qqm0l.uh65i:not([disabled]):first-child:before {
            background-image: var(--radius-start);
            background-position: top left;
        }

        [dir="rtl"] &>.qqm0l.uh65i:not([disabled]):last-child:before {
            background-image: var(--radius-end);
            background-position: top right;
        }

        &>.uh65i:not([disabled])+.dhabj .uh65i:not([disabled]) {
            &:before {
                background-image: var(--radius-end);
                background-position: top right;
            }
        }

        .dhabj>.uh65i:not([disabled])+& .uh65i:not([disabled]) {
            &:before {
                background-image: var(--radius-end);
                background-position: top right;
            }
        }

        &:has(.wbxly[class^="rounded-"]) .qqm0l:first-child:not(.qqm0l-active),
        &:has(.wbxly[class*=" rounded-"]) .qqm0l:first-child:not(.qqm0l-active) {
            border-bottom-color: transparent;
        }
    }

    .select {
        position: relative;
        display: inline-flex;
        width: 100%;
        flex-shrink: 1;
        cursor: pointer;
        appearance: none;
        background-color: var(--color-base-100);
        padding-inline-start: calc(0.25rem * 3);
        padding-inline-end: calc(0.25rem * 10);
        vertical-align: middle;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--color-base-content);
        webkit-user-select: none;
        user-select: none;
        height: var(--size);
        border-start-start-radius: var(--join-ss, var(--radius-field));
        border-start-end-radius: var(--join-se, var(--radius-field));
        border-end-start-radius: var(--join-es, var(--radius-field));
        border-end-end-radius: var(--join-ee, var(--radius-field));
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
        background-size: 1.3em;
        background-position: calc(100% - 0.5rem) center;
        background-repeat: no-repeat;
        touch-action: manipulation;
        text-overflow: ellipsis;
        border: var(--border) solid #0000;
        border-color: var(--input-color);
        --input-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
        }

        --size: calc(var(--size-field, 0.25rem) * 9.5);

        &:hover:not(:focus, :focus-within),
        &:has(:hover):not(:focus, :focus-within) {
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
            }
        }

        [dir="rtl"] & {
            background-position: calc(0% + 1.3em) center;
        }

        select {
            margin-inline-end: calc(0.25rem * -10);
            height: 100%;
            width: calc(100% + 2.75rem);
            appearance: none;
            padding-inline-start: calc(0.25rem * 3);
            padding-inline-end: calc(0.25rem * 10);
            background-color: transparent;
            border-style: none;

            &:focus,
            &:focus-within {
                --tw-outline-style: none;
                outline-style: none;
            }
        }

        &[multiple] {
            background-image: none;
        }

        &:focus,
        &:focus-within {
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --input-color: var(--color-primary);
            --tw-shadow-color: var(--input-color);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
            }

            outline: 1px solid var(--input-color);
            border-color: var(--input-color);
            isolation: isolate;
        }

        &:has(> select[disabled]),
        &:is(:disabled, [disabled]) {
            cursor: not-allowed;
            border-style: var(--tw-border-style);
            border-width: 0px;
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }

            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }

            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }

            &::placeholder {
                color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                }
            }
        }

        &:has(> select[disabled])>select[disabled] {
            cursor: not-allowed;
        }

        .lt6if>& {
            height: auto;
            border-style: var(--tw-border-style);
            border-width: 0px;

            &:focus,
            &:focus-within {
                --tw-shadow: 0 0 #0000;
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
                outline-style: var(--tw-outline-style);
                outline-width: 0px;
            }
        }

        &:has(> .qyew9) select {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }
        }
    }

    .advance-select-toggle {
        position: relative;
        display: inline-flex;
        width: 100%;
        flex-shrink: 1;
        cursor: pointer;
        appearance: none;
        align-items: center;
        background-color: var(--color-base-100);
        padding-inline-start: calc(0.25rem * 3);
        padding-inline-end: calc(0.25rem * 10);
        vertical-align: middle;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--color-base-content);
        webkit-user-select: none;
        user-select: none;
        height: var(--size);
        border-start-start-radius: var(--join-ss, var(--radius-field));
        border-start-end-radius: var(--join-se, var(--radius-field));
        border-end-start-radius: var(--join-es, var(--radius-field));
        border-end-end-radius: var(--join-ee, var(--radius-field));
        text-overflow: ellipsis;
        border: var(--border) solid #0000;
        border-color: var(--input-color);
        --input-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
        }

        --size: calc(var(--size-field, 0.25rem) * 9.5);

        &:focus,
        &:focus-within {
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --input-color: var(--color-primary);
            --tw-shadow-color: var(--input-color);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
            }

            outline: 1px solid var(--input-color);
            border-color: var(--input-color);
            isolation: isolate;
        }

        &:focus-visible {
            outline: unset;
        }
    }

    .lkc8r {
        position: relative;
        display: flex;
        width: 100%;
        cursor: pointer;
        align-items: center;
        border-radius: var(--radius-field);
        border-style: var(--tw-border-style);
        border-width: 1px;
        background-color: var(--color-base-100);
        padding-inline-start: calc(0.25rem * 1.5);
        padding-inline-end: calc(0.25rem * 10);
        text-align: start;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        text-wrap: nowrap;
        color: var(--color-base-content);

        &:hover {
            @media (hover: hover) {
                border-color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
                }
            }
        }

        border-color: var(--input-color);
        --input-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
        }

        &:focus,
        &:focus-within {
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --input-color: var(--color-primary);
            --tw-shadow-color: var(--input-color);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
            }

            outline: 1px solid var(--input-color);
            border-color: var(--input-color);
            isolation: isolate;
        }

        &:focus-visible {
            outline: unset;
        }
    }

    .g61h1 {
        position: fixed;
        z-index: 80;
        display: flex;
        width: 100%;
        height: 100%;
        max-width: calc(0.25rem * 96);
        flex-direction: column;
        justify-content: space-between;
        background-color: var(--color-base-100);
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    .gtnu8 {
        position: relative;
        display: flex;

        >li {
            position: relative;
            display: grid;
            flex-shrink: 0;
            align-items: center;
            grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var(--timeline-row-end, minmax(0, 1fr));
            grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var(--timeline-col-end, minmax(0, 1fr));

            >hr {
                border: none;
                width: 100%;

                @media print {
                    border: .1px solid var(--color-base-300);
                }

                &:first-child {
                    grid-column-start: 1;
                    grid-row-start: 2;
                }

                &:last-child {
                    grid-column-start: 3;
                    grid-column-end: none;
                    grid-row-start: 2;
                    grid-row-end: auto;
                }
            }
        }

        :where(hr) {
            height: 1.5px;
            border-color: transparent;
            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
        }

        &:has(.a81ch hr) {
            &:first-child {
                border-start-start-radius: 0;
                border-end-start-radius: 0;
                border-start-end-radius: var(--radius-selector);
                border-end-end-radius: var(--radius-selector);
            }

            &:last-child {
                border-start-start-radius: var(--radius-selector);
                border-end-start-radius: var(--radius-selector);
                border-start-end-radius: 0;
                border-end-end-radius: 0;
            }
        }

        &:not(:has(.a81ch)) {
            :first-child hr:last-child {
                border-start-start-radius: var(--radius-selector);
                border-end-start-radius: var(--radius-selector);
                border-start-end-radius: 0;
                border-end-end-radius: 0;
            }

            :last-child hr:first-child {
                border-start-start-radius: 0;
                border-end-start-radius: 0;
                border-start-end-radius: var(--radius-selector);
                border-end-end-radius: var(--radius-selector);
            }
        }
    }

    .kw8m5 {
        position: relative;
        display: flex;
        flex-direction: column;
        border-radius: var(--radius-box);
        --tw-border-style: solid;
        border-style: solid;
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }

        background-color: var(--color-base-100);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }

        --tw-outline-style: none;
        outline-style: none;
        box-shadow: var(--card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300));

        @supports (color: color-mix(in lab, red, red)) {
            box-shadow: var(--card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000));
        }

        border-width: var(--card-border, 0px);

        &:focus {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }

        :where(figure:first-child) {
            overflow: hidden;
            border-start-start-radius: inherit;
            border-start-end-radius: inherit;
            border-end-start-radius: unset;
            border-end-end-radius: unset;
        }

        :where(figure:last-child) {
            overflow: hidden;
            border-start-start-radius: unset;
            border-start-end-radius: unset;
            border-end-start-radius: inherit;
            border-end-end-radius: inherit;
        }

        &:where(.zrr1v) {
            border: var(--border) solid var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border: var(--border) solid color-mix(in oklab, var(--color-base-content) 20%, transparent);
            }
        }

        &.maml0 {
            display: grid;

            &:before {
                position: relative;
                grid-column-start: 1;
                grid-row-start: 1;
                border-radius: var(--radius-box);
                background-color: var(--color-neutral);
                opacity: 75%;
                content: "";
            }

            >* {
                grid-column-start: 1;
                grid-row-start: 1;
            }

            >.zt5wl {
                position: relative;
                color: var(--color-neutral-content);
            }

            :where(figure) {
                overflow: hidden;
                border-radius: inherit;
            }

            >figure img {
                height: 100%;
                object-fit: cover;
            }
        }

        figure {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
            cursor: pointer;
            user-select: none;
        }

        &:has(> :checked) {
            outline: 2px solid currentColor;
        }

        & .v8yv5 {
            border-radius: 0;

            &:first-child {
                border-top-left-radius: var(--radius-box);
                border-top-right-radius: var(--radius-box);
            }

            &:last-child {
                border-bottom-right-radius: var(--radius-box);
                border-bottom-left-radius: var(--radius-box);
            }
        }
    }

    .k6jpn {
        position: relative;
        display: inline-grid;
        cursor: pointer;
        place-content: center;
        vertical-align: middle;
        webkit-user-select: none;
        user-select: none;

        input {
            appearance: none;
            border: none;
        }

        >* {
            grid-column-start: 1;
            grid-row-start: 1;
            transition-property: transform, rotate, opacity;
            transition-duration: 0.2s;
            transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        }

        .ztk79,
        .kva3c,
        input:indeterminate~.ztk79 {
            opacity: 0%;
        }

        input:is(:checked, :indeterminate) {
            &~.b0a9u {
                opacity: 0%;
            }
        }

        input:checked~.ztk79,
        input:indeterminate~.kva3c {
            opacity: 100%;
            backface-visibility: visible;
        }
    }

    .x7a0l {
        position: static;
        display: flex;
        align-items: center;
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }

        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 2.5);
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }

        margin: calc(0.25rem * -2);
        margin-bottom: calc(0.25rem * 2);
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .ipu7g {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip-path: inset(50%);
        white-space: nowrap;
        border-width: 0;
    }

    .pzlbh {
        position: static;
        display: flex;
        align-items: center;
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }

        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 2.5);
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }

        margin-inline: calc(0.25rem * -2);
        margin-bottom: calc(0.25rem * -2) !important;
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .nozem {
        display: inline-flex;
        flex-direction: row;

        &>li:not(.bsinl)>.collapse>ul {
            position: absolute;
            margin-inline-start: calc(0.25rem * 0);
            margin-top: calc(0.25rem * 4);
            padding-block: calc(0.25rem * 2);
            padding-inline-end: calc(0.25rem * 2);
        }

        &>li>.collapse>ul {
            &:before {
                content: none;
            }
        }

        :where(& > li:not(.bsinl) > .collapse > ul) {
            border-radius: var(--radius-box);
            background-color: var(--color-base-100);
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-shadow-color: var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
            }
        }
    }

    .gchon {
        display: flex;
        flex-direction: column;

        &>li:not(.bsinl)>.collapse>ul {
            position: relative;
            margin-inline-start: calc(0.25rem * 4);
            margin-top: calc(0.25rem * 0);
            padding-block: calc(0.25rem * 0);
            padding-inline-end: calc(0.25rem * 0);
        }
    }

    .qyew9 {
        .select:has(> &) select {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }
        }

        position: relative;
        display: block;
        width: 100%;

        .select {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }

            &:has(> select[disabled]),
            &:is(:disabled, [disabled]) {
                border-style: var(--tw-border-style);
                border-width: 1px;
                background-color: transparent;
                opacity: 50%;

                &~.nwjd7 {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
                    }
                }
            }
        }

        &:focus-within,
        &:has(.select:focus) {
            .nwjd7 {
                --input-color: var(--color-primary);
                color: var(--input-color);
            }
        }

        &:has(.vpvxr) .nwjd7 {
            margin-inline-start: calc(0.25rem * 2.5);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        &:has(.ckwfe) .nwjd7 {
            margin-inline-start: calc(0.25rem * 2.5);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        &:has(.kqyeh) .nwjd7 {
            margin-inline-start: calc(0.25rem * 3);
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }

        &:has(.i3lzc) .nwjd7 {
            margin-inline-start: calc(0.25rem * 4);
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }

        &:has(.ds8l2) .nwjd7 {
            margin-inline-start: calc(0.25rem * 4.5);
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
    }

    .plb2m {
        position: relative;
        min-width: calc(0.25rem * 72);
        overflow-x: auto;
        overflow-y: hidden;
        border-radius: var(--radius-box);
        background-color: var(--color-base-200);
        padding-block: calc(0.25rem * 5);
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }

        direction: ltr;

        &:before {
            content: "";
            margin-bottom: calc(0.25rem * 4);
            display: block;
            height: calc(0.25rem * 3);
            width: calc(0.25rem * 3);
            border-radius: calc(infinity * 1px);
            opacity: 30%;
            box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
        }

        pre {
            padding-inline-end: calc(0.25rem * 5);

            &:before {
                content: "";
                margin-right: 2.2ch;
            }
        }

        pre[data-prefix] {
            &:before {
                content: attr(data-prefix);
                display: inline-block;
                width: calc(0.25rem * 8);
                text-align: right;
                opacity: 50%;
            }
        }
    }

    .xasbk {
        position: relative;
        display: flex;
        width: 100%;
        flex-direction: column;
        overflow-x: auto;
        overflow-y: hidden;
        border-radius: var(--radius-box);
        padding-top: calc(0.25rem * 5);

        &:before {
            content: "";
            margin-bottom: calc(0.25rem * 4);
            display: block;
            aspect-ratio: 1 / 1;
            height: calc(0.25rem * 3);
            flex-shrink: 0;
            align-self: flex-start;
            border-radius: calc(infinity * 1px);
            opacity: 30%;
            box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
        }

        [dir="rtl"] &:before {
            align-self: flex-end;
        }

        pre[data-prefix] {
            &:before {
                content: attr(data-prefix);
                display: inline-block;
                text-align: right;
            }
        }
    }

    .avatar {
        position: relative;
        display: inline-flex;
        vertical-align: middle;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));

        &>div {
            display: block;
            aspect-ratio: 1 / 1;
            overflow: hidden;
        }

        &>span {
            display: block;
            aspect-ratio: 1 / 1;
            overflow: hidden;
        }

        :where(&) img {
            height: 100%;
            width: 100%;
            object-fit: cover;
        }
    }

    .checkbox {
        position: relative;
        flex-shrink: 0;
        cursor: pointer;
        appearance: none;
        border-radius: var(--radius-selector);
        padding: calc(0.25rem * 1);
        vertical-align: middle;
        color: var(--color-neutral-content);
        border: var(--border) solid var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
        }

        --input-color: var(--color-neutral);
        box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
        0 0 #0000 inset,
        0 0 #0000;
        transition: background-color 0.2s,
        box-shadow 0.2s;
        --size: calc(var(--size-selector, 0.25rem) * 6);
        width: var(--size);
        height: var(--size);
        background-size: auto,
        calc(var(--noise) * 100%);
        background-image: none,
        var(--fx-noise);

        &:before {
            --tw-content: "";
            content: var(--tw-content);
            display: block;
            width: 100%;
            height: 100%;
            rotate: 45deg;
            background-color: currentColor;
            opacity: 0%;
            transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
            transition-delay: 0.1s;
            clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
            box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
            font-size: 1rem;
            line-height: 0.75;
        }

        &:focus-visible {
            outline: 2px solid var(--input-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
            }

            outline-offset: 0px;
        }

        &:checked,
        &[aria-checked="true"] {
            background-color: var(--input-color, #0000);
            border-color: var(--input-color, #0000);
            box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000);
            }

            &:before {
                clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
                opacity: 100%;
            }

            @media (forced-colors: active) {
                &:before {
                    rotate: 0deg;
                    background-color: transparent;
                    --tw-content: "âœ”ï¸Ž";
                    clip-path: none;
                }
            }

            @media print {
                &:before {
                    rotate: 0deg;
                    background-color: transparent;
                    --tw-content: "âœ”ï¸Ž";
                    clip-path: none;
                }
            }
        }

        &:indeterminate {
            background-color: var(--color-neutral);

            &:before {
                rotate: 0deg;
                opacity: 100%;
                translate: 0 -35%;
                clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
            }
        }

        &:disabled {
            cursor: not-allowed;
            opacity: 50%;
        }
    }

    .radio {
        position: relative;
        flex-shrink: 0;
        cursor: pointer;
        appearance: none;
        border-radius: calc(infinity * 1px);
        padding: calc(0.25rem * 1);
        vertical-align: middle;
        border: var(--border) solid var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
        }

        box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
        --size: calc(var(--size-selector, 0.25rem) * 6);
        width: var(--size);
        height: var(--size);
        color: var(--input-color, var(--color-neutral));

        &:before {
            display: block;
            width: 100%;
            height: 100%;
            border-radius: calc(infinity * 1px);
            --tw-content: "";
            content: var(--tw-content);
            background-size: auto, calc(var(--noise) * 100%);
            background-image: none, var(--fx-noise);
        }

        &:focus-visible {
            outline: 2px solid var(--input-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                outline: 2px solid color-mix(in oklab, var(--input-color, var(--color-neutral)) 30%, #0000);
            }

            outline-offset: 0px;
        }

        &:checked,
        &[aria-checked="true"] {
            animation: radio 0.2s ease-out;
            border-color: currentColor;
            background-color: var(--color-base-100);
            box-shadow: 0 1px 2px 0 var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                box-shadow: 0 1px 2px 0 color-mix(in oklab, var(--color-base-300) 30%, #0000);
            }

            &:before {
                background-color: currentColor;
                box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
            }

            @media (forced-colors: active) {
                &:before {
                    outline-style: var(--tw-outline-style);
                    outline-width: 1px;
                    outline-offset: calc(1px * -1);
                }
            }

            @media print {
                &:before {
                    outline: 0.25rem solid;
                    outline-offset: -1rem;
                }
            }
        }

        &:disabled {
            cursor: not-allowed;
            opacity: 50%;
        }
    }

    .krv9i {
        position: relative;
        display: inline;
        width: fit-content;
        border-radius: var(--radius-sm);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }

        padding-inline: calc(0.25rem * 1.5);
        padding-block: calc(0.25rem * 0.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .fh7x2 {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: calc(0.25rem * 6);

        :where(&)+.xue9x {
            padding-top: 0;
        }
    }

    .carousel {
        position: relative;
        width: 100%;
        overflow: hidden;
        border-radius: var(--radius-2xl);
    }

    .ikmo8 {
        position: relative;
        width: 100%;
        border-radius: var(--radius-box);
        padding: calc(0.25rem * 4);
        color: var(--color-neutral-content);
        text-align: start;
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        background-color: var(--alert-bg);
        border: var(--border) solid var(--alert-border);
        box-shadow: 0 0.1875rem 0 -0.125rem oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset;
        --alert-bg: var(--alert-color, var(--color-neutral));
        --alert-border: var(--alert-color, var(--color-neutral));

        &.t1mbz {
            color: var(--alert-color, var(--color-neutral));
            --alert-bg: transparent;
            box-shadow: none;
            background-image: none;
        }

        &.p11dm {
            color: var(--alert-color, var(--color-neutral));
            --alert-bg: var(--alert-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --alert-bg: color-mix(in oklab, var(--alert-color, var(--color-neutral)) 10%, var(--color-base-100));
            }

            box-shadow: none;
            background-image: none;
        }
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .q2ebt {
        position: static;
    }

    .sticky {
        position: sticky;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .dlpia {
        inset-inline: calc(0.25rem * 0);
        top: calc(0.25rem * 0);
        max-height: calc(0.25rem * 60);
        max-width: none;
        --tw-translate-y: -100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-timing-function: var(--ease-in-out);
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 300ms;
        --tw-duration: 300ms;
        --tw-ease: var(--ease-in-out);
    }

    .pyeiv {
        inset-inline: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
        max-height: calc(0.25rem * 60);
        max-width: none;
        --tw-translate-y: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-timing-function: var(--ease-in-out);
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 300ms;
        --tw-duration: 300ms;
        --tw-ease: var(--ease-in-out);
    }

    .d47px {
        inset-inline: calc(var(--spacing) * 0);
    }

    .n2ww5 {
        inset-block: calc(var(--spacing) * 0);
    }

    .ii55v {
        inset-inline-start: auto;
        inset-inline-end: calc(0.25rem * 0);
        top: calc(0.25rem * 0);
        --tw-translate-x: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-timing-function: var(--ease-in-out);
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 300ms;
        --tw-duration: 300ms;
        --tw-ease: var(--ease-in-out);

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-translate-x: -100%;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .yp5v7 {
        inset-inline-start: calc(0.25rem * 0);
        inset-inline-end: auto;
        top: calc(0.25rem * 0);
        --tw-translate-x: -100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-timing-function: var(--ease-in-out);
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 300ms;
        --tw-duration: 300ms;
        --tw-ease: var(--ease-in-out);

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-translate-x: 100%;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .-start-1 {
        inset-inline-start: calc(var(--spacing) * -1);
    }

    .ny7vz {
        inset-inline-start: calc(var(--spacing) * -1.5);
    }

    .ka39j {
        inset-inline-start: calc(calc(1/5 * 100%) * -1);
    }

    .xl6g9 {
        inset-inline-start: calc(var(--spacing) * -6);
    }

    .fphly {
        inset-inline-start: calc(var(--spacing) * -12);
    }

    .dsgad {
        inset-inline-start: calc(var(--spacing) * -20);
    }

    .-start-\[25\%\] {
        inset-inline-start: calc(25% * -1);
    }

    .hh3vt {
        inset-inline-start: calc(var(--spacing) * 0);
    }

    .w4ruy {
        inset-inline-start: calc(1/2 * 100%);
    }

    .z87gh {
        inset-inline-start: calc(1/10 * 100%);
    }

    .topjx {
        inset-inline-start: calc(var(--spacing) * 2);
    }

    .cq13d {
        inset-inline-start: calc(var(--spacing) * 3);
    }

    .ccdut {
        inset-inline-start: calc(var(--spacing) * 5);
    }

    .go5fp {
        inset-inline-start: calc(var(--spacing) * 6);
    }

    .z9474 {
        inset-inline-start: calc(var(--spacing) * 8);
    }

    .ybuxg {
        inset-inline-start: calc(var(--spacing) * 13);
    }

    .zkngd {
        inset-inline-start: calc(var(--spacing) * 15);
    }

    .ds88o {
        inset-inline-start: calc(var(--spacing) * 21);
    }

    .bkcn2 {
        inset-inline-start: calc(var(--spacing) * 23);
    }

    .start-\[4\%\] {
        inset-inline-start: 4%;
    }

    .start-\[8\%\] {
        inset-inline-start: 8%;
    }

    .start-\[13\%\] {
        inset-inline-start: 13%;
    }

    .start-\[15\%\] {
        inset-inline-start: 15%;
    }

    .start-\[20\%\] {
        inset-inline-start: 20%;
    }

    .start-\[23\%\] {
        inset-inline-start: 23%;
    }

    .start-\[25\%\] {
        inset-inline-start: 25%;
    }

    .start-\[30\%\] {
        inset-inline-start: 30%;
    }

    .start-\[45\%\] {
        inset-inline-start: 45%;
    }

    .start-\[50\%\] {
        inset-inline-start: 50%;
    }

    .start-\[51\%\] {
        inset-inline-start: 51%;
    }

    .-end-1 {
        inset-inline-end: calc(var(--spacing) * -1);
    }

    .gzeiu {
        inset-inline-end: calc(var(--spacing) * -3);
    }

    .yd7i9 {
        inset-inline-end: calc(var(--spacing) * -6);
    }

    .rjodn {
        inset-inline-end: calc(var(--spacing) * -60);
    }

    .-end-\[15\%\] {
        inset-inline-end: calc(15% * -1);
    }

    .-end-\[19\%\] {
        inset-inline-end: calc(19% * -1);
    }

    .-end-\[23\%\] {
        inset-inline-end: calc(23% * -1);
    }

    .-end-\[27\%\] {
        inset-inline-end: calc(27% * -1);
    }

    .-end-\[28\%\] {
        inset-inline-end: calc(28% * -1);
    }

    .-end-\[29\%\] {
        inset-inline-end: calc(29% * -1);
    }

    .-end-\[68\%\] {
        inset-inline-end: calc(68% * -1);
    }

    .end-0 {
        inset-inline-end: calc(var(--spacing) * 0);
    }

    .vixqf {
        inset-inline-end: calc(var(--spacing) * 2);
    }

    .ka9zp {
        inset-inline-end: calc(var(--spacing) * 3);
    }

    .vlfi3 {
        inset-inline-end: calc(var(--spacing) * 4);
    }

    .zvrs0 {
        inset-inline-end: calc(var(--spacing) * 8);
    }

    .i3w89 {
        inset-inline-end: calc(var(--spacing) * 15);
    }

    .o4hmf {
        inset-inline-end: calc(var(--spacing) * 20);
    }

    .d97lu {
        inset-inline-end: calc(var(--spacing) * 27);
    }

    .end-\[-20\%\] {
        inset-inline-end: -20%;
    }

    .end-\[4\%\] {
        inset-inline-end: 4%;
    }

    .end-\[8\%\] {
        inset-inline-end: 8%;
    }

    .end-\[15\%\] {
        inset-inline-end: 15%;
    }

    .end-\[21\%\] {
        inset-inline-end: 21%;
    }

    .end-\[35\%\] {
        inset-inline-end: 35%;
    }

    .-top-1 {
        top: calc(var(--spacing) * -1);
    }

    .hszq6 {
        top: calc(calc(1/5 * 100%) * -1);
    }

    .xmdec {
        top: calc(var(--spacing) * -3);
    }

    .tn3ia {
        top: calc(var(--spacing) * -5);
    }

    .vdplx {
        top: calc(var(--spacing) * -8);
    }

    .u96kk {
        top: calc(var(--spacing) * -10);
    }

    .vnbpw {
        top: calc(var(--spacing) * -30);
    }

    .cri0r {
        top: calc(var(--spacing) * -35);
    }

    .mcfch {
        top: calc(var(--spacing) * -50);
    }

    .s9hg4 {
        top: calc(var(--spacing) * -85);
    }

    .-top-\[8\%\] {
        top: calc(8% * -1);
    }

    .-top-\[12\%\] {
        top: calc(12% * -1);
    }

    .-top-\[23\%\] {
        top: calc(23% * -1);
    }

    .-top-\[33\%\] {
        top: calc(33% * -1);
    }

    .top-0 {
        top: calc(var(--spacing) * 0);
    }

    .top-1\/2 {
        top: calc(1/2 * 100%);
    }

    .fr5hc {
        top: calc(1/5 * 100%);
    }

    .ems5s {
        top: calc(var(--spacing) * 2);
    }

    .uj5id {
        top: calc(var(--spacing) * 3);
    }

    .m7jfd {
        top: calc(var(--spacing) * 4);
    }

    .xw4qv {
        top: calc(var(--spacing) * 5);
    }

    .kcoxq {
        top: calc(var(--spacing) * 6);
    }

    .dmj3d {
        top: calc(var(--spacing) * 8);
    }

    .ccvmh {
        top: calc(var(--spacing) * 10);
    }

    .x8o5z {
        top: calc(var(--spacing) * 12);
    }

    .o2zb2 {
        top: calc(var(--spacing) * 14);
    }

    .pa36t {
        top: calc(var(--spacing) * 15);
    }

    .gapim {
        top: calc(var(--spacing) * 19);
    }

    .p0jln {
        top: calc(var(--spacing) * 34);
    }

    .top-\[8\%\] {
        top: 8%;
    }

    .top-\[15\%\] {
        top: 15%;
    }

    .top-\[20\%\] {
        top: 20%;
    }

    .top-\[22\%\] {
        top: 22%;
    }

    .top-\[24\%\] {
        top: 24%;
    }

    .top-\[26\%\] {
        top: 26%;
    }

    .top-\[27\%\] {
        top: 27%;
    }

    .top-\[30\%\] {
        top: 30%;
    }

    .top-\[40\%\] {
        top: 40%;
    }

    .top-\[44\%\] {
        top: 44%;
    }

    .top-\[50\%\] {
        top: 50%;
    }

    .top-\[66\%\] {
        top: 66%;
    }

    .top-\[80\%\] {
        top: 80%;
    }

    .top-full {
        top: 100%;
    }

    .pdrdf {
        right: calc(var(--spacing) * -8);
    }

    .-right-\[10\%\] {
        right: calc(10% * -1);
    }

    .e3kwk {
        right: calc(var(--spacing) * 0);
    }

    .octca {
        right: calc(var(--spacing) * 4);
    }

    .m7iq2 {
        right: calc(var(--spacing) * 6);
    }

    .accz3 {
        right: calc(var(--spacing) * 8);
    }

    .ir54e {
        right: calc(var(--spacing) * 17);
    }

    .-bottom-1 {
        bottom: calc(var(--spacing) * -1);
    }

    .rna9p {
        bottom: calc(var(--spacing) * -1.5);
    }

    .dl2qw {
        bottom: calc(var(--spacing) * -2);
    }

    .edxpy {
        bottom: calc(calc(2/5 * 100%) * -1);
    }

    .pfp19 {
        bottom: calc(var(--spacing) * -3);
    }

    .ibggy {
        bottom: calc(var(--spacing) * -5);
    }

    .mwnvj {
        bottom: calc(var(--spacing) * -6);
    }

    .lw5jv {
        bottom: calc(var(--spacing) * -7);
    }

    .h7uov {
        bottom: calc(var(--spacing) * -8);
    }

    .v6hby {
        bottom: calc(var(--spacing) * -13);
    }

    .rj30y {
        bottom: calc(var(--spacing) * -15);
    }

    .twvec {
        bottom: calc(var(--spacing) * -20);
    }

    .gqu2m {
        bottom: calc(var(--spacing) * -21);
    }

    .r1rwk {
        bottom: calc(var(--spacing) * -50);
    }

    .-bottom-\[8\%\] {
        bottom: calc(8% * -1);
    }

    .-bottom-\[16\%\] {
        bottom: calc(16% * -1);
    }

    .-bottom-\[40\%\] {
        bottom: calc(40% * -1);
    }

    .r0zdl {
        bottom: calc(var(--spacing) * 0);
    }

    .pl2fi {
        bottom: calc(var(--spacing) * 1);
    }

    .t3b03 {
        bottom: calc(1/5 * 100%);
    }

    .r77xt {
        bottom: calc(var(--spacing) * 2);
    }

    .kv6zu {
        bottom: calc(var(--spacing) * 3);
    }

    .zet3d {
        bottom: calc(var(--spacing) * 6);
    }

    .s2bjy {
        bottom: calc(var(--spacing) * 8);
    }

    .med5d {
        bottom: calc(var(--spacing) * 13);
    }

    .dvnn1 {
        bottom: calc(var(--spacing) * 14);
    }

    .j0x7m {
        bottom: calc(var(--spacing) * 22);
    }

    .ijxqt {
        bottom: calc(var(--spacing) * 43);
    }

    .bottom-\[20\%\] {
        bottom: 20%;
    }

    .bottom-full {
        bottom: 100%;
    }

    .-left-\[10\%\] {
        left: calc(10% * -1);
    }

    .left-0 {
        left: calc(var(--spacing) * 0);
    }

    .fs4jw {
        left: calc(1/2 * 100%);
    }

    .pt7ow {
        left: calc(var(--spacing) * 6);
    }

    .ha6h4 {
        left: calc(var(--spacing) * 13);
    }

    .krvvf {
        left: calc(var(--spacing) * 25);
    }

    .left-\[18px\] {
        left: 18px;
    }

    .left-\[27\%\] {
        left: 27%;
    }

    .left-\[30\%\] {
        left: 30%;
    }

    .lt6if {
        display: inline-flex;
        width: 100%;
        flex-shrink: 1;
        cursor: text;
        appearance: none;
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 3);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--color-base-content);

        &::placeholder {
            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }
        }

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        border: var(--border) solid #0000;
        height: var(--size);
        touch-action: manipulation;
        border-start-start-radius: var(--join-ss, var(--radius-field));
        border-start-end-radius: var(--join-se, var(--radius-field));
        border-end-start-radius: var(--join-es, var(--radius-field));
        border-end-end-radius: var(--join-ee, var(--radius-field));
        border-color: var(--input-color);
        --input-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
        }

        --size: calc(var(--size-field, 0.25rem) * 9.5);

        &:hover:not(:focus, :focus-within),
        &:has(:hover):not(:focus, :focus-within) {
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
            }
        }

        &:where(input) {
            display: inline-block;
        }

        :where(input:not([type="checkbox"]):not([type="radio"])) {
            display: inline-block;
            height: 100%;
            width: 100%;
            appearance: none;
            background-color: transparent;
            border: none;

            &:focus,
            &:focus-within,
            &:focus-visible {
                --tw-outline-style: none;
                outline-style: none;
            }
        }

        &:focus,
        &:focus-within {
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --input-color: var(--color-primary);
            --tw-shadow-color: var(--input-color);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
            }

            outline: 1px solid var(--input-color);
            isolation: isolate;
        }

        &:has(> input[disabled]),
        &:is(:disabled, [disabled]) {
            cursor: not-allowed;
            border-style: var(--tw-border-style);
            border-width: 0px;
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }

            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }

            box-shadow: none;
        }

        &:has(> input[disabled])>input[disabled] {
            cursor: not-allowed;
        }

        &::-webkit-date-and-time-value {
            text-align: inherit;
        }

        &[type="number"] {
            &::-webkit-inner-spin-button {
                margin-block: calc(0.25rem * -3);
                margin-inline-end: calc(0.25rem * -3);
            }
        }

        &:has(> .r48nb) input {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }
        }
    }

    .wz3vx {
        display: inline-flex;
        min-height: calc(0.25rem * 20);
        width: 100%;
        flex-shrink: 1;
        appearance: none;
        border-radius: var(--radius-field);
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 2);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--color-base-content);

        &::placeholder {
            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }
        }

        &:hover {
            @media (hover: hover) {
                border-color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
                }
            }
        }

        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }

        border: var(--border) solid #0000;
        border-color: var(--input-color);
        touch-action: manipulation;
        --input-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            --input-color: color-mix(in oklab, var(--color-base-content) 40%, #0000);
        }

        :where(textarea) {
            appearance: none;
            background-color: transparent;
            border: none;

            &:focus,
            &:focus-within {
                --tw-outline-style: none;
                outline-style: none;
            }
        }

        &:focus,
        &:focus-within {
            --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --input-color: var(--color-primary);
            --tw-shadow-color: var(--input-color);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, var(--input-color) 30%, #0000);
            }

            outline: 1px solid var(--input-color);
            border-color: var(--input-color);
            isolation: isolate;
        }

        &:has(> textarea[disabled]),
        &:is(:disabled, [disabled]) {
            cursor: not-allowed;
            border-color: var(--color-base-200);
            background-color: var(--color-base-200);
            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
            }

            &::placeholder {
                color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
                }
            }
        }

        &:has(> textarea[disabled])>textarea[disabled] {
            cursor: not-allowed;
        }

        &:has(> textarea) {
            padding: calc(0.25rem * 0);

            textarea {
                height: auto;
                min-height: calc(0.25rem * 20);
                width: 100%;

                &:first-child {
                    padding-block: calc(0.25rem * 2);
                    padding-inline-start: calc(0.25rem * 4);
                }

                &:nth-child(2) {
                    padding-block: calc(0.25rem * 2);
                }

                &:last-child {
                    padding-block: calc(0.25rem * 2);
                    padding-inline-end: calc(0.25rem * 4);
                }
            }
        }

        &:has(> .f7bj4) {
            padding: calc(0.25rem * 0);

            :where(.f7bj4:first-child)>textarea {
                padding-block: calc(0.25rem * 2);
                padding-inline-start: calc(0.25rem * 4);
            }

            :where(.f7bj4:nth-child(2))>textarea {
                padding-block: calc(0.25rem * 2);
            }

            :where(.f7bj4:last-child)>textarea {
                padding-block: calc(0.25rem * 2);
                padding-inline-end: calc(0.25rem * 4);
            }

            :where(.f7bj4:nth-child(2)) .amw3a,
            :where(.f7bj4:last-child) .amw3a {
                margin-inline-start: calc(0.25rem * 0);
            }

            & *>textarea {
                width: 100%;
                height: 100%;
                min-height: calc(0.25rem * 20);
            }
        }

        &:has(> .f7bj4) textarea {
            &::placeholder {
                color: transparent;
            }

            &:focus {
                &::placeholder {
                    color: var(--color-base-content);

                    @supports (color: color-mix(in lab, red, red)) {
                        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
                    }
                }
            }
        }
    }

    .gmf3v {
        --btn-bg: var(--btn-color, var(--color-neutral));

        @supports (color: color-mix(in lab, red, red)) {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
        }

        isolation: isolate;

        .btn-soft& {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
            }
        }

        .pqebt& {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
            }
        }

        .btn-text& {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
            }
        }

        .eficd& {
            --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
                0px 2px 4px -2px var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
                    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
            }

            background-position: 99% center;
        }
    }

    .qqrnh {
        isolation: isolate;
    }

    .taiar {
        display: inline-grid;
        place-items: center;
        align-items: flex-end;

        &>* {
            grid-column-start: 1;
            grid-row-start: 1;
            height: 100%;
            width: 100%;
            opacity: 60%;
            transform: translateY(14%) scale(0.9);
            z-index: 1;
        }

        &>*:nth-child(2) {
            opacity: 80%;
            transform: translateY(7%) scale(0.95);
            z-index: 2;
        }

        &>*:nth-child(1) {
            opacity: 100%;
            transform: translateY(0) scale(1) translateX(0);
            z-index: 3;
        }
    }

    .dropdown-menu {
        z-index: 10;
        margin-top: calc(0.25rem * 2);

        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(0.25rem * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(0.25rem * 1) * calc(1 - var(--tw-space-y-reverse)));
        }

        border-radius: var(--radius-box);
        background-color: var(--color-base-100);
        padding: calc(0.25rem * 2);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        text-wrap: nowrap;
        opacity: 0%;
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
        0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow),
        var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow),
        var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }

        transition-property: opacity,
        margin;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 300ms;
        --tw-duration: 300ms;
    }

    .advance-select-menu {
        z-index: 10;
        width: 100%;

        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(0.25rem * 0.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(0.25rem * 0.5) * calc(1 - var(--tw-space-y-reverse)));
        }

        border-radius: var(--radius-box);
        background-color: var(--color-base-100);
        background-image: none;
        padding: calc(0.25rem * 2);
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
        0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow),
        var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow),
        var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    .pull-up {
        .avatar {
            transition-property: all;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 250ms;
            --tw-duration: 250ms;
            --tw-ease: var(--ease-in);

            &:hover {
                z-index: 30;
                --tw-translate-y: calc(0.25rem * -1);
                translate: var(--tw-translate-x) var(--tw-translate-y);
                transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
                border-radius: calc(infinity * 1px);
                --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
                --tw-shadow-color: var(--color-base-300);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
                }
            }
        }
    }

    .x9hij {
        &>* {
            transform: translateY(14%) scale(0.9) translateX(14%);
            z-index: 1;
        }

        &>*:nth-child(2) {
            transform: translateY(7%) scale(0.95) translateX(7%);
            z-index: 2;
        }

        &.jtq8h:hover>* {
            transform: translateY(7%) scale(1) translateX(7%);
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 300ms;
            --tw-duration: 300ms;
            --tw-ease: var(--ease-in-out);
        }
    }

    .afovk {
        &>* {
            transform: translateY(14%) scale(0.9) translateX(-14%);
            z-index: 1;
        }

        &>*:nth-child(2) {
            transform: translateY(7%) scale(0.95) translateX(-7%);
            z-index: 2;
        }

        &.jtq8h:hover>* {
            transform: translateY(7%) scale(1) translateX(-7%);
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 300ms;
            --tw-duration: 300ms;
            --tw-ease: var(--ease-in-out);
        }
    }

    .pivoe {
        &>* {
            transform: translateY(-14%) scale(0.9);
            z-index: 1;
        }

        &>*:nth-child(2) {
            transform: translateY(-7%) scale(0.95);
            z-index: 2;
        }

        &.jtq8h:hover>* {
            transform: translateY(-7%) scale(1);
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 300ms;
            --tw-duration: 300ms;
            --tw-ease: var(--ease-in-out);
        }
    }

    .vplnd {
        &>* {
            transform: translateY(-14%) scale(0.9) translateX(14%);
            z-index: 1;
        }

        &>*:nth-child(2) {
            transform: translateY(-7%) scale(0.95) translateX(7%);
            z-index: 2;
        }

        &.jtq8h:hover>* {
            transform: translateY(-7%) scale(1) translateX(7%);
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 300ms;
            --tw-duration: 300ms;
            --tw-ease: var(--ease-in-out);
        }
    }

    .lrro1 {
        &>* {
            transform: translateY(-14%) scale(0.9) translateX(-14%);
            z-index: 1;
        }

        &>*:nth-child(2) {
            transform: translateY(-7%) scale(0.95) translateX(-7%);
            z-index: 2;
        }

        &.jtq8h:hover>* {
            transform: translateY(-7%) scale(1) translateX(-7%);
            transition-property: transform, translate, scale, rotate;
            transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
            transition-timing-function: var(--ease-in-out);
            transition-duration: var(--tw-duration, var(--default-transition-duration));
            transition-duration: 300ms;
            --tw-duration: 300ms;
            --tw-ease: var(--ease-in-out);
        }
    }

    .ybykt {
        &>* {
            transform: translateX(14%) scale(0.9);
            z-index: 1;
        }

        &>*:nth-child(2) {
            transform: translateX(7%) scale(0.95);
            z-index: 2;
        }
    }

    .sfcdr {
        &>* {
            transform: translateX(-14%) scale(0.9);
            z-index: 1;
        }

        &>*:nth-child(2) {
            transform: translateX(-7%) scale(0.95);
            z-index: 2;
        }
    }

    .-z-1 {
        z-index: calc(1 * -1);
    }

    .z-0 {
        z-index: 0;
    }

    .z-1 {
        z-index: 1;
    }

    .entt1 {
        z-index: 2;
    }

    .cihof {
        z-index: 8;
    }

    .f39un {
        z-index: 10;
    }

    .dem4d {
        z-index: 11;
    }

    .bhmy5 {
        z-index: 20;
    }

    .k4s2g {
        z-index: 40;
    }

    .htglp {
        z-index: 50;
    }

    .nsqe1 {
        z-index: 80;
    }

    .z-\[3\] {
        z-index: 3;
    }

    .z-\[9999\] {
        z-index: 9999;
    }

    .order-1 {
        order: 1;
    }

    .order-2 {
        order: 2;
    }

    .zwhpa {
        grid-column: span 1 / span 1;
    }

    .e5az9 {
        grid-column: span 2 / span 2;
    }

    .lczze {
        grid-column: span 3 / span 3;
    }

    .iyuo5 {
        grid-column: span 5 / span 5;
    }

    .cz7uh {
        grid-column: span 12 / span 12;
    }

    .r8oze {

        &,
        &.obe7e {
            --timeline-row-start: 0;

            .rlhl2 {
                grid-column-start: 1;
                grid-column-end: 4;
                grid-row-start: 3;
                grid-row-end: 4;
                margin: calc(0.25rem * 2);
                align-self: flex-start;
                justify-self: center;
            }

            li:has(.rlhl2) {
                .efh7m {
                    grid-column-start: none;
                    grid-row-start: auto;
                }
            }
        }

        &.ck9cm {
            >li {
                --timeline-col-start: 0;
            }

            .rlhl2 {
                grid-column-start: 3;
                grid-column-end: 4;
                grid-row-start: 1;
                grid-row-end: 4;
                align-self: center;
                justify-self: flex-start;
            }

            li:has(.rlhl2) {
                .efh7m {
                    grid-column-start: auto;
                    grid-row-start: none;
                }
            }

            .nxvn2 {
                .rlhl2 {
                    grid-column-start: 3;
                    grid-column-end: 4;
                    grid-row-start: 3;
                }

                .efh7m {
                    grid-column-start: 3;
                    grid-column-end: 4;
                    grid-row-start: 1;
                    grid-row-end: 2;
                }
            }
        }
    }

    .efh7m {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 3;
        grid-row-end: 4;
        margin: calc(0.25rem * 2);
        align-self: flex-start;
        justify-self: center;
    }

    .rlhl2 {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 2;
        margin: calc(0.25rem * 2);
        align-self: flex-end;
        justify-self: center;
    }

    .obe7e {
        flex-direction: row;

        >li {
            align-items: center;

            >hr {
                height: 1.5px;
                min-height: calc(0.25rem * 0);
                width: 100%;

                &:first-child {
                    grid-column-start: 1;
                    grid-row-start: 2;
                }

                &:last-child {
                    grid-column-start: 3;
                    grid-column-end: none;
                    grid-row-start: 2;
                    grid-row-end: auto;
                }
            }
        }

        .rlhl2 {
            grid-column-start: 1;
            grid-column-end: 4;
            grid-row-start: 1;
            grid-row-end: 2;
            align-self: flex-end;
            justify-self: center;
        }

        .efh7m {
            grid-column-start: 1;
            grid-column-end: 4;
            grid-row-start: 3;
            grid-row-end: 4;
            align-self: flex-start;
            justify-self: center;
        }

        &:has(.a81ch) {
            >li {
                >hr {
                    &:first-child {
                        border-start-start-radius: 0;
                        border-end-start-radius: 0;
                        border-start-end-radius: var(--radius-selector);
                        border-end-end-radius: var(--radius-selector);
                    }

                    &:last-child {
                        border-start-start-radius: var(--radius-selector);
                        border-end-start-radius: var(--radius-selector);
                        border-start-end-radius: 0;
                        border-end-end-radius: 0;
                    }
                }
            }
        }

        &:not(:has(.a81ch)) {
            :first-child {
                >hr:last-child {
                    border-start-start-radius: var(--radius-selector);
                    border-end-start-radius: var(--radius-selector);
                    border-start-end-radius: 0;
                    border-end-end-radius: 0;
                }
            }

            :last-child {
                >hr:first-child {
                    border-start-start-radius: 0;
                    border-end-start-radius: 0;
                    border-start-end-radius: var(--radius-selector);
                    border-end-end-radius: var(--radius-selector);
                }
            }
        }
    }

    .ck9cm {
        flex-direction: column;

        >li {
            justify-items: center;
            --timeline-row-start: minmax(0, 1fr);
            --timeline-row-end: minmax(0, 1fr);

            >hr {
                height: 100%;
                width: 1.5px;

                &:first-child {
                    grid-column-start: 2;
                    grid-row-start: 1;
                }

                &:last-child {
                    grid-column-start: 2;
                    grid-column-end: auto;
                    grid-row-start: 3;
                    grid-row-end: none;
                }
            }
        }

        .rlhl2 {
            grid-column-start: 1;
            grid-column-end: 2;
            grid-row-start: 1;
            grid-row-end: 4;
            align-self: center;
            justify-self: flex-end;
        }

        .efh7m {
            grid-column-start: 3;
            grid-column-end: 4;
            grid-row-start: 1;
            grid-row-end: 4;
            align-self: center;
            justify-self: flex-start;
        }

        &:has(.a81ch) {
            >li {
                >hr {
                    &:first-child {
                        border-top-left-radius: 0;
                        border-top-right-radius: 0;
                        border-bottom-right-radius: var(--radius-selector);
                        border-bottom-left-radius: var(--radius-selector);
                    }

                    &:last-child {
                        border-top-left-radius: var(--radius-selector);
                        border-top-right-radius: var(--radius-selector);
                        border-bottom-right-radius: 0;
                        border-bottom-left-radius: 0;
                    }
                }
            }
        }

        &:not(:has(.a81ch)) {
            :first-child {
                >hr:last-child {
                    border-top-left-radius: var(--radius-selector);
                    border-top-right-radius: var(--radius-selector);
                    border-bottom-right-radius: 0;
                    border-bottom-left-radius: 0;
                }
            }

            :last-child {
                >hr:first-child {
                    border-top-left-radius: 0;
                    border-top-right-radius: 0;
                    border-bottom-right-radius: var(--radius-selector);
                    border-bottom-left-radius: var(--radius-selector);
                }
            }
        }

        &:where(.gig5s) {
            >li {
                --timeline-col-start: minmax(0, 1fr);
                --timeline-row-start: 0.5rem;
            }
        }
    }

    .bwtij {
        grid-column-start: 2;
        grid-row: span 3 / span 3;
        grid-row-start: 1;
        place-self: center;
        justify-self: flex-end;
    }

    .a81ch {
        grid-column-start: 2;
        grid-row-start: 2;
        display: flex;
        width: calc(0.25rem * 9);
        height: calc(0.25rem * 9);
        align-items: center;
        justify-content: center;
    }

    .ktycg {
        grid-column-start: 1;
        margin-top: calc(0.25rem * 3);
        white-space: nowrap;
    }

    .y2kpk {
        grid-column-start: 1;
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        white-space: nowrap;
        color: var(--color-base-content);
    }

    .pkhcv {
        grid-column-start: 1;
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        white-space: nowrap;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }

    .y0b1r {
        grid-column-start: 1;
        white-space: nowrap;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }
    }

    .zke0u {
        width: 100%;

        @media (width >=40rem) {
            max-width: 40rem;
        }

        @media (width >=48rem) {
            max-width: 48rem;
        }

        @media (width >=64rem) {
            max-width: 64rem;
        }

        @media (width >=80rem) {
            max-width: 80rem;
        }

        @media (width >=96rem) {
            max-width: 96rem;
        }
    }

    .qjc5q {
        margin: calc(var(--spacing) * 1);
    }

    .qgmi9 {
        margin: calc(var(--spacing) * 2);
    }

    .zekai {
        margin: calc(var(--spacing) * 3);
    }

    .gdifj {
        margin: calc(var(--spacing) * 4);
    }

    .pzzdr {
        display: flex;
        flex-wrap: wrap;

        input[type="radio"] {
            width: auto;
        }

        input {
            overflow: hidden;
            opacity: 100%;
            scale: 1;
            border-width: 0;
            transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;

            &:not(:last-child) {
                margin-inline-end: calc(0.25rem * 1);
            }

            &.wgs2k {
                aspect-ratio: 1 / 1;

                &::after {
                    content: "Ã—";
                }
            }
        }

        &:not(:has(input:checked:not(.wgs2k))) {

            .wgs2k,
            input[type="reset"] {
                scale: 0;
                border-width: 0;
                margin-inline: calc(0.25rem * 0);
                width: calc(0.25rem * 0);
                padding-inline: calc(0.25rem * 0);
                opacity: 0%;
            }
        }

        &:has(input:checked:not(.wgs2k)) {
            input:not(:checked, .wgs2k, input[type="reset"]) {
                scale: 0;
                border-width: 0;
                margin-inline: calc(0.25rem * 0);
                width: calc(0.25rem * 0);
                padding-inline: calc(0.25rem * 0);
                opacity: 0%;
            }
        }
    }

    .l4n77 {
        margin-inline: calc(0.25rem * 2);
        display: inline-flex;
        flex-shrink: 0;
        align-items: center;
        justify-content: center;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }

    .u1v1p {
        margin-inline: auto;
        width: 100%;

        @media (width >=40rem) {
            max-width: calc(0.25rem * 128);
        }
    }

    .-mx-2 {
        margin-inline: calc(var(--spacing) * -2);
    }

    .vge29 {
        margin-inline: calc(var(--spacing) * -3);
    }

    .mras3 {
        margin-inline: calc(var(--spacing) * -6);
    }

    .o0q3u {
        margin-inline: calc(var(--spacing) * 3);
    }

    .cbgw6 {
        margin-inline: calc(var(--spacing) * 4);
    }

    .znuns {
        margin-inline: calc(var(--spacing) * 12);
    }

    .bd5zv {
        margin-inline: auto;
    }

    .ynugf {
        padding-inline: calc(0.25rem * 4);
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --size: calc(var(--size-field, 0.25rem) * 11.5);

        &[type="number"] {
            &::-webkit-inner-spin-button {
                margin-block: calc(0.25rem * -3);
                margin-inline-end: calc(0.25rem * -3);
            }
        }
    }

    .i6t40 {
        padding-inline: calc(0.25rem * 3);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --size: calc(var(--size-field, 0.25rem) * 9.5);

        &[type="number"] {
            &::-webkit-inner-spin-button {
                margin-block: calc(0.25rem * -3);
                margin-inline-end: calc(0.25rem * -3);
            }
        }
    }

    .j8n2r {
        padding-inline: calc(0.25rem * 2.5);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --size: calc(var(--size-field, 0.25rem) * 7.5);

        &[type="number"] {
            &::-webkit-inner-spin-button {
                margin-block: calc(0.25rem * -2);
                margin-inline-end: calc(0.25rem * -3);
            }
        }
    }

    .moz2m {
        padding-inline: calc(0.25rem * 4.5);
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
        --size: calc(var(--size-field, 0.25rem) * 14);

        &[type="number"] {
            &::-webkit-inner-spin-button {
                margin-block: calc(0.25rem * -4);
                margin-inline-end: calc(0.25rem * -3);
            }
        }
    }

    .oeghr {
        padding-inline: calc(0.25rem * 2.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --size: calc(var(--size-field, 0.25rem) * 6);

        &[type="number"] {
            &::-webkit-inner-spin-button {
                margin-block: calc(0.25rem * -1);
                margin-inline-end: calc(0.25rem * -3);
            }
        }
    }

    .accordion-item {
        .rxv9v :where(&) {
            margin-block: calc(0.25rem * 2);
            border-radius: var(--radius-box);
            background-color: var(--color-base-100);
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-shadow-color: var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
            }

            .accordion-item:first-of-type {
                margin-top: calc(0.25rem * 0);
            }

            .accordion-item:last-of-type {
                margin-bottom: calc(0.25rem * 0);
            }

            &>*:first-child {
                border-top-left-radius: var(--radius-box);
                border-top-right-radius: var(--radius-box);
            }

            &>*:last-child {
                border-bottom-right-radius: var(--radius-box);
                border-bottom-left-radius: var(--radius-box);
            }
        }
    }

    .rxv9v {
        & :where(.accordion-item) {
            margin-block: calc(0.25rem * 2);
            border-radius: var(--radius-box);
            background-color: var(--color-base-100);
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-shadow-color: var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
            }

            .accordion-item:first-of-type {
                margin-top: calc(0.25rem * 0);
            }

            .accordion-item:last-of-type {
                margin-bottom: calc(0.25rem * 0);
            }

            &>*:first-child {
                border-top-left-radius: var(--radius-box);
                border-top-right-radius: var(--radius-box);
            }

            &>*:last-child {
                border-bottom-right-radius: var(--radius-box);
                border-bottom-left-radius: var(--radius-box);
            }
        }
    }

    .tr2cv {
        margin-block: calc(var(--spacing) * 1);
    }

    .pxpay {
        margin-block: calc(var(--spacing) * 1.5);
    }

    .xyweg {
        margin-block: calc(var(--spacing) * 2);
    }

    .wbqi7 {
        margin-block: calc(var(--spacing) * 2.5);
    }

    .ei7oi {
        margin-block: calc(var(--spacing) * 3);
    }

    .xnntb {
        margin-block: calc(var(--spacing) * 4);
    }

    .f56u4 {
        margin-block: calc(var(--spacing) * 5);
    }

    .qmgk7 {
        margin-block: calc(var(--spacing) * 6);
    }

    .qfbul {
        margin-block: calc(var(--spacing) * 12);
    }

    .qvvgl {
        margin-block: auto;
    }

    .zqwqv {
        flex-direction: row;

        >.tc1j4:first-child {
            --join-ss: var(--radius-field);
            --join-se: 0;
            --join-es: var(--radius-field);
            --join-ee: 0;
        }

        :first-child:not(:last-child) {
            .tc1j4 {
                --join-ss: var(--radius-field);
                --join-se: 0;
                --join-es: var(--radius-field);
                --join-ee: 0;
            }
        }

        >.tc1j4:last-child {
            --join-ss: 0;
            --join-se: var(--radius-field);
            --join-es: 0;
            --join-ee: var(--radius-field);
        }

        :last-child:not(:first-child) {
            .tc1j4 {
                --join-ss: 0;
                --join-se: var(--radius-field);
                --join-es: 0;
                --join-ee: var(--radius-field);
            }
        }

        >.tc1j4:only-child {
            --join-ss: var(--radius-field);
            --join-se: var(--radius-field);
            --join-es: var(--radius-field);
            --join-ee: var(--radius-field);
        }

        :only-child {
            .tc1j4 {
                --join-ss: var(--radius-field);
                --join-se: var(--radius-field);
                --join-es: var(--radius-field);
                --join-ee: var(--radius-field);
            }
        }

        .tc1j4 {
            &:where(*:not(:first-child)) {
                margin-inline-start: calc(var(--border, 1px) * -1);
                margin-block-start: 0;
            }
        }
    }

    .liqun {
        flex-direction: column;

        >.tc1j4:first-child {
            --join-ss: var(--radius-field);
            --join-se: var(--radius-field);
            --join-es: 0;
            --join-ee: 0;
        }

        :first-child:not(:last-child) {
            .tc1j4 {
                --join-ss: var(--radius-field);
                --join-se: var(--radius-field);
                --join-es: 0;
                --join-ee: 0;
            }
        }

        >.tc1j4:last-child {
            --join-ss: 0;
            --join-se: 0;
            --join-es: var(--radius-field);
            --join-ee: var(--radius-field);
        }

        :last-child:not(:first-child) {
            .tc1j4 {
                --join-ss: 0;
                --join-se: 0;
                --join-es: var(--radius-field);
                --join-ee: var(--radius-field);
            }
        }

        >.tc1j4:only-child {
            --join-ss: var(--radius-field);
            --join-se: var(--radius-field);
            --join-es: var(--radius-field);
            --join-ee: var(--radius-field);
        }

        :only-child {
            .tc1j4 {
                --join-ss: var(--radius-field);
                --join-se: var(--radius-field);
                --join-es: var(--radius-field);
                --join-ee: var(--radius-field);
            }
        }

        .tc1j4 {
            &:where(*:not(:first-child)) {
                margin-inline-start: 0;
                margin-block-start: calc(var(--border, 1px) * -1);
            }
        }
    }

    .tc1j4 {
        &:where(*:not(:first-child, :disabled, [disabled], .iidbg)) {
            margin-inline-start: calc(var(--border, 1px) * -1);
            margin-block-start: 0;
        }

        &:where(*:is(:disabled, [disabled], .iidbg)) {
            border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
        }
    }

    .\!ms-auto {
        margin-inline-start: auto !important;
    }

    .wcj4n {
        margin-inline-start: calc(var(--spacing) * -1);
    }

    .ujt5w {
        margin-inline-start: calc(var(--spacing) * 0);
    }

    .ms-0\.5 {
        margin-inline-start: calc(var(--spacing) * 0.5);
    }

    .e61xq {
        margin-inline-start: calc(var(--spacing) * 1);
    }

    .ms-2 {
        margin-inline-start: calc(var(--spacing) * 2);
    }

    .ik1fq {
        margin-inline-start: calc(var(--spacing) * 3);
    }

    .me9sx {
        margin-inline-start: calc(var(--spacing) * 4);
    }

    .ms-auto {
        margin-inline-start: auto;
    }

    .lt6if {
        &::file-selector-button {
            margin-inline-end: calc(0.25rem * 4);
            display: inline-flex;
            height: 100%;
            flex-shrink: 0;
            cursor: pointer;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
            border-style: var(--tw-border-style);
            border-width: 0px;
            background-color: var(--color-primary);
            padding-inline: calc(0.25rem * 4);
            text-align: center;
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            --tw-leading: 1;
            --tw-font-weight: var(--font-weight-semibold);
            font-weight: var(--font-weight-semibold);
            color: var(--color-primary-content);
            text-transform: uppercase;
            text-decoration-line: none;
            webkit-user-select: none;
            user-select: none;
            --input-color: var(--color-primary);

            &.j8n2r {
                font-size: var(--text-sm);
                line-height: var(--tw-leading, var(--text-sm--line-height));
            }

            &.i6t40 {
                font-size: var(--text-base);
                line-height: var(--tw-leading, var(--text-base--line-height));
            }

            &.ynugf {
                font-size: var(--text-lg);
                line-height: var(--tw-leading, var(--text-lg--line-height));
            }

            &.moz2m {
                font-size: var(--text-xl);
                line-height: var(--tw-leading, var(--text-xl--line-height));
            }
        }

        &[type="file"] {
            overflow: hidden;
            padding-inline-start: calc(0.25rem * 0);
        }

        .r48nb &::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
            }

            outline: none;
        }
    }

    .i3lzc {
        --size: calc(var(--size-field, 0.25rem) * 11.5);
        padding-inline: calc(0.25rem * 4);
        padding-inline-end: calc(0.25rem * 10);
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));

        select {
            margin-inline-end: calc(0.25rem * -10);
            padding-inline-start: calc(0.25rem * 4);
            padding-inline-end: calc(0.25rem * 10);
        }
    }

    .ds8l2 {
        --size: calc(var(--size-field, 0.25rem) * 14);
        padding-inline: calc(0.25rem * 4.5);
        padding-inline-end: calc(0.25rem * 10);
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));

        select {
            margin-inline-end: calc(0.25rem * -10);
            padding-inline-start: calc(0.25rem * 4.5);
            padding-inline-end: calc(0.25rem * 10);
        }
    }

    .kqyeh {
        --size: calc(var(--size-field, 0.25rem) * 9.5);
        padding-inline-start: calc(0.25rem * 3);
        padding-inline-end: calc(0.25rem * 10);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));

        select {
            margin-inline-end: calc(0.25rem * -10);
            padding-inline-start: calc(0.25rem * 3);
            padding-inline-end: calc(0.25rem * 10);
        }
    }

    .ckwfe {
        --size: calc(var(--size-field, 0.25rem) * 7.5);
        padding-inline-start: calc(0.25rem * 2.5);
        padding-inline-end: calc(0.25rem * 8);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        select {
            margin-inline-end: calc(0.25rem * -8);
            padding-inline-start: calc(0.25rem * 2.5);
            padding-inline-end: calc(0.25rem * 8);
        }
    }

    .vpvxr {
        --size: calc(var(--size-field, 0.25rem) * 6);
        padding-inline-start: calc(0.25rem * 2.5);
        padding-inline-end: calc(0.25rem * 8);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        select {
            margin-inline-end: calc(0.25rem * -8);
            padding-inline-start: calc(0.25rem * 2.5);
            padding-inline-end: calc(0.25rem * 8);
        }
    }

    .\!me-1\.5 {
        margin-inline-end: calc(var(--spacing) * 1.5) !important;
    }

    .ab2kz {
        margin-inline-end: calc(var(--spacing) * 1);
    }

    .me-2 {
        margin-inline-end: calc(var(--spacing) * 2);
    }

    .dkhmu {
        margin-inline-end: calc(var(--spacing) * 3);
    }

    .me-4 {
        margin-inline-end: calc(var(--spacing) * 4);
    }

    .gayo0 {
        margin-inline-end: auto;
    }

    .egt0k {
        margin-top: calc(var(--spacing) * -1);
    }

    .sr676 {
        margin-top: calc(var(--spacing) * -6);
    }

    .fyiul {
        margin-top: calc(var(--spacing) * -9.25);
    }

    .mt6s0 {
        margin-top: calc(var(--spacing) * -17);
    }

    .x4ufg {
        margin-top: calc(var(--spacing) * -105);
    }

    .vzx2u {
        margin-top: calc(var(--spacing) * 0.5);
    }

    .zfq0a {
        margin-top: calc(var(--spacing) * 0.75);
    }

    .rfef7 {
        margin-top: calc(var(--spacing) * 1);
    }

    .lwk6w {
        margin-top: calc(var(--spacing) * 1.5);
    }

    .clruh {
        margin-top: calc(var(--spacing) * 2);
    }

    .jss81 {
        margin-top: calc(var(--spacing) * 2.5);
    }

    .xxb7a {
        margin-top: calc(var(--spacing) * 3);
    }

    .al6k3 {
        margin-top: calc(var(--spacing) * 3.5);
    }

    .cqrnp {
        margin-top: calc(var(--spacing) * 4);
    }

    .afphq {
        margin-top: calc(var(--spacing) * 5);
    }

    .kiokz {
        margin-top: calc(var(--spacing) * 6);
    }

    .f3t5h {
        margin-top: calc(var(--spacing) * 8);
    }

    .tn76v {
        margin-top: calc(var(--spacing) * 10);
    }

    .gn1x2 {
        margin-top: calc(var(--spacing) * 12);
    }

    .f7czx {
        margin-top: calc(var(--spacing) * 24);
    }

    .c5bty {
        margin-bottom: calc(0.25rem * 1);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
    }

    .p3xha {
        margin-bottom: calc(var(--spacing) * 0);
    }

    .mb-0\.5 {
        margin-bottom: calc(var(--spacing) * 0.5);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .ryvox {
        margin-bottom: calc(var(--spacing) * 1.5);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mp744 {
        margin-bottom: calc(var(--spacing) * 2.5);
    }

    .dcq36 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .gkwr9 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .hcl3x {
        margin-bottom: calc(var(--spacing) * 5);
    }

    .o9nis {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .f8g0l {
        margin-bottom: calc(var(--spacing) * 8);
    }

    .gifps {
        margin-bottom: calc(var(--spacing) * 9);
    }

    .r3cmc {
        margin-bottom: calc(var(--spacing) * 10);
    }

    .xc5f6 {
        margin-bottom: calc(var(--spacing) * 12);
    }

    .wh3dj {
        margin-bottom: calc(var(--spacing) * 16);
    }

    .ocvtf {
        margin-bottom: auto;
    }

    .q7zzx {
        margin-bottom: 1px;
    }

    .lus7r {
        margin-left: calc(var(--spacing) * 1);
    }

    .ml-2 {
        margin-left: calc(var(--spacing) * 2);
    }

    .vngqs {
        margin-left: calc(var(--spacing) * 6);
    }

    .ymvs3 {
        display: inline-block;
        aspect-ratio: 1 / 1;
        width: calc(0.25rem * 2.5);
        height: calc(0.25rem * 2.5);
        border-radius: calc(infinity * 1px);
        background-color: var(--color-neutral);
        background-position: center;
        background-repeat: no-repeat;
        vertical-align: middle;
        color: var(--color-neutral);
        background-image: radial-gradient(circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000);
        box-shadow: 0 2px 3px -1px currentColor;

        @supports (color: color-mix(in lab, red, red)) {
            box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
        }
    }

    .crmfv {
        display: flex;
        width: 100%;
        align-items: center;
        align-self: stretch;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        white-space: nowrap;

        &:not(:empty) {
            gap: calc(0.25rem * 4);
        }

        &:before {
            content: "";
            height: 1px;
            width: 100%;
            flex-grow: 1;
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 0px;
            border-top-style: var(--tw-border-style);
            border-top-width: 1px;
            --tw-border-style: solid;
            border-style: solid;
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
            }
        }

        &:after {
            content: "";
            height: 1px;
            width: 100%;
            flex-grow: 1;
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 0px;
            border-top-style: var(--tw-border-style);
            border-top-width: 1px;
            --tw-border-style: solid;
            border-style: solid;
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
            }
        }
    }

    .idop2 {
        display: flex;
        height: calc(0.25rem * 1.5);
        width: 100%;
        flex-direction: column;
        justify-content: center;
        background-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }

        text-align: center;
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        white-space: nowrap;
        color: var(--color-base-100);
    }

    .badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: calc(0.25rem * 1.5);
        border-radius: var(--radius-selector);
        text-align: center;
        vertical-align: middle;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        border: var(--border) solid var(--badge-border);
        padding-inline: calc(0.25rem * 3);
        width: fit-content;
        color: var(--badge-fg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        background-color: var(--badge-bg);
        --badge-border: var(--badge-color, var(--color-neutral));
        --badge-bg: var(--badge-color, var(--color-neutral));
        --badge-fg: var(--color-neutral-content);
        --size: calc(var(--size-selector, 0.25rem) * 6);
        height: var(--size);

        &.tl61j {
            --badge-fg: var(--badge-color, var(--color-neutral));
            --badge-bg: transparent;
            background-image: none;
        }

        &.badge-soft {
            --badge-border: none;
            --badge-fg: var(--badge-color, var(--color-neutral));
            --badge-bg: var(--badge-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --badge-bg: color-mix(in oklab, var(--badge-color, var(--color-neutral)) 10%, var(--color-base-100));
            }

            background-image: none;
        }
    }

    .progress {
        display: flex;
        height: calc(0.25rem * 1.5);
        width: 100%;
        overflow: hidden;
        border-radius: var(--radius-box);
        background-color: var(--color-base-200);
    }

    .icon-\[solar--buildings-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M15 2h2c1.886 0 2.828 0 3.414.586S21 4.114 21 6v15.25h1a.75.75 0 0 1 0 1.5H2a.75.75 0 0 1 0-1.5h1V9c0-1.886 0-2.828.586-3.414S5.114 5 7 5h4c1.886 0 2.828 0 3.414.586S15 7.114 15 9v12.25h1.5V8.91c0-.865 0-1.659-.087-2.304c-.095-.711-.32-1.463-.938-2.08c-.618-.619-1.37-.844-2.08-.94c-.637-.085-1.418-.086-2.269-.086c.084-.387.225-.68.46-.914C12.172 2 13.114 2 15 2M5.25 8A.75.75 0 0 1 6 7.25h6a.75.75 0 0 1 0 1.5H6A.75.75 0 0 1 5.25 8m0 3a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1-.75-.75m0 3a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1-.75-.75M9 18.25a.75.75 0 0 1 .75.75v2.25h-1.5V19a.75.75 0 0 1 .75-.75' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--calendar-date-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M7.75 2.5a.75.75 0 0 0-1.5 0v1.58c-1.44.115-2.384.397-3.078 1.092c-.695.694-.977 1.639-1.093 3.078h19.842c-.116-1.44-.398-2.384-1.093-3.078c-.694-.695-1.639-.977-3.078-1.093V2.5a.75.75 0 0 0-1.5 0v1.513C15.585 4 14.839 4 14 4h-4c-.839 0-1.585 0-2.25.013z'/%3E%3Cpath fill='black' fill-rule='evenodd' d='M22 12c0-.839 0-1.585-.013-2.25H2.013C2 10.415 2 11.161 2 12v2c0 3.771 0 5.657 1.172 6.828S6.229 22 10 22h4c3.771 0 5.657 0 6.828-1.172S22 17.771 22 14zm-8 .25A1.75 1.75 0 0 0 12.25 14v2a1.75 1.75 0 1 0 3.5 0v-2A1.75 1.75 0 0 0 14 12.25m0 1.5a.25.25 0 0 0-.25.25v2a.25.25 0 1 0 .5 0v-2a.25.25 0 0 0-.25-.25m-3.213-1.443a.75.75 0 0 1 .463.693v4a.75.75 0 0 1-1.5 0v-2.19l-.22.22a.75.75 0 0 1-1.06-1.06l1.5-1.5a.75.75 0 0 1 .817-.163' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--chart-2-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M17.293 2.293C17 2.586 17 3.057 17 4v13c0 .943 0 1.414.293 1.707S18.057 19 19 19s1.414 0 1.707-.293S21 17.943 21 17V4c0-.943 0-1.414-.293-1.707S19.943 2 19 2s-1.414 0-1.707.293M10 7c0-.943 0-1.414.293-1.707S11.057 5 12 5s1.414 0 1.707.293S14 6.057 14 7v10c0 .943 0 1.414-.293 1.707S12.943 19 12 19s-1.414 0-1.707-.293S10 17.943 10 17zM3.293 9.293C3 9.586 3 10.057 3 11v6c0 .943 0 1.414.293 1.707S4.057 19 5 19s1.414 0 1.707-.293S7 17.943 7 17v-6c0-.943 0-1.414-.293-1.707S5.943 9 5 9s-1.414 0-1.707.293M3 21.25a.75.75 0 0 0 0 1.5h18a.75.75 0 0 0 0-1.5z'/%3E%3C/svg%3E");
    }

    .icon-\[solar--chat-square-code-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='m13.087 21.388l.542-.916c.42-.71.63-1.066.968-1.262c.338-.197.763-.204 1.613-.219c1.256-.021 2.043-.098 2.703-.372a5 5 0 0 0 2.706-2.706C22 14.995 22 13.83 22 11.5v-1c0-3.273 0-4.91-.737-6.112a5 5 0 0 0-1.65-1.651C18.41 2 16.773 2 13.5 2h-3c-3.273 0-4.91 0-6.112.737a5 5 0 0 0-1.651 1.65C2 5.59 2 7.228 2 10.5v1c0 2.33 0 3.495.38 4.413a5 5 0 0 0 2.707 2.706c.66.274 1.447.35 2.703.372c.85.015 1.275.022 1.613.219c.337.196.548.551.968 1.262l.542.916c.483.816 1.69.816 2.174 0M14.97 7.299a.75.75 0 0 1 1.06 0l.209.209c.635.635 1.165 1.165 1.529 1.642c.384.503.654 1.035.654 1.68c0 .644-.27 1.176-.654 1.68c-.364.476-.894 1.006-1.53 1.642l-.208.208a.75.75 0 1 1-1.06-1.06l.171-.172c.682-.682 1.139-1.141 1.434-1.528c.283-.37.347-.586.347-.77s-.064-.4-.347-.77c-.295-.388-.752-.847-1.434-1.529l-.171-.171a.75.75 0 0 1 0-1.06m-.952-1.105a.75.75 0 1 0-1.449-.388l-2.588 9.66a.75.75 0 1 0 1.45.387zM9.03 7.3a.75.75 0 0 1 0 1.06l-.171.172c-.682.682-1.139 1.141-1.434 1.529c-.283.37-.347.585-.347.77c0 .184.064.4.347.77c.295.387.752.846 1.434 1.528l.171.171a.75.75 0 1 1-1.06 1.06l-.172-.17l-.037-.037c-.635-.636-1.165-1.165-1.529-1.643c-.384-.503-.654-1.035-.654-1.68c0-.644.27-1.176.654-1.68c.364-.476.894-1.006 1.53-1.641l.036-.037l.172-.172a.75.75 0 0 1 1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--clock-circle-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cdefs%3E%3Cmask id='SVGnNgsclOC'%3E%3Cg fill='none'%3E%3Cpath fill='%23fff' d='M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2s10 4.477 10 10'/%3E%3Cpath fill='%23000' fill-rule='evenodd' d='M12 7.25a.75.75 0 0 1 .75.75v3.69l2.28 2.28a.75.75 0 1 1-1.06 1.06l-2.5-2.5a.75.75 0 0 1-.22-.53V8a.75.75 0 0 1 .75-.75' clip-rule='evenodd'/%3E%3C/g%3E%3C/mask%3E%3C/defs%3E%3Cpath fill='black' d='M0 0h24v24H0z' mask='url(%23SVGnNgsclOC)'/%3E%3C/svg%3E");
    }

    .icon-\[solar--code-scan-bold-duotone\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M14 2.75c1.907 0 3.262.002 4.29.14c1.005.135 1.585.389 2.008.812s.677 1.003.812 2.009c.138 1.028.14 2.382.14 4.289a.75.75 0 0 0 1.5 0v-.056c0-1.838 0-3.294-.153-4.433c-.158-1.172-.49-2.121-1.238-2.87c-.749-.748-1.698-1.08-2.87-1.238c-1.14-.153-2.595-.153-4.433-.153H14a.75.75 0 0 0 0 1.5m-4.056-1.5H10a.75.75 0 0 1 0 1.5c-1.907 0-3.261.002-4.29.14c-1.005.135-1.585.389-2.008.812S3.025 4.705 2.89 5.71c-.138 1.029-.14 2.383-.14 4.29a.75.75 0 0 1-1.5 0v-.056c0-1.838 0-3.294.153-4.433c.158-1.172.49-2.121 1.238-2.87c.749-.748 1.698-1.08 2.87-1.238c1.14-.153 2.595-.153 4.433-.153M22 13.25a.75.75 0 0 1 .75.75v.056c0 1.838 0 3.294-.153 4.433c-.158 1.172-.49 2.121-1.238 2.87c-.749.748-1.698 1.08-2.87 1.238c-1.14.153-2.595.153-4.433.153H14a.75.75 0 0 1 0-1.5c1.907 0 3.262-.002 4.29-.14c1.005-.135 1.585-.389 2.008-.812s.677-1.003.812-2.009c.138-1.027.14-2.382.14-4.289a.75.75 0 0 1 .75-.75M2.75 14a.75.75 0 0 0-1.5 0v.056c0 1.838 0 3.294.153 4.433c.158 1.172.49 2.121 1.238 2.87c.749.748 1.698 1.08 2.87 1.238c1.14.153 2.595.153 4.433.153H10a.75.75 0 0 0 0-1.5c-1.907 0-3.261-.002-4.29-.14c-1.005-.135-1.585-.389-2.008-.812s-.677-1.003-.812-2.009c-.138-1.027-.14-2.382-.14-4.289' opacity='.5'/%3E%3Cpath fill='black' d='M5.527 5.527C5 6.054 5 6.903 5 8.6c0 1.131 0 1.697.351 2.049C5.703 11 6.27 11 7.4 11h1.2c1.131 0 1.697 0 2.049-.351C11 10.297 11 9.73 11 8.6V7.4c0-1.131 0-1.697-.351-2.049C10.297 5 9.73 5 8.6 5c-1.697 0-2.546 0-3.073.527m0 12.946C5 17.946 5 17.097 5 15.4c0-1.131 0-1.697.351-2.049C5.703 13 6.27 13 7.4 13h1.2c1.131 0 1.697 0 2.049.351c.351.352.351.918.351 2.049v1.2c0 1.131 0 1.697-.351 2.048C10.297 19 9.73 19 8.6 19c-1.697 0-2.546 0-3.073-.527M13 7.4c0-1.131 0-1.697.351-2.049C13.704 5 14.27 5 15.4 5c1.697 0 2.546 0 3.073.527S19 6.903 19 8.6c0 1.131 0 1.697-.352 2.049c-.35.351-.917.351-2.048.351h-1.2c-1.131 0-1.697 0-2.049-.351C13 10.297 13 9.73 13 8.6zm.352 11.249C13 18.297 13 17.73 13 16.6v-1.2c0-1.131 0-1.697.351-2.049C13.704 13 14.27 13 15.4 13h1.2c1.131 0 1.697 0 2.048.351c.352.352.352.918.352 2.049c0 1.697 0 2.546-.527 3.073S17.097 19 15.4 19c-1.131 0-1.697 0-2.049-.352'/%3E%3C/svg%3E");
    }

    .icon-\[solar--devices-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M2 14.5c0-1.405 0-2.107.337-2.611a2 2 0 0 1 .552-.552C3.393 11 4.096 11 5.5 11s2.107 0 2.611.337a2 2 0 0 1 .552.552C9 12.393 9 13.096 9 14.5v4c0 1.404 0 2.107-.337 2.611a2 2 0 0 1-.552.552C7.607 22 6.904 22 5.5 22s-2.107 0-2.611-.337a2 2 0 0 1-.552-.552C2 20.607 2 19.904 2 18.5z'/%3E%3Cpath fill='black' fill-rule='evenodd' d='M22 10v4c0 3.771 0 5.657-1.172 6.828S17.771 22 14 22c-1.7 0-3.015 0-4.056-.107c.335-.525.454-1.082.506-1.598c.05-.491.05-1.084.05-1.729v-4.132c0-.645 0-1.238-.05-1.729c-.054-.533-.18-1.11-.54-1.65a3.5 3.5 0 0 0-.966-.965c-.54-.36-1.116-.486-1.65-.54A14 14 0 0 0 6 9.5c.002-3.44.053-5.21 1.172-6.328C8.343 2 10.229 2 14 2s5.657 0 6.828 1.172S22 6.229 22 10m-10.75 9a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--dollar-minimalistic-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2S2 6.477 2 12s4.477 10 10 10m.75-16a.75.75 0 0 0-1.5 0v.317c-1.63.292-3 1.517-3 3.183c0 1.917 1.813 3.25 3.75 3.25c1.377 0 2.25.906 2.25 1.75s-.873 1.75-2.25 1.75c-1.376 0-2.25-.906-2.25-1.75a.75.75 0 0 0-1.5 0c0 1.666 1.37 2.891 3 3.183V18a.75.75 0 0 0 1.5 0v-.317c1.63-.292 3-1.517 3-3.183c0-1.917-1.813-3.25-3.75-3.25c-1.376 0-2.25-.906-2.25-1.75s.874-1.75 2.25-1.75c1.377 0 2.25.906 2.25 1.75a.75.75 0 0 0 1.5 0c0-1.666-1.37-2.891-3-3.183z' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--figma-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M8.667 9.417a2.583 2.583 0 1 0 0 5.166h2.583V9.417zm2.583-1.5H8.667a2.583 2.583 0 0 1 0-5.167h2.583zm1.5-5.167v5.167h2.583a2.584 2.584 0 0 0 0-5.167zm2.583 6.666a2.583 2.583 0 0 0-2.583 2.542v.083a2.583 2.583 0 1 0 2.583-2.625m-6.666 6.667a2.584 2.584 0 1 0 2.583 2.584v-2.584z' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--gamepad-bold-duotone\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m10.667 6.134l-.502-.355A4.24 4.24 0 0 0 7.715 5h-.612c-.405 0-.813.025-1.194.16c-2.383.846-4.022 3.935-3.903 10.943c.024 1.412.354 2.972 1.628 3.581A3.2 3.2 0 0 0 5.027 20a2.74 2.74 0 0 0 1.53-.437c.41-.268.77-.616 1.13-.964c.444-.43.888-.86 1.424-1.138a4.1 4.1 0 0 1 1.89-.461H13c.658 0 1.306.158 1.89.46c.536.279.98.709 1.425 1.139c.36.348.72.696 1.128.964c.39.256.895.437 1.531.437a3.2 3.2 0 0 0 1.393-.316c1.274-.609 1.604-2.17 1.628-3.581c.119-7.008-1.52-10.097-3.903-10.942C17.71 5.025 17.3 5 16.897 5h-.612a4.24 4.24 0 0 0-2.45.78l-.502.354a2.31 2.31 0 0 1-2.666 0' opacity='.5'/%3E%3Cpath fill='black' d='M16.75 9a.75.75 0 1 1 0 1.5a.75.75 0 0 1 0-1.5m-9.25.25a.75.75 0 0 1 .75.75v.75H9a.75.75 0 0 1 0 1.5h-.75V13a.75.75 0 0 1-1.5 0v-.75H6a.75.75 0 0 1 0-1.5h.75V10a.75.75 0 0 1 .75-.75m11.5 2a.75.75 0 1 1-1.5 0a.75.75 0 0 1 1.5 0m-3.75.75a.75.75 0 1 0 0-1.5a.75.75 0 0 0 0 1.5m2.25.75a.75.75 0 1 0-1.5 0a.75.75 0 0 0 1.5 0'/%3E%3C/svg%3E");
    }

    .icon-\[solar--laptop-minimalistic-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M1 20.24c0-.42.344-.76.767-.76h20.466c.423 0 .767.34.767.76s-.344.76-.767.76H1.767A.764.764 0 0 1 1 20.24M3.69 3.89c-.9.89-.9 2.324-.9 5.19v5.067c0 1.91 0 2.866.6 3.46s1.564.593 3.494.593h10.232c1.93 0 2.895 0 3.494-.594c.6-.593.6-1.549.6-3.46V9.08c0-2.866 0-4.3-.9-5.19C19.411 3 17.964 3 15.07 3H8.93c-2.894 0-4.341 0-5.24.89m4.473 11.27c0-.42.343-.76.767-.76h6.14c.424 0 .767.34.767.76s-.343.76-.767.76H8.93a.764.764 0 0 1-.767-.76' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--layers-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M4.979 9.685C2.993 8.891 2 8.494 2 8s.993-.89 2.979-1.685l2.808-1.123C9.773 4.397 10.767 4 12 4s2.227.397 4.213 1.192l2.808 1.123C21.007 7.109 22 7.506 22 8s-.993.89-2.979 1.685l-2.808 1.124C14.227 11.603 13.233 12 12 12s-2.227-.397-4.213-1.191z'/%3E%3Cpath fill='black' fill-rule='evenodd' d='M2 8c0 .494.993.89 2.979 1.685l2.808 1.124C9.773 11.603 10.767 12 12 12s2.227-.397 4.213-1.191l2.808-1.124C21.007 8.891 22 8.494 22 8s-.993-.89-2.979-1.685l-2.808-1.123C14.227 4.397 13.233 4 12 4s-2.227.397-4.213 1.192L4.98 6.315C2.993 7.109 2 7.506 2 8' clip-rule='evenodd'/%3E%3Cpath fill='black' d='m19.021 13.685l-2.808 1.124C14.227 15.603 13.233 16 12 16s-2.227-.397-4.213-1.191L4.98 13.685C2.993 12.891 2 12.493 2 12c0-.445.807-.812 2.42-1.461l3.141 1.256C9.411 12.535 10.572 13 12 13s2.59-.465 4.439-1.205l3.14-1.256C21.194 11.189 22 11.555 22 12c0 .493-.993.89-2.979 1.685'/%3E%3Cpath fill='black' d='m19.021 17.685l-2.808 1.123C14.227 19.603 13.233 20 12 20s-2.227-.397-4.213-1.192L4.98 17.685C2.993 16.89 2 16.493 2 16c0-.445.807-.812 2.42-1.461l3.141 1.256C9.411 16.535 10.572 17 12 17s2.59-.465 4.439-1.205l3.14-1.256c1.614.65 2.421 1.016 2.421 1.46c0 .494-.993.891-2.979 1.686'/%3E%3C/svg%3E");
    }

    .icon-\[solar--pen-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m11.4 18.161l7.396-7.396a10.3 10.3 0 0 1-3.326-2.234a10.3 10.3 0 0 1-2.235-3.327L5.839 12.6c-.577.577-.866.866-1.114 1.184a6.6 6.6 0 0 0-.749 1.211c-.173.364-.302.752-.56 1.526l-1.362 4.083a1.06 1.06 0 0 0 1.342 1.342l4.083-1.362c.775-.258 1.162-.387 1.526-.56q.647-.308 1.211-.749c.318-.248.607-.537 1.184-1.114m9.448-9.448a3.932 3.932 0 0 0-5.561-5.561l-.887.887l.038.111a8.75 8.75 0 0 0 2.092 3.32a8.75 8.75 0 0 0 3.431 2.13z'/%3E%3C/svg%3E");
    }

    .icon-\[solar--pie-chart-bold-duotone\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M9.163 3.775a.75.75 0 0 1-.49.94A8.465 8.465 0 0 0 2.75 12.79a8.46 8.46 0 0 0 8.46 8.461a8.465 8.465 0 0 0 8.075-5.922a.75.75 0 1 1 1.43.45c-1.268 4.04-5.043 6.972-9.504 6.972c-5.501 0-9.961-4.46-9.961-9.96c0-4.462 2.932-8.236 6.973-9.506a.75.75 0 0 1 .94.491' clip-rule='evenodd' opacity='.5'/%3E%3Cpath fill='black' d='M21.913 9.947a11.35 11.35 0 0 0-7.86-7.86C12.409 1.628 11 3.054 11 4.76v6.694c0 .853.692 1.545 1.545 1.545h6.694c1.707 0 3.133-1.41 2.674-3.053'/%3E%3C/svg%3E");
    }

    .icon-\[solar--rounded-magnifer-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M17.82 19.7a1.77 1.77 0 0 1 1.9-1.917c.189.016.414.084.643.154l.066.02l.06.018c.211.063.42.126.58.212a1.786 1.786 0 0 1 .638 2.55c-.1.151-.255.307-.41.464l-.045.044l-.044.045c-.156.157-.31.313-.46.414a1.754 1.754 0 0 1-2.528-.643a3.3 3.3 0 0 1-.21-.585l-.018-.06l-.02-.067c-.07-.232-.137-.459-.153-.648' clip-rule='evenodd'/%3E%3Cpath fill='black' d='M20.128 11.143c0 5.05-4.058 9.143-9.064 9.143S2 16.192 2 11.143S6.058 2 11.064 2s9.064 4.093 9.064 9.143'/%3E%3C/svg%3E");
    }

    .icon-\[solar--share-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M13.803 5.333c0-1.84 1.5-3.333 3.348-3.333A3.34 3.34 0 0 1 20.5 5.333c0 1.841-1.5 3.334-3.349 3.334a3.35 3.35 0 0 1-2.384-.994l-4.635 3.156a3.34 3.34 0 0 1-.182 1.917l5.082 3.34a3.35 3.35 0 0 1 2.12-.753a3.34 3.34 0 0 1 3.348 3.334C20.5 20.507 19 22 17.151 22a3.34 3.34 0 0 1-3.348-3.333a3.3 3.3 0 0 1 .289-1.356L9.05 14a3.35 3.35 0 0 1-2.202.821A3.34 3.34 0 0 1 3.5 11.487a3.34 3.34 0 0 1 3.348-3.333c1.064 0 2.01.493 2.623 1.261l4.493-3.059a3.3 3.3 0 0 1-.161-1.023' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--unread-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' fill-rule='evenodd' d='M22 12c0 4.714 0 7.071-1.465 8.535C19.072 22 16.714 22 12 22s-7.071 0-8.536-1.465C2 19.072 2 16.714 2 12s0-7.071 1.464-8.536C4.93 2 7.286 2 12 2s7.071 0 8.535 1.464C22 4.93 22 7.286 22 12m-4.546-5.097a.75.75 0 0 1 .143 1.052l-6.858 9a.75.75 0 0 1-1.161.038l-3.143-3.6a.75.75 0 1 1 1.13-.986l2.538 2.907l6.3-8.269a.75.75 0 0 1 1.052-.142' clip-rule='evenodd'/%3E%3C/svg%3E");
    }

    .icon-\[solar--user-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Ccircle cx='12' cy='6' r='4' fill='black'/%3E%3Cpath fill='black' d='M20 17.5c0 2.485 0 4.5-8 4.5s-8-2.015-8-4.5S7.582 13 12 13s8 2.015 8 4.5'/%3E%3C/svg%3E");
    }

    .icon-\[solar--user-speak-bold-duotone\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M18.357 1.364a.75.75 0 0 1 1.029-.257L19 1.75l.386-.643h.001l.002.002l.003.002l.01.006a2 2 0 0 1 .114.076q.107.074.277.212c.222.185.512.462.802.838c.582.758 1.155 1.914 1.155 3.507s-.573 2.75-1.155 3.507c-.29.376-.58.653-.802.838a4 4 0 0 1-.378.28l-.013.008l-.01.006l-.003.002l-.002.001s-.001.001-.387-.642l.386.643a.75.75 0 0 1-.776-1.283l.005-.004l.04-.027q.061-.042.177-.136c.153-.128.363-.326.573-.6c.418-.542.845-1.386.845-2.593s-.427-2.05-.844-2.593a3.8 3.8 0 0 0-.574-.6a3 3 0 0 0-.217-.163l-.005-.003a.75.75 0 0 1-.253-1.027M10 9.75a4 4 0 1 0 0-8a4 4 0 0 0 0 8'/%3E%3Cpath fill='black' d='M17.386 3.107a.75.75 0 0 0-1.03.257l.25 1.024l.007.005l.063.049c.06.05.144.129.23.24a1.7 1.7 0 0 1 .344 1.068a1.7 1.7 0 0 1-.344 1.068a1.5 1.5 0 0 1-.293.29l-.008.004a.75.75 0 0 0 .78 1.281L17 7.75l.386.643h.001l.002-.001l.003-.002l.007-.005l.02-.012a2 2 0 0 0 .217-.162c.129-.107.294-.265.459-.479a3.2 3.2 0 0 0 .655-1.982a3.2 3.2 0 0 0-.655-1.982a3 3 0 0 0-.622-.604l-.054-.037l-.02-.012l-.007-.004l-.003-.002l-.002-.001s-.001-.001-.387.642z'/%3E%3Cpath fill='black' d='M2 17.25c0 2.485 0 4.5 8 4.5s8-2.015 8-4.5s-3.582-4.5-8-4.5s-8 2.015-8 4.5' opacity='.5'/%3E%3C/svg%3E");
    }

    .icon-\[solar--videocamera-add-bold-duotone\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M2 11.5c0-3.287 0-4.931.908-6.038a4 4 0 0 1 .554-.554C4.57 4 6.212 4 9.5 4c3.287 0 4.931 0 6.038.908a4 4 0 0 1 .554.554C17 6.57 17 8.212 17 11.5v1c0 3.287 0 4.931-.908 6.038a4 4 0 0 1-.554.554C14.43 20 12.788 20 9.5 20c-3.287 0-4.931 0-6.038-.908a4 4 0 0 1-.554-.554C2 17.43 2 15.788 2 12.5z' opacity='.5'/%3E%3Cpath fill='black' d='m17 9.5l.658-.329c1.946-.973 2.92-1.46 3.63-1.02c.712.44.712 1.528.712 3.703v.292c0 2.176 0 3.263-.711 3.703c-.712.44-1.685-.047-3.63-1.02L17 14.5zm-6.75 0a.75.75 0 0 0-1.5 0v1.75H7a.75.75 0 0 0 0 1.5h1.75v1.75a.75.75 0 0 0 1.5 0v-1.75H12a.75.75 0 0 0 0-1.5h-1.75z'/%3E%3C/svg%3E");
    }

    .icon-\[solar--widget-bold\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M2 6.5c0-2.121 0-3.182.659-3.841S4.379 2 6.5 2s3.182 0 3.841.659S11 4.379 11 6.5s0 3.182-.659 3.841S8.621 11 6.5 11s-3.182 0-3.841-.659S2 8.621 2 6.5m11 11c0-2.121 0-3.182.659-3.841S15.379 13 17.5 13s3.182 0 3.841.659S22 15.379 22 17.5s0 3.182-.659 3.841S19.621 22 17.5 22s-3.182 0-3.841-.659S13 19.621 13 17.5m-11 0c0-2.121 0-3.182.659-3.841S4.379 13 6.5 13s3.182 0 3.841.659S11 15.379 11 17.5s0 3.182-.659 3.841S8.621 22 6.5 22s-3.182 0-3.841-.659S2 19.621 2 17.5m11-11c0-2.121 0-3.182.659-3.841S15.379 2 17.5 2s3.182 0 3.841.659S22 4.379 22 6.5s0 3.182-.659 3.841S19.621 11 17.5 11s-3.182 0-3.841-.659S13 8.621 13 6.5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--activity\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12h4l3 8l4-16l3 8h4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--alert-circle\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0m9-4v4m0 4h.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--alert-octagon\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12.802 2.165l5.575 2.389c.48.206.863.589 1.07 1.07l2.388 5.574c.22.512.22 1.092 0 1.604l-2.389 5.575c-.206.48-.589.863-1.07 1.07l-5.574 2.388c-.512.22-1.092.22-1.604 0l-5.575-2.389a2.04 2.04 0 0 1-1.07-1.07l-2.388-5.574a2.04 2.04 0 0 1 0-1.604l2.389-5.575c.206-.48.589-.863 1.07-1.07l5.574-2.388a2.04 2.04 0 0 1 1.604 0M12 8v4m0 4h.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--alert-triangle\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 9v4m-1.637-9.409L2.257 17.125a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636-2.87L13.637 3.59a1.914 1.914 0 0 0-3.274 0zM12 16h.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--apps\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm0 10a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm10 0a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1zm0-8h6m-3-3v6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--archive\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v0a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2m2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8m-9 4h4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--armchair\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 11a2 2 0 0 1 2 2v2h10v-2a2 2 0 1 1 4 0v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2'/%3E%3Cpath d='M5 11V6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v5M6 19v2m12-2v2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--arrow-back\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 11l-4 4l4 4m-4-4h11a4 4 0 0 0 0-8h-1'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--arrow-down\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m6-6l-6 6m-6-6l6 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--arrow-left\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14M5 12l6 6m-6-6l6-6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--arrow-narrow-right\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14m-4 4l4-4m-4-4l4 4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--arrow-right\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14m-6 6l6-6m-6-6l6 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--arrow-up-right\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M17 7L7 17M8 7h9v9'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--arrow-up\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m6-8l-6-6m-6 6l6-6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--ball-basketball\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0m2.65-6.35l12.7 12.7m-12.7 0l12.7-12.7'/%3E%3Cpath d='M12 3a9 9 0 0 0 9 9M3 12a9 9 0 0 1 9 9'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--ban\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0m2.7-6.3l12.6 12.6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--barrier-block\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm3 8v4m.5-4l9-9m-3 9L20 9.5m-16 4L10.5 7m6.5 9v4M5 20h4m6 0h4M17 7V5M7 7V5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--bell\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6M9 17v1a3 3 0 0 0 6 0v-1'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--box\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 3l8 4.5v9L12 21l-8-4.5v-9zm0 9l8-4.5M12 12v9m0-9L4 7.5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-android\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 10v6m16-6v6M7 9h10v8a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1za5 5 0 0 1 10 0M8 3l1 2m7-2l-1 2M9 18v3m6-3v3'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-angular\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m5.428 17.245l6.076 3.471a1 1 0 0 0 .992 0l6.076-3.471a1 1 0 0 0 .495-.734l1.323-9.704a1 1 0 0 0-.658-1.078l-7.4-2.612a1 1 0 0 0-.665 0L4.268 5.73a1 1 0 0 0-.658 1.078l1.323 9.704a1 1 0 0 0 .495.734z'/%3E%3Cpath d='m9 15l3-8l3 8m-5-2h4'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-apple-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m15.079 5.999l.239.012c1.43.097 3.434 1.013 4.508 2.586a1 1 0 0 1-.344 1.44c-.05.028-.372.158-.497.217a4 4 0 0 0-.722.431c-.614.461-.948 1.009-.942 1.694c.01.885.339 1.454.907 1.846c.208.143.436.253.666.33c.126.043.426.116.444.122a1 1 0 0 1 .662.942C20 18.24 16.96 22 14.714 22c-.79 0-1.272-.091-1.983-.315l-.098-.031c-.463-.146-.702-.192-1.133-.192c-.52 0-.863.06-1.518.237l-.197.053c-.575.153-.964.226-1.5.248C5.536 22 3 16.907 3 12.928c0-3.87 1.786-6.92 5.286-6.92q.444.002.909.128c.403.107.774.26 1.296.508c.787.374.948.44 1.009.44h.016c.03-.003.128-.047 1.056-.457c1.061-.467 1.864-.685 2.746-.616l-.24-.012zM14 1a1 1 0 0 1 1 1a3 3 0 0 1-3 3a1 1 0 0 1-1-1a3 3 0 0 1 3-3'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-aws\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M17 18.5a15.2 15.2 0 0 1-7.37 1.44A14.6 14.6 0 0 1 3 17m16.5 4c.907-1.411 1.451-3.323 1.5-5c-1.197-.773-2.577-.935-4-1M3 11V6.5a1.5 1.5 0 0 1 3 0V11M3 9h3m3-4l1.2 6L12 7l1.8 4L15 5m3 5.25c0 .414.336.75.75.75H20a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1h-1a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.25a.75.75 0 0 1 .75.75'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-discord\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8 12a1 1 0 1 0 2 0a1 1 0 0 0-2 0m6 0a1 1 0 1 0 2 0a1 1 0 0 0-2 0'/%3E%3Cpath d='M15.5 17c0 1 1.5 3 2 3c1.5 0 2.833-1.667 3.5-3c.667-1.667.5-5.833-1.5-11.5c-1.457-1.015-3-1.34-4.5-1.5l-.972 1.923a11.9 11.9 0 0 0-4.053 0L9 4c-1.5.16-3.043.485-4.5 1.5c-2 5.667-2.167 9.833-1.5 11.5c.667 1.333 2 3 3.5 3c.5 0 2-2 2-3'/%3E%3Cpath d='M7 16.5c3.5 1 6.5 1 10 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-facebook\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 10v4h3v7h4v-7h3l1-4h-4V8a1 1 0 0 1 1-1h3V3h-3a5 5 0 0 0-5 5v2z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-firebase\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m4.53 17.05l6.15-11.72h-.02c.38-.74 1.28-1.02 2.01-.63c.26.14.48.36.62.62l1.06 2.01'/%3E%3Cpath d='M15.47 6.45c.58-.59 1.53-.59 2.11-.01c.22.22.36.5.41.81l1.5 9.11c.1.62-.2 1.24-.76 1.54l-6.07 2.9c-.46.25-1.01.26-1.46 0l-6.02-2.92c-.55-.31-.85-.92-.75-1.54L6.39 4.3c.12-.82.89-1.38 1.7-1.25c.46.07.87.36 1.09.77l1.24 1.76m-5.85 11.6L15.5 6.5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-github\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 19c-4.3 1.4-4.3-2.5-6-3m12 5v-3.5c0-1 .1-1.4-.5-2c2.8-.3 5.5-1.4 5.5-6a4.6 4.6 0 0 0-1.3-3.2a4.2 4.2 0 0 0-.1-3.2s-1.1-.3-3.5 1.3a12.3 12.3 0 0 0-6.2 0C6.5 2.8 5.4 3.1 5.4 3.1a4.2 4.2 0 0 0-.1 3.2A4.6 4.6 0 0 0 4 9.5c0 4.6 2.7 5.7 5.5 6c-.6.6-.6 1.2-.5 2V21'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-google-analytics\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 10.105A1.105 1.105 0 0 1 11.105 9h1.79A1.105 1.105 0 0 1 14 10.105v9.79A1.105 1.105 0 0 1 12.895 21h-1.79A1.105 1.105 0 0 1 10 19.895zm7-6A1.105 1.105 0 0 1 18.105 3h1.79A1.105 1.105 0 0 1 21 4.105v15.79A1.105 1.105 0 0 1 19.895 21h-1.79A1.105 1.105 0 0 1 17 19.895zM3 19a2 2 0 1 0 4 0a2 2 0 1 0-4 0'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-google\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20.945 11a9 9 0 1 1-3.284-5.997l-2.655 2.392A5.5 5.5 0 1 0 17.125 14H13v-3z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-hipchat\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M17.802 17.292s.077-.055.2-.149c1.843-1.425 3-3.49 3-5.789c0-4.286-4.03-7.764-9-7.764s-9 3.478-9 7.764c0 4.288 4.03 7.646 9 7.646q.636 0 2.088-.084c1.262.82 3.104 1.493 4.716 1.493c.499 0 .734-.41.414-.828c-.486-.596-1.156-1.551-1.416-2.29z'/%3E%3Cpath d='M7.5 13.5c2.5 2.5 6.5 2.5 9 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-html5\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m20 4l-2 14.5l-6 2l-6-2L4 4z'/%3E%3Cpath d='M15.5 8h-7l.5 4h6l-.5 3.5l-2.5.75l-2.5-.75l-.1-.5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-instagram\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 8a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H8a4 4 0 0 1-4-4z'/%3E%3Cpath d='M9 12a3 3 0 1 0 6 0a3 3 0 0 0-6 0m7.5-4.5v.01'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-mastercard\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0'/%3E%3Cpath d='M12 9.765a3 3 0 1 0 0 4.47'/%3E%3Cpath d='M3 7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-paypal\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 13h2.5c2.5 0 5-2.5 5-5c0-3-1.9-5-5-5H7c-.5 0-1 .5-1 1L4 18c0 .5.5 1 1 1h2.8L9 14c.1-.6.4-1 1-1m7.5-5.8C19.2 8.2 20 10 20 12c0 2.5-2.5 4.5-5 4.5h-2.6l-.6 3.6a1 1 0 0 1-1 .8H8.1a.5.5 0 0 1-.5-.6l.2-1.4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-react\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M6.306 8.711C3.704 9.434 2 10.637 2 12c0 2.21 4.477 4 10 4c.773 0 1.526-.035 2.248-.102m3.444-.609C20.295 14.567 22 13.363 22 12c0-2.21-4.477-4-10-4c-.773 0-1.526.035-2.25.102'/%3E%3Cpath d='M6.305 15.287C5.629 17.902 5.82 19.98 7 20.66c1.913 1.105 5.703-1.877 8.464-6.66q.581-1.007 1.036-2m1.194-3.284C18.371 6.1 18.181 4.02 17 3.34C15.087 2.235 11.297 5.217 8.536 10c-.387.67-.733 1.34-1.037 2'/%3E%3Cpath d='M12 5.424C10.075 3.532 8.18 2.658 7 3.34C5.087 4.444 5.774 9.217 8.536 14c.386.67.793 1.304 1.212 1.896M12 18.574c1.926 1.893 3.821 2.768 5 2.086c1.913-1.104 1.226-5.877-1.536-10.66q-.563-.976-1.212-1.897M11.5 12.866a1 1 0 1 0 1-1.732a1 1 0 0 0-1 1.732'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-stripe\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11.453 8.056c0-.623.518-.979 1.442-.979c1.69 0 3.41.343 4.605.923l.5-4c-.948-.449-2.82-1-5.5-1c-1.895 0-3.373.087-4.5 1c-1.172.956-2 2.33-2 4c0 3.03 1.958 4.906 5 6c1.961.69 3 .743 3 1.5c0 .735-.851 1.5-2 1.5c-1.423 0-3.963-.609-5.5-1.5l-.5 4c1.321.734 3.474 1.5 6 1.5c2 0 3.957-.468 5.084-1.36C18.347 18.661 19 17.372 19 15.5c0-3.096-1.915-4.547-5-5.637c-1.646-.605-2.544-1.07-2.544-1.807z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-twitter\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M22 4.01c-1 .49-1.98.689-3 .99c-1.121-1.265-2.783-1.335-4.38-.737S11.977 6.323 12 8v1c-3.245.083-6.135-1.395-8-4c0 0-4.182 7.433 4 11c-1.872 1.247-3.739 2.088-6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58-1.04 6.522-3.723 7.651-7.742a13.8 13.8 0 0 0 .497-3.753c0-.249 1.51-2.772 1.818-4.013z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-vue\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16.5 4L12 12L7.5 4'/%3E%3Cpath d='m3 4l9 16l9-16'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-wechat\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16.5 10c3.038 0 5.5 2.015 5.5 4.5c0 1.397-.778 2.645-2 3.47V20l-1.964-1.178A6.7 6.7 0 0 1 16.5 19c-3.038 0-5.5-2.015-5.5-4.5s2.462-4.5 5.5-4.5'/%3E%3Cpath d='M11.197 15.698c-.69.196-1.43.302-2.197.302a8 8 0 0 1-2.612-.432L4 17v-2.801C2.763 13.117 2 11.635 2 10c0-3.314 3.134-6 7-6c3.782 0 6.863 2.57 7 5.785v.233M10 8h.01M7 8h.01M15 14h.01M18 14h.01'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-windows-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M21 13v5c0 1.57-1.248 2.832-2.715 2.923l-.113.003l-.042.018a1 1 0 0 1-.336.056l-.118-.008L13 20.407V13zm-10 0v7.157l-5.3-.662C4.186 19.344 3 18.112 3 16.6V13zm0-9.158V11H3V7.4c0-1.454 1.096-2.648 2.505-2.87zM21 5.9V11h-8V3.591l4.717-.589C19.476 2.857 21 4.191 21 5.9'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-x\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m4 4l11.733 16H20L8.267 4zm0 16l6.768-6.768m2.46-2.46L20 4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--brand-youtube\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 8a4 4 0 0 1 4-4h12a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4z'/%3E%3Cpath d='m10 9l5 3l-5 3z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--briefcase-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm5-2V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--briefcase\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm5-2V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2m-4 5v.01'/%3E%3Cpath d='M3 13a20 20 0 0 0 18 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--building-arch\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 21h18M4 21V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v15'/%3E%3Cpath d='M9 21v-8a3 3 0 0 1 6 0v8'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--building-community\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m8 9l5 5v7H8v-4m0 4H3v-7l5-5m1 1V4a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v17h-8m0-14v.01M17 7v.01M17 11v.01M17 15v.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--building-cottage\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 21h18M4 21V10l2.5-4.5L12 3l5.5 2.5L20 10v11'/%3E%3Cpath d='M10 9a2 2 0 1 0 4 0a2 2 0 1 0-4 0M9 21v-5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--building-store\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 21h18M3 7v1a3 3 0 0 0 6 0V7m0 1a3 3 0 0 0 6 0V7m0 1a3 3 0 0 0 6 0V7H3l2-4h14l2 4M5 21V10.85M19 21V10.85M9 21v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--building\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 21h18M9 8h1m-1 4h1m-1 4h1m4-8h1m-1 4h1m-1 4h1M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--calendar-event\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm12-4v4M8 3v4m-4 4h16'/%3E%3Cpath d='M8 15h2v2H8z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--calendar-time\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11.795 21H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4'/%3E%3Cpath d='M14 18a4 4 0 1 0 8 0a4 4 0 1 0-8 0m1-15v4M7 3v4m-4 4h16'/%3E%3Cpath d='M18 16.496V18l1 1'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--calendar-week\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm12-4v4M8 3v4m-4 4h16M7 14h.013m2.997 0h.005m2.995 0h.005m3 0h.005m-3.005 3h.005m-6.01 0h.005m2.995 0h.005'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--calendar\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm12-4v4M8 3v4m-4 4h16m-9 4h1m0 0v3'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--camera\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 7h1a2 2 0 0 0 2-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2'/%3E%3Cpath d='M9 13a3 3 0 1 0 6 0a3 3 0 0 0-6 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--car\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 17a2 2 0 1 0 4 0a2 2 0 1 0-4 0m10 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0'/%3E%3Cpath d='M5 17H3v-6l2-5h9l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0H9m-6-6h15m-6 0V6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--caret-up-down\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m18 10l-6-6l-6 6zm0 4l-6 6l-6-6z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chart-bar\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 13a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1zm12-4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1zM9 5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1zM4 20h14'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chart-infographic\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 7a4 4 0 1 0 8 0a4 4 0 1 0-8 0'/%3E%3Cpath d='M7 3v4h4M9 17v4m8-7v7m-4-8v8m8-9v9'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--chart-line\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 19h16M4 15l4-6l4 2l4-5l4 4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chart-pie-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 3v9h9'/%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--chart-pie\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 3.2A9 9 0 1 0 20.8 14a1 1 0 0 0-1-1H13a2 2 0 0 1-2-2V4a.9.9 0 0 0-1-.8'/%3E%3Cpath d='M15 3.5A9 9 0 0 1 20.5 9H16a1 1 0 0 1-1-1z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--check\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--checkbox\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m9 11l3 3l8-8'/%3E%3Cpath d='M20 12v6a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h9'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--checklist\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9.615 20H7a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8m-3 5l2 2l4-4M9 8h4m-4 4h2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--checks\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 12l5 5L22 7M2 12l5 5m5-5l5-5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chevron-down\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chevron-left\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m15 6l-6 6l6 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chevron-right\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 6l6 6l-6 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chevron-up\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 15l6-6l6 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chevrons-left\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m11 7l-5 5l5 5m6-10l-5 5l5 5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--chevrons-right\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 7l5 5l-5 5m6-10l5 5l-5 5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--circle-check\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--circle-dashed-letter-p\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 12h2a2 2 0 1 0 0-4h-2v8M8.56 3.69a9 9 0 0 0-2.92 1.95M3.69 8.56A9 9 0 0 0 3 12m.69 3.44a9 9 0 0 0 1.95 2.92m2.92 1.95A9 9 0 0 0 12 21m3.44-.69a9 9 0 0 0 2.92-1.95m1.95-2.92A9 9 0 0 0 21 12m-.69-3.44a9 9 0 0 0-1.95-2.92m-2.92-1.95A9 9 0 0 0 12 3'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--circle-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M7 3.34a10 10 0 1 1-4.995 8.984L2 12l.005-.324A10 10 0 0 1 7 3.34'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--circle-plus\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0m6 0h6m-3-3v6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--circle-x\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0m7-2l4 4m0-4l-4 4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--circle\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--clipboard-copy\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h3m9-9V7a2 2 0 0 0-2-2h-2m-2 12v-1a1 1 0 0 1 1-1h1m3 0h1a1 1 0 0 1 1 1v1m0 3v1a1 1 0 0 1-1 1h-1m-3 0h-1a1 1 0 0 1-1-1v-1'/%3E%3Cpath d='M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v0a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--clock\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0'/%3E%3Cpath d='M12 7v5l3 3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--code\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 8l-4 4l4 4m10-8l4 4l-4 4M14 4l-4 16'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--coins\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 14c0 1.657 2.686 3 6 3s6-1.343 6-3s-2.686-3-6-3s-6 1.343-6 3'/%3E%3Cpath d='M9 14v4c0 1.656 2.686 3 6 3s6-1.344 6-3v-4M3 6c0 1.072 1.144 2.062 3 2.598s4.144.536 6 0S15 7.072 15 6s-1.144-2.062-3-2.598s-4.144-.536-6 0S3 4.928 3 6'/%3E%3Cpath d='M3 6v10c0 .888.772 1.45 2 2'/%3E%3Cpath d='M3 11c0 .888.772 1.45 2 2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--confetti\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 5h2M5 4v2m6.5-2L11 6m7-1h2m-1-1v2m-4 3l-1 1m4 3l2-.5M18 19h2m-1-1v2m-5-3.482L7.482 10l-4.39 9.58a1 1 0 0 0 1.329 1.329z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--copy-check\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M7 9.667A2.667 2.667 0 0 1 9.667 7h8.666A2.667 2.667 0 0 1 21 9.667v8.666A2.667 2.667 0 0 1 18.333 21H9.667A2.667 2.667 0 0 1 7 18.333z'/%3E%3Cpath d='M4.012 16.737A2 2 0 0 1 3 15V5c0-1.1.9-2 2-2h10c.75 0 1.158.385 1.5 1M11 14l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--copy\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M7 9.667A2.667 2.667 0 0 1 9.667 7h8.666A2.667 2.667 0 0 1 21 9.667v8.666A2.667 2.667 0 0 1 18.333 21H9.667A2.667 2.667 0 0 1 7 18.333z'/%3E%3Cpath d='M4.012 16.737A2 2 0 0 1 3 15V5c0-1.1.9-2 2-2h10c.75 0 1.158.385 1.5 1'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--corner-left-down\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6h-6a3 3 0 0 0-3 3v10l-4-4m8 0l-4 4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--credit-card-pay\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 19H6a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v4.5M3 10h18m-5 9h6m-3-3l3 3l-3 3M7.005 15h.005M11 15h2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--credit-card\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 8a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm0 2h18M7 15h.01M11 15h2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--crown\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 6l4 6l5-4l-2 10H5L3 8l5 4z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--cube\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21 16.008V7.99a1.98 1.98 0 0 0-1-1.717l-7-4.008a2.02 2.02 0 0 0-2 0L4 6.273c-.619.355-1 1.01-1 1.718v8.018c0 .709.381 1.363 1 1.717l7 4.008a2.02 2.02 0 0 0 2 0l7-4.008c.619-.355 1-1.01 1-1.718M12 22V12m0 0l8.73-5.04m-17.46 0L12 12'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--currency-dollar\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16.7 8A3 3 0 0 0 14 6h-4a3 3 0 0 0 0 6h4a3 3 0 0 1 0 6h-4a3 3 0 0 1-2.7-2M12 3v3m0 12v3'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--current-location-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M12 1a1 1 0 0 1 1 1v1.055A9.004 9.004 0 0 1 20.946 11H22a1 1 0 0 1 0 2h-1.055a9.004 9.004 0 0 1-7.944 7.945L13 22a1 1 0 0 1-2 0v-1.055a9.004 9.004 0 0 1-7.945-7.944L2 13a1 1 0 0 1 0-2h1.055A9.004 9.004 0 0 1 11 3.055V2a1 1 0 0 1 1-1m0 4a7 7 0 1 0 0 14a7 7 0 0 0 0-14m0 3a4 4 0 1 1-4 4l.005-.2A4 4 0 0 1 12 8'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--current-location\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0'/%3E%3Cpath d='M4 12a8 8 0 1 0 16 0a8 8 0 1 0-16 0m8-10v2m0 16v2m8-10h2M2 12h2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--dashboard\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 13a2 2 0 1 0 4 0a2 2 0 1 0-4 0m3.45-1.45L15.5 9.5'/%3E%3Cpath d='M6.4 20a9 9 0 1 1 11.2 0z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--database\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 6a8 3 0 1 0 16 0A8 3 0 1 0 4 6'/%3E%3Cpath d='M4 6v6a8 3 0 0 0 16 0V6'/%3E%3Cpath d='M4 12v6a8 3 0 0 0 16 0v-6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--device-desktop-analytics\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 5a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1zm4 15h10m-8-4v4m6-4v4m-6-8V8m3 4v-1m3 1v-2m-3 2v-1'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--device-desktop\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 5a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1zm4 15h10m-8-4v4m6-4v4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--device-laptop\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 19h18M5 7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--device-mobile\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 5a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2zm5-1h2m-1 13v.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--device-tablet\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1z'/%3E%3Cpath d='M11 17a1 1 0 1 0 2 0a1 1 0 0 0-2 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--device-watch-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M15 2a1 1 0 0 1 1 1v2.126c1.726.445 3 2.01 3 3.874v6a4 4 0 0 1-3 3.874V21a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1v-2.126A4 4 0 0 1 5 15V9a4 4 0 0 1 3-3.874V3a1 1 0 0 1 1-1zm-1 17h-4v1h4zm0-15h-4v1h4z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--devices\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M13 9a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1z'/%3E%3Cpath d='M18 8V5a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h9m3-9h2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--diamond\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M6 5h12l3 5l-8.5 9.5a.7.7 0 0 1-1 0L3 10z'/%3E%3Cpath d='M10 12L8 9.8l.6-1'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--diamonds-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M12 2.005c-.777 0-1.508.367-1.971.99L4.667 9.89c-.89 1.136-.89 3.083 0 4.227l5.375 6.911a2.457 2.457 0 0 0 3.93-.017l5.361-6.894c.89-1.136.89-3.083 0-4.227l-5.375-6.911A2.45 2.45 0 0 0 12 2.005'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--discount-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m9 15l6-6'/%3E%3Ccircle cx='9.5' cy='9.5' r='.5' fill='black'/%3E%3Ccircle cx='14.5' cy='14.5' r='.5' fill='black'/%3E%3Cpath d='M5 7.2A2.2 2.2 0 0 1 7.2 5h1a2.2 2.2 0 0 0 1.55-.64l.7-.7a2.2 2.2 0 0 1 3.12 0l.7.7a2.2 2.2 0 0 0 1.55.64h1a2.2 2.2 0 0 1 2.2 2.2v1a2.2 2.2 0 0 0 .64 1.55l.7.7a2.2 2.2 0 0 1 0 3.12l-.7.7a2.2 2.2 0 0 0-.64 1.55v1a2.2 2.2 0 0 1-2.2 2.2h-1a2.2 2.2 0 0 0-1.55.64l-.7.7a2.2 2.2 0 0 1-3.12 0l-.7-.7a2.2 2.2 0 0 0-1.55-.64h-1a2.2 2.2 0 0 1-2.2-2.2v-1a2.2 2.2 0 0 0-.64-1.55l-.7-.7a2.2 2.2 0 0 1 0-3.12l.7-.7A2.2 2.2 0 0 0 5 8.2z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--discount-check\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 7.2A2.2 2.2 0 0 1 7.2 5h1a2.2 2.2 0 0 0 1.55-.64l.7-.7a2.2 2.2 0 0 1 3.12 0l.7.7c.412.41.97.64 1.55.64h1a2.2 2.2 0 0 1 2.2 2.2v1c0 .58.23 1.138.64 1.55l.7.7a2.2 2.2 0 0 1 0 3.12l-.7.7a2.2 2.2 0 0 0-.64 1.55v1a2.2 2.2 0 0 1-2.2 2.2h-1a2.2 2.2 0 0 0-1.55.64l-.7.7a2.2 2.2 0 0 1-3.12 0l-.7-.7a2.2 2.2 0 0 0-1.55-.64h-1a2.2 2.2 0 0 1-2.2-2.2v-1a2.2 2.2 0 0 0-.64-1.55l-.7-.7a2.2 2.2 0 0 1 0-3.12l.7-.7A2.2 2.2 0 0 0 5 8.2z'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--dots-vertical\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0 7a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0-14a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--dots\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--download\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 11l5 5l5-5m-5-7v12'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--edit\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M7 7H6a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-1'/%3E%3Cpath d='M20.385 6.585a2.1 2.1 0 0 0-2.97-2.97L9 12v3h3zM16 5l3 3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--external-link\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 6H6a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-6m-7 1l9-9m-5 0h5v5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--eye-off\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.585 10.587a2 2 0 0 0 2.829 2.828'/%3E%3Cpath d='M16.681 16.673A8.7 8.7 0 0 1 12 18q-5.4 0-9-6q1.908-3.18 4.32-4.674m2.86-1.146A9 9 0 0 1 12 6q5.4 0 9 6q-1 1.665-2.138 2.87M3 3l18 18'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--eye\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 12a2 2 0 1 0 4 0a2 2 0 0 0-4 0'/%3E%3Cpath d='M21 12q-3.6 6-9 6t-9-6q3.6-6 9-6t9 6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-excel\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2m-7-9l4 5m-4 0l4-5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-horizontal\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 5v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7l-5-5H5a2 2 0 0 0-2 2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-invoice\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2M9 7h1m-1 6h6m-2 4h2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-search\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M12 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v4.5'/%3E%3Cpath d='M14 17.5a2.5 2.5 0 1 0 5 0a2.5 2.5 0 1 0-5 0m4.5 2L21 22'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-text\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2M9 9h1m-1 4h6m-6 4h6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-type-csv\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M5 12V5a2 2 0 0 1 2-2h7l5 5v4M7 16.5a1.5 1.5 0 0 0-3 0v3a1.5 1.5 0 0 0 3 0m3 .75c0 .414.336.75.75.75H12a1 1 0 0 0 1-1v-1a1 1 0 0 0-1-1h-1a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h1.25a.75.75 0 0 1 .75.75m3-.75l2 6l2-6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-type-pdf\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M5 12V5a2 2 0 0 1 2-2h7l5 5v4M5 18h1.5a1.5 1.5 0 0 0 0-3H5v6m12-3h2m1-3h-3v6m-6-6v6h1a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file-upload\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2m-5-10v6'/%3E%3Cpath d='M9.5 13.5L12 11l2.5 2.5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--file\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--folder\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--gift\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 9a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1zm9-1v13'/%3E%3Cpath d='M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7m2.5-4a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5a2.5 2.5 0 0 1 0 5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--hanger\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M14 6a2 2 0 1 0-4 0c0 1.667.67 3 2 4h-.008l7.971 4.428a2 2 0 0 1 1.029 1.749V17a2 2 0 0 1-2 2h-14a2 2 0 0 1-2-2v-.823a2 2 0 0 1 1.029-1.749L11.992 10'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--headphones\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 15a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm11 0a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2z'/%3E%3Cpath d='M4 15v-3a8 8 0 0 1 16 0v3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--heart\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19.5 12.572L12 20l-7.5-7.428A5 5 0 1 1 12 6.006a5 5 0 1 1 7.5 6.572'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--help\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0m9 5v.01'/%3E%3Cpath d='M12 13.5a1.5 1.5 0 0 1 1-1.5a2.6 2.6 0 1 0-3-4'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--home-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 12H3l9-9l9 9h-2M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7'/%3E%3Cpath d='M10 12h4v4h-4z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--home\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 12H3l9-9l9 9h-2M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7'/%3E%3Cpath d='M9 21v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--id-badge\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H8a3 3 0 0 1-3-3z'/%3E%3Cpath d='M10 13a2 2 0 1 0 4 0a2 2 0 1 0-4 0m0-7h4M9 18h6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--infinity\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9.828 9.172a4 4 0 1 0 0 5.656A10 10 0 0 0 12 12a10 10 0 0 1 2.172-2.828a4 4 0 1 1 0 5.656A10 10 0 0 1 12 12a10 10 0 0 0-2.172-2.828'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--info-circle\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0m9-3h.01'/%3E%3Cpath d='M11 12h1v4h1'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--language\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 6.371C9 10.789 6.761 13 4 13m0-6.629h7'/%3E%3Cpath d='M5 9c0 2.144 2.252 3.908 6 4m1 7l4-9l4 9m-.9-2h-6.2M6.694 3l.793.582'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--layers-intersect\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8 6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z'/%3E%3Cpath d='M4 10a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--layout-grid-add\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm10 0a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1zM4 15a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm10 2h6m-3-3v6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--layout-grid\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm10 0a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1zM4 15a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm10 0a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--link\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 15l6-6m-4-3l.463-.536a5 5 0 0 1 7.071 7.072L18 13m-5 5l-.397.534a5.07 5.07 0 0 1-7.127 0a4.97 4.97 0 0 1 0-7.071L6 11'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--list-check\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3.5 5.5L5 7l2.5-2.5m-4 7L5 13l2.5-2.5m-4 7L5 19l2.5-2.5M11 6h9m-9 6h9m-9 6h9'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--list-details\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 5h8m-8 4h5m-5 6h8m-8 4h5M3 5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1zm0 10a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--list-letters\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 6h9m-9 6h9m-9 6h9M4 10V5.5a1.5 1.5 0 0 1 3 0V10M4 8h3M4 20h1.5a1.5 1.5 0 0 0 0-3H4h1.5a1.5 1.5 0 0 0 0-3H4z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--list-numbers\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 6h9m-9 6h9m-8 6h8M4 16a2 2 0 1 1 4 0c0 .591-.5 1-1 1.5L4 20h4M6 10V4L4 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--list\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 6h11M9 12h11M9 18h11M5 6v.01M5 12v.01M5 18v.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--lock\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 13a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2z'/%3E%3Cpath d='M11 16a1 1 0 1 0 2 0a1 1 0 0 0-2 0m-3-5V7a4 4 0 1 1 8 0v4'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--login\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2'/%3E%3Cpath d='M21 12H8l3-3m0 6l-3-3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--logout\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2'/%3E%3Cpath d='M9 12h12l-3-3m0 6l3-3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--mail\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3Cpath d='m3 7l9 6l9-6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--map-pin\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 11a3 3 0 1 0 6 0a3 3 0 0 0-6 0'/%3E%3Cpath d='M17.657 16.657L13.414 20.9a2 2 0 0 1-2.827 0l-4.244-4.243a8 8 0 1 1 11.314 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--menu-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--message-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 9h8m-8 4h6m-5 5H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-3l-3 3z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--message-circle-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m3 20l1.3-3.9A9 8 0 1 1 7.7 19z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--message\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 9h8m-8 4h6m4-9a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-5l-5 3v-3H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--minus\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--moneybag\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9.5 3h5A1.5 1.5 0 0 1 16 4.5A3.5 3.5 0 0 1 12.5 8h-1A3.5 3.5 0 0 1 8 4.5A1.5 1.5 0 0 1 9.5 3'/%3E%3Cpath d='M4 17v-1a8 8 0 1 1 16 0v1a4 4 0 0 1-4 4H8a4 4 0 0 1-4-4'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--mood-happy\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0m6-3h.01M15 9h.01'/%3E%3Cpath d='M8 13a4 4 0 1 0 8 0z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--moon\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 3h.393a7.5 7.5 0 0 0 7.92 12.446A9 9 0 1 1 12 2.992z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--mouse\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 7a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v10a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4zm6 0v4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--notes\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2zm4 2h6m-6 4h6m-6 4h4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--notification\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 6H7a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-3m-4-7a3 3 0 1 0 6 0a3 3 0 1 0-6 0'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--palette\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 21a9 9 0 0 1 0-18c4.97 0 9 3.582 9 8c0 1.06-.474 2.078-1.318 2.828S17.693 15 16.5 15H14a2 2 0 0 0-1 3.75A1.3 1.3 0 0 1 12 21'/%3E%3Cpath d='M7.5 10.5a1 1 0 1 0 2 0a1 1 0 1 0-2 0m4-3a1 1 0 1 0 2 0a1 1 0 1 0-2 0m4 3a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--pencil\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h4L18.5 9.5a2.828 2.828 0 1 0-4-4L4 16zm9.5-13.5l4 4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--percentage\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 17a1 1 0 1 0 2 0a1 1 0 1 0-2 0M6 7a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0 11L18 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--phone\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--photo\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 8h.01M3 6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3z'/%3E%3Cpath d='m3 16l5-5c.928-.893 2.072-.893 3 0l5 5'/%3E%3Cpath d='m14 14l1-1c.928-.893 2.072-.893 3 0l3 3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--plane-tilt\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m14.5 6.5l3-2.9a2.05 2.05 0 0 1 2.9 2.9l-2.9 3L20 17l-2.5 2.55L14 13l-3 3v3l-2 2l-1.5-4.5L3 15l2-2h3l3-3l-6.5-3.5L7 4z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--play\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath d='M5 5v14a2 2 0 0 0 2.75 1.84L20 13.74a2 2 0 0 0 0-3.5L7.75 3.14A2 2 0 0 0 5 4.89' fill='none' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--playlist-add\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 8H5m0 4h9m-3 4H5m10 0h6m-3-3v6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--plug-connected\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 12l5 5l-1.5 1.5a3.536 3.536 0 1 1-5-5zm10 0l-5-5l1.5-1.5a3.536 3.536 0 1 1 5 5zM3 21l2.5-2.5m13-13L21 3m-11 8l-2 2m5 1l-2 2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--plus\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m-7-7h14'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--presentation\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 4h18M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4m-8 12v4m-3 0h6'/%3E%3Cpath d='m8 12l3-3l2 2l3-3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--printer\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M17 17h2a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2m10-8V5a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v4'/%3E%3Cpath d='M7 15a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--question-mark\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 8a3.5 3 0 0 1 3.5-3h1A3.5 3 0 0 1 16 8a3 3 0 0 1-2 3a3 4 0 0 0-2 4m0 4v.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--receipt\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16l-3-2l-2 2l-2-2l-2 2l-2-2zM9 7h6m-6 4h6m-2 4h2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--refresh\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 11A8.1 8.1 0 0 0 4.5 9M4 5v4h4m-4 4a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--report-money\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2'/%3E%3Cpath d='M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v0a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2m5 6h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3H10m2 0v1m0-8v1'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--report\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8 5H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h5.697M18 14v4h4m-4-7V7a2 2 0 0 0-2-2h-2'/%3E%3Cpath d='M8 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v0a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2m6 13a4 4 0 1 0 8 0a4 4 0 1 0-8 0m-6-7h4m-4 4h3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--rocket\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3-5a9 9 0 0 0 6-8a3 3 0 0 0-3-3a9 9 0 0 0-8 6a6 6 0 0 0-5 3'/%3E%3Cpath d='M7 14a6 6 0 0 0-3 6a6 6 0 0 0 6-3m4-8a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--rotate-clockwise-2\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 4.55a8 8 0 0 1 6 14.9M15 15v5h5M5.63 7.16v.01M4.06 11v.01m.57 4.09v.01m2.53 3.26v.01M11 19.94v.01'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--rotate-clockwise\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4.05 11a8 8 0 1 1 .5 4m-.5 5v-5h5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--rotate\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19.95 11a8 8 0 1 0-.5 4m.5 5v-5h-5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--run\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 4a1 1 0 1 0 2 0a1 1 0 1 0-2 0M4 17l5 1l.75-1.5M15 21v-4l-4-3l1-6'/%3E%3Cpath d='M7 12V9l5-1l3 3l3 1'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--sailboat\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1M4 18l-1-3h18l-1 3m-9-6h7l-7-9zM8 7l-2 5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--screen-share\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21 12v3a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h9M7 20h10m-8-4v4m6-4v4m2-16h4v4m-5 1l5-5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--search\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 10a7 7 0 1 0 14 0a7 7 0 1 0-14 0m18 11l-6-6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--send\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 14L21 3m0 0l-6.5 18a.55.55 0 0 1-1 0L10 14l-7-3.5a.55.55 0 0 1 0-1z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--settings\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066-2.573c-.94-1.543.826-3.31 2.37-2.37c1 .608 2.296.07 2.572-1.065'/%3E%3Cpath d='M9 12a3 3 0 1 0 6 0a3 3 0 0 0-6 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--share-3\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 4v4C6.425 9.028 3.98 14.788 3 20c-.037.206 5.384-5.962 10-6v4l8-7z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--share\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0m12-6a3 3 0 1 0 6 0a3 3 0 1 0-6 0m0 12a3 3 0 1 0 6 0a3 3 0 1 0-6 0m-6.3-7.3l6.6-3.4m-6.6 6l6.6 3.4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--shield-check-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m11.998 2l.118.007l.059.008l.061.013l.111.034a1 1 0 0 1 .217.112l.104.082l.255.218a11 11 0 0 0 7.189 2.537l.342-.01a1 1 0 0 1 1.005.717a13 13 0 0 1-9.208 16.25a1 1 0 0 1-.502 0A13 13 0 0 1 2.54 5.718a1 1 0 0 1 1.005-.717a11 11 0 0 0 7.531-2.527l.263-.225l.096-.075a1 1 0 0 1 .217-.112l.112-.034a1 1 0 0 1 .119-.021zm3.71 7.293a1 1 0 0 0-1.415 0L11 12.585l-1.293-1.292l-.094-.083a1 1 0 0 0-1.32 1.497l2 2l.094.083a1 1 0 0 0 1.32-.083l4-4l.083-.094a1 1 0 0 0-.083-1.32z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--shield-check\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11.46 20.846A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3a12 12 0 0 0 8.5 3a12 12 0 0 1-.09 7.06M15 19l2 2l4-4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--shield-checkered\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3m0 0v18m-8.5-9h17'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--shield-chevron\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3'/%3E%3Cpath d='m4 14l8-3l8 3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--shield-lock\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3'/%3E%3Cpath d='M11 11a1 1 0 1 0 2 0a1 1 0 1 0-2 0m1 1v2.5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--shopping-bag\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M6.331 8H17.67a2 2 0 0 1 1.977 2.304l-1.255 8.152A3 3 0 0 1 15.426 21H8.574a3 3 0 0 1-2.965-2.544l-1.255-8.152A2 2 0 0 1 6.331 8'/%3E%3Cpath d='M9 11V6a3 3 0 0 1 6 0v5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--shopping-cart\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 19a2 2 0 1 0 4 0a2 2 0 1 0-4 0m11 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0'/%3E%3Cpath d='M17 17H6V3H4'/%3E%3Cpath d='m6 5l14 1l-1 7H6'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--smart-home\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m19 8.71l-5.333-4.148a2.666 2.666 0 0 0-3.274 0L5.059 8.71a2.67 2.67 0 0 0-1.029 2.105v7.2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.2c0-.823-.38-1.6-1.03-2.105'/%3E%3Cpath d='M16 15c-2.21 1.333-5.792 1.333-8 0'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--social\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 5a2 2 0 1 0 4 0a2 2 0 1 0-4 0M3 19a2 2 0 1 0 4 0a2 2 0 1 0-4 0m14 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0m-8-5a3 3 0 1 0 6 0a3 3 0 1 0-6 0m3-7v4m-5.3 6.8l2.8-2m7.8 2l-2.8-2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--sparkles\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 18a2 2 0 0 1 2 2a2 2 0 0 1 2-2a2 2 0 0 1-2-2a2 2 0 0 1-2 2m0-12a2 2 0 0 1 2 2a2 2 0 0 1 2-2a2 2 0 0 1-2-2a2 2 0 0 1-2 2M9 18a6 6 0 0 1 6-6a6 6 0 0 1-6-6a6 6 0 0 1-6 6a6 6 0 0 1 6 6'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--square\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--star-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m8.243 7.34l-6.38.925l-.113.023a1 1 0 0 0-.44 1.684l4.622 4.499l-1.09 6.355l-.013.11a1 1 0 0 0 1.464.944l5.706-3l5.693 3l.1.046a1 1 0 0 0 1.352-1.1l-1.091-6.355l4.624-4.5l.078-.085a1 1 0 0 0-.633-1.62l-6.38-.926l-2.852-5.78a1 1 0 0 0-1.794 0z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--star-half-filled\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M12 1a1 1 0 0 1 .823.443l.067.116l2.852 5.781l6.38.925c.741.108 1.08.94.703 1.526l-.07.095l-.078.086l-4.624 4.499l1.09 6.355a1 1 0 0 1-1.249 1.135l-.101-.035l-.101-.046l-5.693-3l-5.706 3q-.158.082-.32.106l-.106.01a1.003 1.003 0 0 1-1.038-1.06l.013-.11l1.09-6.355l-4.623-4.5a1 1 0 0 1 .328-1.647l.113-.036l.114-.023l6.379-.925l2.853-5.78A.97.97 0 0 1 12 1m0 3.274V16.75a1 1 0 0 1 .239.029l.115.036l.112.05l4.363 2.299l-.836-4.873a1 1 0 0 1 .136-.696l.07-.099l.082-.09l3.546-3.453l-4.891-.708a1 1 0 0 1-.62-.344l-.073-.097l-.06-.106z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--star\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 17.75l-6.172 3.245l1.179-6.873l-5-4.867l6.9-1l3.086-6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--sun-moon\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9.173 14.83a4 4 0 1 1 5.657-5.657'/%3E%3Cpath d='m11.294 12.707l.174.247a7.5 7.5 0 0 0 8.845 2.492A9 9 0 0 1 5.642 18.36M3 12h1m8-9v1M5.6 5.6l.7.7M3 21L21 3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--sun\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 12a4 4 0 1 0 8 0a4 4 0 1 0-8 0m-5 0h1m8-9v1m8 8h1m-9 8v1M5.6 5.6l.7.7m12.1-.7l-.7.7m0 11.4l.7.7m-12.1-.7l-.7.7'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--table\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm0 5h18M10 3v18'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--tag\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M6.5 7.5a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3Cpath d='M3 6v5.172a2 2 0 0 0 .586 1.414l7.71 7.71a2.41 2.41 0 0 0 3.408 0l5.592-5.592a2.41 2.41 0 0 0 0-3.408l-7.71-7.71A2 2 0 0 0 11.172 3H6a3 3 0 0 0-3 3'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--text-direction-ltr\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 19h14m-2 2l2-2l-2-2M16 4H9.5a3.5 3.5 0 0 0 0 7h.5m4 4V4m-4 11V4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--text-direction-rtl\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 4H9.5a3.5 3.5 0 0 0 0 7h.5m4 4V4m-4 11V4M5 19h14M7 21l-2-2l2-2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--ticket\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 5v2m0 4v2m0 4v2M5 5h14a2 2 0 0 1 2 2v3a2 2 0 0 0 0 4v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3a2 2 0 0 0 0-4V7a2 2 0 0 1 2-2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--trash\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--trending-down\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7l6 6l4-4l8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--trending-up\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17l6-6l4 4l8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--truck\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 17a2 2 0 1 0 4 0a2 2 0 1 0-4 0m10 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0'/%3E%3Cpath d='M5 17H3V6a1 1 0 0 1 1-1h9v12m-4 0h6m4 0h2v-6h-8m0-5h5l3 5'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--upload\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 9l5-5l5 5m-5-5v12'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--user-check\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4m1 4l2 2l4-4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--user-circle\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3Cpath d='M9 10a3 3 0 1 0 6 0a3 3 0 1 0-6 0m-2.832 8.849A4 4 0 0 1 10 16h4a4 4 0 0 1 3.834 2.855'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--user-edit\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h3.5m4.92.61a2.1 2.1 0 0 1 2.97 2.97L18 22h-3v-3z'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--user-plus\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0m8 12h6m-3-3v6M6 21v-2a4 4 0 0 1 4-4h4'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--user-share\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h3m3 7l5-5m0 4.5V17h-4.5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--user-x\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h3.5m8.5 7l-5-5m0 5l5-5'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--user\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--users-group\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 13a2 2 0 1 0 4 0a2 2 0 0 0-4 0m-2 8v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1M15 5a2 2 0 1 0 4 0a2 2 0 0 0-4 0m2 5h2a2 2 0 0 1 2 2v1M5 5a2 2 0 1 0 4 0a2 2 0 0 0-4 0m-2 8v-1a2 2 0 0 1 2-2h2'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--users\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 7a4 4 0 1 0 8 0a4 4 0 1 0-8 0M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2m1-17.87a4 4 0 0 1 0 7.75M21 21v-2a4 4 0 0 0-3-3.85'/%3E%3C/svg%3E");
    }

    .icon-\[tabler--wallet\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M17 8V5a1 1 0 0 0-1-1H6a2 2 0 0 0 0 4h12a1 1 0 0 1 1 1v3m0 4v3a1 1 0 0 1-1 1H6a2 2 0 0 1-2-2V6'/%3E%3Cpath d='M20 12v4h-4a2 2 0 0 1 0-4z'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--world\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0m.6-3h16.8M3.6 15h16.8'/%3E%3Cpath d='M11.5 3a17 17 0 0 0 0 18m1-18a17 17 0 0 1 0 18'/%3E%3C/g%3E%3C/svg%3E");
    }

    .icon-\[tabler--x\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L6 18M6 6l12 12'/%3E%3C/svg%3E");
    }

    .icon-\[flag--ru-1x1\] {
        display: inline-block;
        width: 1em;
        height: 1em;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512' width='512' height='512'%3E%3Cpath fill='%23fff' d='M0 0h512v170.7H0z'/%3E%3Cpath fill='%230039a6' d='M0 170.7h512v170.6H0z'/%3E%3Cpath fill='%23d52b1e' d='M0 341.3h512V512H0z'/%3E%3C/svg%3E");
    }

    .p542o {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: var(--radius-field);
        background-color: var(--color-base-200);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-200) 20%, transparent);
        }

        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        padding-left: 0.5em;
        padding-right: 0.5em;
        border: var(--border) solid var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border: var(--border) solid color-mix(in oklab, var(--color-base-content) 25%, #0000);
        }

        border-bottom-width: calc(var(--border) + 1px);
        --size: calc(var(--size-selector, 0.25rem) * 6.5);
        height: var(--size);
        min-width: var(--size);
    }

    .sfwyt {
        display: flex;
        --tabs-height: auto;
        --tabs-direction: row;
        height: var(--tabs-height);
        flex-direction: var(--tabs-direction);
    }

    .dmz5p {
        max-width: 100%;
        overflow-x: auto;

        :where(& > ul) {
            display: flex;
            align-items: center;
            padding-inline: calc(0.25rem * 1);
            padding-block: calc(0.25rem * 2);
            white-space: nowrap;
            min-height: min-content;
        }

        :where(& > ol) {
            display: flex;
            align-items: center;
            padding-inline: calc(0.25rem * 1);
            padding-block: calc(0.25rem * 2);
            white-space: nowrap;
            min-height: min-content;
        }

        :where(& > ul > li) {
            display: inline-flex;
            align-items: center;
        }

        :where(& > ol > li) {
            display: inline-flex;
            align-items: center;
        }

        :where(& > ul > li > a) {
            display: inline-flex;
            align-items: center;
            gap: calc(0.25rem * 1);

            &:hover {
                @media (hover: hover) {
                    color: var(--color-primary);
                }
            }

            &:focus {
                --tw-outline-style: none;
                outline-style: none;
            }

            &:focus-visible {
                outline: 2px solid currentColor;
                outline-offset: 2px;
            }
        }

        :where(& > ol > li > a) {
            display: inline-flex;
            align-items: center;
            gap: calc(0.25rem * 1);

            &:hover {
                @media (hover: hover) {
                    color: var(--color-primary);
                }
            }

            &:focus {
                --tw-outline-style: none;
                outline-style: none;
            }

            &:focus-visible {
                outline: 2px solid currentColor;
                outline-offset: 2px;
            }
        }

        :where(& > ul > li:last-child) {
            cursor: text;
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
            color: var(--color-base-content);
        }

        :where(& > ol > li:last-child) {
            cursor: text;
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
            color: var(--color-base-content);
        }
    }

    .progress-bar {
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        border-radius: var(--radius-box);
        background-color: var(--color-neutral);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        white-space: nowrap;
        color: var(--color-neutral-content);
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-timing-function: var(--ease-in-out);
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 500ms;
        --tw-duration: 500ms;
        --tw-ease: var(--ease-in-out);

        &.srio8 {
            width: 100%;
            background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
            background-size: 50% 100%;
            background-repeat: no-repeat;
            animation: indeterminate-progress 4s infinite ease-in-out;
        }
    }

    .c8nzi {
        display: grid;
        width: 100%;
        grid-auto-flow: row;
        place-items: start;
        column-gap: calc(0.25rem * 4);
        row-gap: calc(0.25rem * 10);

        @media (width >=48rem) {
            grid-auto-flow: column;
        }

        &>* {
            display: grid;
            place-items: start;
            gap: calc(0.25rem * 3);
        }

        &.zz4vd {
            place-items: center;
            text-align: center;

            @media (width >=48rem) {
                grid-auto-flow: row dense;
            }

            &>* {
                place-items: center;
            }
        }

        :where(.y9rox) {
            --tw-font-weight: var(--font-weight-normal);
            font-weight: var(--font-weight-normal);
        }
    }

    .m7n98 {
        display: inline-grid;
        width: 100%;
        column-gap: calc(0.25rem * 4);
        row-gap: calc(0.25rem * 1);
        padding-inline: calc(0.25rem * 6);
        padding-block: calc(0.25rem * 4);
        grid-template-columns: repeat(1, 1fr);
        border-color: inherit;
    }

    .p2a3b {
        display: flex;
        width: 100%;
        align-items: center;
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 6);
        padding-block: calc(0.25rem * 3);
    }

    .zrq5j {
        display: flex;
        width: calc(1/2 * 100%);
        justify-content: flex-end;
    }

    .lvvmp {
        display: flex;
        width: calc(1/2 * 100%);
        justify-content: flex-start;
    }

    .zt5wl {
        display: flex;
        flex: auto;
        flex-direction: column;
        gap: calc(0.25rem * 2);
        padding: var(--card-p, 1.5rem);

        :where(p) {
            flex-grow: 1;
        }

        :where(.dq7u0)+& {
            padding-top: 0;
        }

        :where(&)+.uxwgi {
            padding-top: 0;
        }
    }

    .xeuqu {
        display: block;
        cursor: pointer;
        padding: calc(0.25rem * 1);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        color: var(--color-base-content);
    }

    .hfb1j {
        display: inline-grid;
        grid-auto-flow: column;

        :where(& > :not(:last-child)) {
            --tw-divide-x-reverse: 0;
            border-inline-style: var(--tw-border-style);
            border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
            border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(0px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
        }

        overflow-x: auto;
        border-radius: var(--radius-box);
        --tw-border-style: solid;
        border-style: solid;
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }

        background-color: var(--color-base-100);
        box-shadow: var(--card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300));

        @supports (color: color-mix(in lab, red, red)) {
            box-shadow: var(--card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000));
        }

        border-width: var(--card-border, 0px);

        &:where(.mely7) {
            border: var(--border) solid var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border: var(--border) solid color-mix(in oklab, var(--color-base-content) 20%, transparent);
            }
        }
    }

    .vrse0 {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-start;
        gap: calc(0.25rem * 3);
    }

    .carousel-body {
        display: flex;
        flex-wrap: nowrap;
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 700ms;
        --tw-duration: 700ms;
    }

    .qkmfa {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        gap: calc(0.25rem * 3);
        padding: calc(0.25rem * 6);

        :where(.xue9x)+& {
            padding-top: 0;
        }
    }

    .w3ci9 {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        gap: calc(0.25rem * 3);
        padding: calc(0.25rem * 6);
    }

    .ic9s6 {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: calc(0.25rem * 6);
    }

    .avatar-placeholder {
        &>div {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        &>span {
            display: flex;
            align-items: center;
            justify-content: center;
        }
    }

    .i3y5u {
        display: inline-flex;
        align-items: stretch;
        --join-ss: 0;
        --join-se: 0;
        --join-es: 0;
        --join-ee: 0;

        :where(.tc1j4) {
            border-start-start-radius: var(--join-ss, 0);
            border-start-end-radius: var(--join-se, 0);
            border-end-start-radius: var(--join-es, 0);
            border-end-end-radius: var(--join-ee, 0);

            * {
                --join-ss: var(--radius-field);
                --join-se: var(--radius-field);
                --join-es: var(--radius-field);
                --join-ee: var(--radius-field);
            }
        }

        >.tc1j4:where(:first-child) {
            --join-ss: var(--radius-field);
            --join-se: 0;
            --join-es: var(--radius-field);
            --join-ee: 0;
        }

        :first-child:not(:last-child) {
            :where(.tc1j4) {
                --join-ss: var(--radius-field);
                --join-se: 0;
                --join-es: var(--radius-field);
                --join-ee: 0;
            }
        }

        >.tc1j4:where(:last-child) {
            --join-ss: 0;
            --join-se: var(--radius-field);
            --join-es: 0;
            --join-ee: var(--radius-field);
        }

        :last-child:not(:first-child) {
            :where(.tc1j4) {
                --join-ss: 0;
                --join-se: var(--radius-field);
                --join-es: 0;
                --join-ee: var(--radius-field);
            }
        }

        >.tc1j4:where(:only-child) {
            --join-ss: var(--radius-field);
            --join-se: var(--radius-field);
            --join-es: var(--radius-field);
            --join-ee: var(--radius-field);
        }

        :only-child {
            :where(.tc1j4) {
                --join-ss: var(--radius-field);
                --join-se: var(--radius-field);
                --join-es: var(--radius-field);
                --join-ee: var(--radius-field);
            }
        }
    }

    .avatar-group {
        display: flex;

        :where(.avatar) {
            overflow: hidden;
            border-radius: calc(infinity * 1px);
            border: 2px solid var(--color-base-100);
        }
    }

    .y1yhl {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 1;
    }

    .z4d8w {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
    }

    .qjomf {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;
    }

    .b2zip {
        :root & {
            --tw-prose-body: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
            }

            --tw-prose-headings: var(--color-base-content);
            --tw-prose-lead: var(--tw-prose-body);
            --tw-prose-links: var(--color-primary);
            --tw-prose-kbd: var(--tw-prose-body);
            --tw-prose-bold: var(--tw-prose-headings);
            --tw-prose-counters: var(--tw-prose-headings);
            --tw-prose-bullets: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
            }

            --tw-prose-hr: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
            }

            --tw-prose-quotes: var(--tw-prose-headings);
            --tw-prose-quote-borders: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
            }

            --tw-prose-captions: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 40%, #0000);
            }

            --tw-prose-code: #e83e8c;
            --tw-prose-pre-code: var(--color-neutral-content);
            --tw-prose-pre-bg: var(--color-neutral);
            --tw-prose-th-borders: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 24%, #0000);
            }

            --tw-prose-td-borders: var(--tw-prose-th-borders);
            line-height: 1.5rem;
        }

        & :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::before,
        & :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
            display: none;
        }

        pre {
            code {
                border-radius: 0;
                padding: 0;
            }
        }

        & :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
            font-weight: 500;
            font-size: 0.875rem;
        }

        & :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
            padding: calc(0.25rem * 0);
            --tw-shadow: 0 0 #0000;
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .validate {
        & *:valid~.x3o52 {
            display: block;
        }

        & *:has(:valid)~.x3o52 {
            display: block;
        }

        & *:invalid~.v8q8h {
            display: block;
        }

        & *:has(:invalid)~.v8q8h {
            display: block;
        }

        & .lt6if:valid::file-selector-button {
            background-color: var(--color-success);
            color: var(--color-success-content);
            --input-color: var(--color-success);
        }

        & .lt6if:invalid::file-selector-button {
            background-color: var(--color-error);
            color: var(--color-error-content);
            --input-color: var(--color-error);
        }

        & .r48nb>.lt6if:valid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-success);
        }

        & .r48nb>.lt6if:invalid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-error);
        }

        & .xeuqu:has(~ :valid) {
            color: var(--color-success);
        }

        & .xeuqu:has(~ * :valid) {
            color: var(--color-success);
        }

        & :is(:valid)~.kgtg4 {
            color: var(--color-success);
        }

        & *:has(:valid)~.kgtg4 {
            color: var(--color-success);
        }

        & :is(:valid)~.xeuqu {
            color: var(--color-success);
        }

        & :is(:valid)~.xeuqu * {
            color: var(--color-success);
        }

        & :is(:valid)~*>.xeuqu {
            color: var(--color-success);
        }

        & .xeuqu:has(~ :invalid) {
            color: var(--color-error);
        }

        & .xeuqu:has(~ * :invalid) {
            color: var(--color-error);
        }

        & :is(:invalid)~.kgtg4 {
            color: var(--color-error);
        }

        & *:has(:invalid)~.kgtg4 {
            color: var(--color-error);
        }

        & :is(:invalid)~.xeuqu {
            color: var(--color-error);
        }

        & :is(:invalid)~.xeuqu * {
            color: var(--color-error);
        }

        & :is(:invalid)~*>.xeuqu {
            color: var(--color-error);
        }

        & select:has(~ * > .selected)+.advance-select-toggle {
            --input-color: var(--color-success);

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        & select:not(:has(~ * > .selected))+.advance-select-toggle {
            --input-color: var(--color-error);

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }

        & .r48nb:has(:valid) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-success);
                }
            }

            .hdlg5 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-success);
                }
            }
        }

        & .r48nb:has(:invalid) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-error);
                }
            }

            .hdlg5 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-error);
                }
            }
        }

        & .f7bj4:has(:valid) {
            .amw3a {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-success);
                }
            }
        }

        & .f7bj4:has(:invalid) {
            .amw3a {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-error);
                }
            }
        }

        & .qyew9:has(:valid) {
            .nwjd7 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-success);
                }
            }
        }

        & .qyew9:has(:invalid) {
            .nwjd7 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-error);
                }
            }
        }
    }

    .v8q8h {
        display: none;
        padding: calc(0.25rem * 1);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        color: var(--color-error);
        webkit-user-select: none;
        user-select: none;
    }

    .kgtg4 {
        display: block;
        padding: calc(0.25rem * 1);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }

        webkit-user-select: none;
        user-select: none;
    }

    .x3o52 {
        display: none;
        padding: calc(0.25rem * 1);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        color: var(--color-success);
        webkit-user-select: none;
        user-select: none;
    }

    .z1u3a {
        display: block;
        padding-inline: calc(0.25rem * 5);
        padding-block: calc(0.25rem * 1.5);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }

        text-transform: uppercase;
    }

    .tooltip {
        display: inline-block;
        text-align: center;
    }

    .v8q8h {
        .validate *:invalid~& {
            display: block;
        }

        .validate *:has(:invalid)~& {
            display: block;
        }
    }

    .x3o52 {
        .validate *:valid~& {
            display: block;
        }

        .validate *:has(:valid)~& {
            display: block;
        }
    }

    .\!flex {
        display: flex !important;
    }

    .block {
        display: block;
    }

    .uxikk {
        display: contents;
    }

    .flex {
        display: flex;
    }

    .fhy6t {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .wp3g9 {
        display: inline;
    }

    .inline-block {
        display: inline-block;
    }

    .inline-flex {
        display: inline-flex;
    }

    .oh9jb {
        display: inline-grid;
    }

    .agbl4 {
        display: table;
    }

    .jsvbx {
        aspect-ratio: 1 / 1;
    }

    .hqo19 {
        align-items: stretch;
        flex-direction: row;

        :where(figure:first-child) {
            overflow: hidden;
            border-start-start-radius: inherit;
            border-start-end-radius: unset;
            border-end-start-radius: inherit;
            border-end-end-radius: unset;
        }

        :where(figure:last-child) {
            overflow: hidden;
            border-start-start-radius: unset;
            border-start-end-radius: inherit;
            border-end-start-radius: unset;
            border-end-end-radius: inherit;
        }

        figure>* {
            max-width: unset;
        }

        :where(figure > *) {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    }

    .uug3u {
        width: calc(0.25rem * 3);
        height: calc(0.25rem * 3);
        cursor: pointer;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 30%, transparent);
        }
    }

    .bzkyp {
        height: calc(0.25rem * 1);
        width: calc(0.25rem * 10);
        cursor: pointer;
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 30%, transparent);
        }
    }

    .sh94d {
        height: calc(0.25rem * 1.5);
        width: 100%;
        flex-direction: row;
        justify-content: flex-start;
        border-radius: var(--radius-box);
    }

    .nfdiq {
        height: 100%;
        width: calc(0.25rem * 1.5);
        flex-direction: column;
        justify-content: flex-end;
        border-radius: var(--radius-box);
    }

    .drsio {
        &.crmfv {
            height: auto;
            width: auto;
            flex-direction: column;

            &:before,
            &:after {
                height: 100%;
                width: 1px;
                border-inline-end-style: var(--tw-border-style);
                border-inline-end-width: 1px;
                border-top-style: var(--tw-border-style);
                border-top-width: 0px;
            }
        }
    }

    .g5xvq {
        &.crmfv {
            height: auto;
            width: auto;
            flex-direction: row;

            &:before,
            &:after {
                height: 1px;
                border-inline-end-style: var(--tw-border-style);
                border-inline-end-width: 0px;
                border-top-style: var(--tw-border-style);
                border-top-width: 1px;
            }
        }
    }

    .btn-circle {
        border-radius: calc(infinity * 1px);
        padding-inline: calc(0.25rem * 0);
        width: var(--size);
        height: var(--size);
    }

    .btn-square {
        padding-inline: calc(0.25rem * 0);
        width: var(--size);
        height: var(--size);
    }

    .s04gq {
        width: calc(var(--spacing) * 1.5);
        height: calc(var(--spacing) * 1.5);
    }

    .ccg56 {
        width: calc(var(--spacing) * 1.75);
        height: calc(var(--spacing) * 1.75);
    }

    .ap0ap {
        width: calc(var(--spacing) * 2);
        height: calc(var(--spacing) * 2);
    }

    .oefx9 {
        width: calc(var(--spacing) * 3);
        height: calc(var(--spacing) * 3);
    }

    .g1pz7 {
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
    }

    .size-4 {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .size-4\.5 {
        width: calc(var(--spacing) * 4.5);
        height: calc(var(--spacing) * 4.5);
    }

    .size-5 {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
    }

    .size-5\.5 {
        width: calc(var(--spacing) * 5.5);
        height: calc(var(--spacing) * 5.5);
    }

    .size-6 {
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
    }

    .m00p9 {
        width: calc(var(--spacing) * 6.5);
        height: calc(var(--spacing) * 6.5);
    }

    .ph8xj {
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
    }

    .size-7\.5 {
        width: calc(var(--spacing) * 7.5);
        height: calc(var(--spacing) * 7.5);
    }

    .qe1ig {
        width: calc(var(--spacing) * 7.25);
        height: calc(var(--spacing) * 7.25);
    }

    .size-8 {
        width: calc(var(--spacing) * 8);
        height: calc(var(--spacing) * 8);
    }

    .r6sra {
        width: calc(var(--spacing) * 8.5);
        height: calc(var(--spacing) * 8.5);
    }

    .bmes4 {
        width: calc(var(--spacing) * 9);
        height: calc(var(--spacing) * 9);
    }

    .n2ftf {
        width: calc(var(--spacing) * 9.5);
        height: calc(var(--spacing) * 9.5);
    }

    .sh7qx {
        width: calc(var(--spacing) * 10);
        height: calc(var(--spacing) * 10);
    }

    .t6n7b {
        width: calc(var(--spacing) * 10.5);
        height: calc(var(--spacing) * 10.5);
    }

    .m16ks {
        width: calc(var(--spacing) * 11);
        height: calc(var(--spacing) * 11);
    }

    .z74d0 {
        width: calc(var(--spacing) * 11.5);
        height: calc(var(--spacing) * 11.5);
    }

    .ocnev {
        width: calc(var(--spacing) * 12);
        height: calc(var(--spacing) * 12);
    }

    .oy3fy {
        width: calc(var(--spacing) * 12.5);
        height: calc(var(--spacing) * 12.5);
    }

    .uqkxi {
        width: calc(var(--spacing) * 13);
        height: calc(var(--spacing) * 13);
    }

    .lbuuq {
        width: calc(var(--spacing) * 14);
        height: calc(var(--spacing) * 14);
    }

    .bohm2 {
        width: calc(var(--spacing) * 14.5);
        height: calc(var(--spacing) * 14.5);
    }

    .fbort {
        width: calc(var(--spacing) * 15);
        height: calc(var(--spacing) * 15);
    }

    .tdcgk {
        width: calc(var(--spacing) * 15.5);
        height: calc(var(--spacing) * 15.5);
    }

    .of8xk {
        width: calc(var(--spacing) * 16);
        height: calc(var(--spacing) * 16);
    }

    .jj4cj {
        width: calc(var(--spacing) * 16.5);
        height: calc(var(--spacing) * 16.5);
    }

    .d72tu {
        width: calc(var(--spacing) * 17);
        height: calc(var(--spacing) * 17);
    }

    .axneq {
        width: calc(var(--spacing) * 17.5);
        height: calc(var(--spacing) * 17.5);
    }

    .ah4qh {
        width: calc(var(--spacing) * 18);
        height: calc(var(--spacing) * 18);
    }

    .e8h80 {
        width: calc(var(--spacing) * 20);
        height: calc(var(--spacing) * 20);
    }

    .xdjpv {
        width: calc(var(--spacing) * 22);
        height: calc(var(--spacing) * 22);
    }

    .xeg1p {
        width: calc(var(--spacing) * 25);
        height: calc(var(--spacing) * 25);
    }

    .sau0h {
        width: calc(var(--spacing) * 28);
        height: calc(var(--spacing) * 28);
    }

    .zqlaf {
        width: calc(var(--spacing) * 30);
        height: calc(var(--spacing) * 30);
    }

    .n1cz3 {
        width: calc(var(--spacing) * 32.5);
        height: calc(var(--spacing) * 32.5);
    }

    .d1wqz {
        width: calc(var(--spacing) * 35.25);
        height: calc(var(--spacing) * 35.25);
    }

    .esy4b {
        width: calc(var(--spacing) * 37.5);
        height: calc(var(--spacing) * 37.5);
    }

    .dguzu {
        width: calc(var(--spacing) * 50);
        height: calc(var(--spacing) * 50);
    }

    .ip5jj {
        width: calc(var(--spacing) * 52.5);
        height: calc(var(--spacing) * 52.5);
    }

    .g9l0b {
        width: calc(var(--spacing) * 60);
        height: calc(var(--spacing) * 60);
    }

    .ggnlr {
        width: calc(var(--spacing) * 68);
        height: calc(var(--spacing) * 68);
    }

    .zjwu1 {
        width: calc(var(--spacing) * 70);
        height: calc(var(--spacing) * 70);
    }

    .gh6b7 {
        width: calc(var(--spacing) * 90);
        height: calc(var(--spacing) * 90);
    }

    .z1j9d {
        width: calc(var(--spacing) * 120);
        height: calc(var(--spacing) * 120);
    }

    .fwpqv {
        width: calc(var(--spacing) * 130);
        height: calc(var(--spacing) * 130);
    }

    .uwdea {
        width: calc(var(--spacing) * 140);
        height: calc(var(--spacing) * 140);
    }

    .gg4yq {
        width: calc(var(--spacing) * 200);
        height: calc(var(--spacing) * 200);
    }

    .size-full {
        width: 100%;
        height: 100%;
    }

    .hqar0 {
        width: calc(0.25rem * 3);
        height: calc(0.25rem * 3);
    }

    .qjfva {
        width: calc(0.25rem * 2.5);
        height: calc(0.25rem * 2.5);
    }

    .axc9a {
        width: calc(0.25rem * 2);
        height: calc(0.25rem * 2);
    }

    .l50rz {
        width: calc(0.25rem * 3.5);
        height: calc(0.25rem * 3.5);
    }

    .ourxa {
        width: calc(0.25rem * 1.5);
        height: calc(0.25rem * 1.5);
    }

    .lt6if {
        &>.select {
            height: auto;
            border-style: var(--tw-border-style);
            border-width: 0px;

            &:focus,
            &:focus-within {
                --tw-shadow: 0 0 #0000;
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
                outline-style: var(--tw-outline-style);
                outline-width: 0px;
            }
        }
    }

    .\!h-2\.5 {
        height: calc(var(--spacing) * 2.5) !important;
    }

    .h8fk0 {
        height: calc(var(--spacing) * 0.5);
    }

    .y60nm {
        height: calc(var(--spacing) * 1);
    }

    .axyxr {
        height: calc(1/2 * 100%);
    }

    .h-2 {
        height: calc(var(--spacing) * 2);
    }

    .h-3 {
        height: calc(var(--spacing) * 3);
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .hqwco {
        height: calc(var(--spacing) * 4.5);
    }

    .snwcg {
        height: calc(var(--spacing) * 5);
    }

    .f71yv {
        height: calc(var(--spacing) * 6);
    }

    .xo8ql {
        height: calc(var(--spacing) * 7);
    }

    .la121 {
        height: calc(var(--spacing) * 8);
    }

    .sb0vz {
        height: calc(var(--spacing) * 8.5);
    }

    .k95ah {
        height: calc(var(--spacing) * 8.25);
    }

    .efk5j {
        height: calc(var(--spacing) * 9);
    }

    .s922r {
        height: calc(var(--spacing) * 9.5);
    }

    .xaeyc {
        height: calc(var(--spacing) * 10);
    }

    .m4i3y {
        height: calc(var(--spacing) * 11);
    }

    .bkres {
        height: calc(var(--spacing) * 11.5);
    }

    .afdul {
        height: calc(var(--spacing) * 12);
    }

    .d6rpf {
        height: calc(var(--spacing) * 14);
    }

    .gtrg2 {
        height: calc(var(--spacing) * 15);
    }

    .xt11c {
        height: calc(var(--spacing) * 16);
    }

    .go649 {
        height: calc(var(--spacing) * 16.5);
    }

    .ul4ft {
        height: calc(var(--spacing) * 17);
    }

    .fliq4 {
        height: calc(var(--spacing) * 18);
    }

    .ti4m6 {
        height: calc(var(--spacing) * 20);
    }

    .ivmp7 {
        height: calc(var(--spacing) * 20.5);
    }

    .obv94 {
        height: calc(var(--spacing) * 21);
    }

    .p6hhb {
        height: calc(var(--spacing) * 25);
    }

    .jh3ct {
        height: calc(var(--spacing) * 27.5);
    }

    .gdkbk {
        height: calc(var(--spacing) * 32);
    }

    .znvmp {
        height: calc(var(--spacing) * 36);
    }

    .ogq84 {
        height: calc(var(--spacing) * 37.5);
    }

    .i7x7a {
        height: calc(var(--spacing) * 40);
    }

    .f45nu {
        height: calc(var(--spacing) * 47.75);
    }

    .m2227 {
        height: calc(var(--spacing) * 48);
    }

    .hzxhu {
        height: calc(var(--spacing) * 51);
    }

    .uemfg {
        height: calc(var(--spacing) * 52);
    }

    .q5lhv {
        height: calc(var(--spacing) * 53);
    }

    .fq3qs {
        height: calc(var(--spacing) * 55);
    }

    .ma30p {
        height: calc(var(--spacing) * 57.25);
    }

    .cmk86 {
        height: calc(var(--spacing) * 58);
    }

    .ucmij {
        height: calc(var(--spacing) * 60);
    }

    .gmfac {
        height: calc(var(--spacing) * 62);
    }

    .wwykv {
        height: calc(var(--spacing) * 62.75);
    }

    .iulgt {
        height: calc(var(--spacing) * 63.5);
    }

    .dwkgc {
        height: calc(var(--spacing) * 64);
    }

    .smkvv {
        height: calc(var(--spacing) * 65);
    }

    .yqm2s {
        height: calc(var(--spacing) * 66.5);
    }

    .o2asa {
        height: calc(var(--spacing) * 68);
    }

    .miiu9 {
        height: calc(var(--spacing) * 70);
    }

    .h76k8 {
        height: calc(var(--spacing) * 70.5);
    }

    .hzj3i {
        height: calc(var(--spacing) * 72);
    }

    .izs4w {
        height: calc(var(--spacing) * 75);
    }

    .qdzwc {
        height: calc(var(--spacing) * 76.75);
    }

    .sioi9 {
        height: calc(var(--spacing) * 77);
    }

    .aiew8 {
        height: calc(var(--spacing) * 87.25);
    }

    .u4edq {
        height: calc(var(--spacing) * 96);
    }

    .tbeow {
        height: calc(var(--spacing) * 98);
    }

    .h2rwj {
        height: calc(var(--spacing) * 105);
    }

    .cikjy {
        height: calc(var(--spacing) * 118);
    }

    .k05hp {
        height: calc(var(--spacing) * 120);
    }

    .ds320 {
        height: calc(var(--spacing) * 122);
    }

    .h4d62 {
        height: calc(var(--spacing) * 125);
    }

    .qx31b {
        height: calc(var(--spacing) * 125.5);
    }

    .tijoc {
        height: calc(var(--spacing) * 135);
    }

    .ll74o {
        height: calc(var(--spacing) * 146);
    }

    .g7j6k {
        height: calc(var(--spacing) * 167.5);
    }

    .uowk1 {
        height: calc(var(--spacing) * 170);
    }

    .ajnam {
        height: calc(var(--spacing) * 200);
    }

    .bbkr0 {
        height: calc(var(--spacing) * 375);
    }

    .h-\[calc\(100\%_-_32px\)\] {
        height: calc(100% - 32px);
    }

    .h-\[clamp\(300px\,50vh\,600px\)\] {
        height: clamp(300px, 50vh, 600px);
    }

    .imk2a {
        height: auto;
    }

    .h-dvh {
        height: 100dvh;
    }

    .cjrth {
        height: fit-content;
    }

    .abta4 {
        height: 100%;
    }

    .f9vu8 {
        height: max-content;
    }

    .f1bcn {
        height: 1px;
    }

    .h-screen {
        height: 100vh;
    }

    .y45jy {
        max-height: calc(var(--spacing) * 44);
    }

    .vnww1 {
        max-height: calc(var(--spacing) * 48);
    }

    .ql7au {
        max-height: calc(var(--spacing) * 52);
    }

    .fift6 {
        max-height: calc(var(--spacing) * 90);
    }

    .p8nqq {
        max-height: calc(var(--spacing) * 92);
    }

    .keh9c {
        max-height: calc(var(--spacing) * 110);
    }

    .ghsmq {
        max-height: 100%;
    }

    .ltv96 {
        min-height: calc(var(--spacing) * 0);
    }

    .hpo6w {
        min-height: calc(var(--spacing) * 20);
    }

    .ixbtl {
        min-height: calc(var(--spacing) * 67);
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .axec6 {
        width: 100%;
        max-width: calc(0.25rem * 64);
    }

    .b16tb {
        flex-grow: 1;
        overflow-x: hidden;
        overflow-y: auto;
        padding-inline: calc(0.25rem * 6);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));

        &::-webkit-scrollbar {
            width: calc(0.25rem * 2);
        }

        &:where(:last-child) {
            padding-bottom: calc(0.25rem * 6);
        }
    }

    .srio8 {
        .progress-bar& {
            width: 100%;
            background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
            background-size: 50% 100%;
            background-repeat: no-repeat;
            animation: indeterminate-progress 4s infinite ease-in-out;
        }
    }

    .t69f9 {
        width: 100%;
        cursor: pointer;
        overflow: hidden;
        border-radius: var(--radius-box);
        border-style: var(--tw-border-style);
        border-width: 1px;
        padding: calc(0.25rem * 4);
        border: var(--border) solid var(--input-color, var(--color-base-content));

        @supports (color: color-mix(in lab, red, red)) {
            border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 40%, #0000));
        }

        &:hover {
            border-color: var(--input-color, var(--color-base-content));

            @supports (color: color-mix(in lab, red, red)) {
                border-color: var(--input-color, color-mix(in oklab, var(--color-base-content) 40%, #0000));
            }

            outline: 1px solid var(--input-color, var(--color-base-content));

            @supports (color: color-mix(in lab, red, red)) {
                outline: 1px solid var(--input-color, color-mix(in oklab, var(--color-base-content) 40%, #0000));
            }
        }

        &>.xeuqu {
            padding: calc(0.25rem * 0);
        }

        background-color: var(--input-color, var(--color-neutral));

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--input-color, var(--color-neutral)) 5%, #0000);
        }

        &:has(:checked) {
            border-color: var(--input-color, var(--color-primary));
            background-color: var(--input-color, var(--color-primary));

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--input-color, var(--color-primary)) 10%, #0000);
            }

            outline: 1px solid var(--input-color, var(--color-primary));
        }
    }

    .jbdag {
        width: 100%;
        cursor: pointer;
        overflow: hidden;
        border-radius: var(--radius-box);
        border-style: var(--tw-border-style);
        border-width: 1px;
        padding: calc(0.25rem * 4);
        border: var(--border) solid var(--input-color, var(--color-base-content));

        @supports (color: color-mix(in lab, red, red)) {
            border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 40%, #0000));
        }

        &:hover {
            border-color: var(--input-color, var(--color-base-content));

            @supports (color: color-mix(in lab, red, red)) {
                border-color: var(--input-color, color-mix(in oklab, var(--color-base-content) 40%, #0000));
            }

            outline: 1px solid var(--input-color, var(--color-base-content));

            @supports (color: color-mix(in lab, red, red)) {
                outline: 1px solid var(--input-color, color-mix(in oklab, var(--color-base-content) 40%, #0000));
            }
        }

        &>.xeuqu {
            padding: calc(0.25rem * 0);
        }

        &:has(:checked) {
            border-color: var(--input-color, var(--color-primary));
            outline: 1px solid var(--input-color, var(--color-primary));
        }
    }

    .advance-select-option {
        width: 100%;
        cursor: pointer;
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 2.5);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--color-base-content);

        &:hover {
            @media (hover: hover) {
                background-color: var(--color-neutral);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
                }
            }
        }

        &:focus {
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }

            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .hhjq0 {
        --size: calc(var(--size-field, 0.25rem) * 9.5);
        padding-inline-start: calc(0.25rem * 3);
        padding-inline-end: calc(0.25rem * 10);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));

        &~.advance-select-menu {
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);

            & .advance-select-option {
                width: 100%;
                cursor: pointer;
                padding-inline: calc(0.25rem * 2);
                padding-block: calc(0.25rem * 1.5);
                font-size: var(--text-sm);
                line-height: var(--tw-leading, var(--text-sm--line-height));
                --tw-font-weight: var(--font-weight-normal);
                font-weight: var(--font-weight-normal);
            }
        }
    }

    .wqzpv {
        --size: calc(var(--size-field, 0.25rem) * 7.5);
        padding-inline-start: calc(0.25rem * 2.5);
        padding-inline-end: calc(0.25rem * 8);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        &~.advance-select-menu {
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);

            & .advance-select-option {
                width: 100%;
                cursor: pointer;
                padding-inline: calc(0.25rem * 2);
                padding-block: calc(0.25rem * 1.5);
                font-size: var(--text-sm);
                line-height: var(--tw-leading, var(--text-sm--line-height));
                --tw-font-weight: var(--font-weight-normal);
                font-weight: var(--font-weight-normal);
            }
        }
    }

    .j2pzx {
        --size: calc(var(--size-field, 0.25rem) * 6);
        padding-inline-start: calc(0.25rem * 2.5);
        padding-inline-end: calc(0.25rem * 8);
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        &~.advance-select-menu {
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);

            & .advance-select-option {
                width: 100%;
                cursor: pointer;
                padding-inline: calc(0.25rem * 2);
                padding-block: calc(0.25rem * 1);
                font-size: var(--text-sm);
                line-height: var(--tw-leading, var(--text-sm--line-height));
                --tw-font-weight: var(--font-weight-normal);
                font-weight: var(--font-weight-normal);
            }
        }
    }

    .izyl9 {
        --size: calc(var(--size-field, 0.25rem) * 14);
        padding-inline: calc(0.25rem * 4.5);
        padding-inline: calc(0.25rem * 4);
        padding-inline-end: calc(0.25rem * 10);
        font-size: var(--text-xl);
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-xl--line-height));
        line-height: var(--tw-leading, var(--text-lg--line-height));

        &~.advance-select-menu .advance-select-option {
            width: 100%;
            cursor: pointer;
            padding-inline: calc(0.25rem * 4);
            padding-block: calc(0.25rem * 3);
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
            --tw-font-weight: var(--font-weight-normal);
            font-weight: var(--font-weight-normal);
        }
    }

    .ge175 {
        --size: calc(var(--size-field, 0.25rem) * 11.5);
        padding-inline: calc(0.25rem * 4);
        padding-inline-end: calc(0.25rem * 10);
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));

        &~.advance-select-menu .advance-select-option {
            width: 100%;
            cursor: pointer;
            padding-inline: calc(0.25rem * 4);
            padding-block: calc(0.25rem * 3);
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            --tw-font-weight: var(--font-weight-normal);
            font-weight: var(--font-weight-normal);
        }
    }

    .lz7kr {
        &>.qqm0l {
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        border-color: var(--color-primary);

                        @supports (color: color-mix(in lab, red, red)) {
                            border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
                        }
                    }
                }
            }

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        color: var(--color-primary);
                    }
                }
            }

            border-style: solid;
            border-bottom-width: calc(var(--border, 1px) + 1px);
        }

        &.dk4ol {
            --tabs-direction: column;

            &>.qqm0l {
                width: 100%;
                justify-content: flex-start;
                border-bottom-style: var(--tw-border-style);
                border-bottom-width: 0px;
                border-inline-end-width: calc(var(--border, 1px) + 1px);
            }
        }
    }

    .dk4ol {
        .lz7kr& {
            --tabs-direction: column;

            &>.qqm0l {
                width: 100%;
                justify-content: flex-start;
                border-bottom-style: var(--tw-border-style);
                border-bottom-width: 0px;
                border-inline-end-width: calc(var(--border, 1px) + 1px);
            }
        }
    }

    .xue9x {
        overflow-x: hidden;
        overflow-y: auto;
        padding: calc(0.25rem * 6);
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);

        &::-webkit-scrollbar {
            width: calc(0.25rem * 2);
        }

        :where(.fh7x2)+& {
            padding-top: 0;
        }

        :where(&)+.qkmfa {
            padding-top: 0;
        }
    }

    .\!w-2\.5 {
        width: calc(var(--spacing) * 2.5) !important;
    }

    .sjk13 {
        width: 100%;
    }

    .dxkxf {
        width: calc(var(--size-selector, 0.25rem) * 7);
    }

    .hbwap {
        width: calc(var(--size-selector, 0.25rem) * 6);
    }

    .tkf8i {
        width: calc(var(--size-selector, 0.25rem) * 5);
    }

    .p4ypq {
        width: calc(var(--size-selector, 0.25rem) * 8);
    }

    .ejmto {
        width: calc(var(--size-selector, 0.25rem) * 4);
    }

    .xwsgp {
        width: calc(var(--spacing) * 1.5);
    }

    .rn53v {
        width: calc(1/2 * 100%);
    }

    .ucnzh {
        width: calc(1/4 * 100%);
    }

    .v0jap {
        width: calc(1/10 * 100%);
    }

    .mbjdf {
        width: calc(2/4 * 100%);
    }

    .r1zk3 {
        width: calc(var(--spacing) * 3);
    }

    .vc2ch {
        width: calc(var(--spacing) * 3.5);
    }

    .cbpnj {
        width: calc(3/4 * 100%);
    }

    .v89fh {
        width: calc(3/5 * 100%);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .yfd9m {
        width: calc(var(--spacing) * 5.75);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .azzki {
        width: calc(var(--spacing) * 7);
    }

    .w-7\.5 {
        width: calc(var(--spacing) * 7.5);
    }

    .s0ql2 {
        width: calc(var(--spacing) * 8);
    }

    .y4cv6 {
        width: calc(var(--spacing) * 9);
    }

    .wcgku {
        width: calc(var(--spacing) * 9.5);
    }

    .jd1xl {
        width: calc(var(--spacing) * 10);
    }

    .naltz {
        width: calc(var(--spacing) * 11);
    }

    .p4zxm {
        width: calc(var(--spacing) * 11.5);
    }

    .j5ocb {
        width: calc(var(--spacing) * 12);
    }

    .eqkgi {
        width: calc(var(--spacing) * 12.5);
    }

    .y4pzq {
        width: calc(var(--spacing) * 13);
    }

    .l5fdv {
        width: calc(var(--spacing) * 14);
    }

    .xtj5y {
        width: calc(var(--spacing) * 15);
    }

    .ie6uh {
        width: calc(var(--spacing) * 17);
    }

    .e5mb6 {
        width: calc(var(--spacing) * 19);
    }

    .ypwum {
        width: calc(var(--spacing) * 20);
    }

    .tjjqz {
        width: calc(var(--spacing) * 21);
    }

    .trgsj {
        width: calc(var(--spacing) * 23);
    }

    .d94h8 {
        width: calc(var(--spacing) * 24);
    }

    .jovyh {
        width: calc(var(--spacing) * 24.5);
    }

    .byisg {
        width: calc(var(--spacing) * 25);
    }

    .pkl1e {
        width: calc(var(--spacing) * 26.5);
    }

    .xidn4 {
        width: calc(var(--spacing) * 27.5);
    }

    .dghsq {
        width: calc(var(--spacing) * 29);
    }

    .y14h9 {
        width: calc(var(--spacing) * 30);
    }

    .nr4ay {
        width: calc(var(--spacing) * 33);
    }

    .i52u4 {
        width: calc(35/100 * 100%);
    }

    .vfhm0 {
        width: calc(var(--spacing) * 36);
    }

    .owmit {
        width: calc(var(--spacing) * 36.25);
    }

    .x97fp {
        width: calc(var(--spacing) * 38);
    }

    .q9pfb {
        width: calc(var(--spacing) * 38.5);
    }

    .zfnh1 {
        width: calc(var(--spacing) * 38.25);
    }

    .cecxm {
        width: calc(var(--spacing) * 42);
    }

    .um0w2 {
        width: calc(42/100 * 100%);
    }

    .o8zdn {
        width: calc(var(--spacing) * 43);
    }

    .ty2f5 {
        width: calc(var(--spacing) * 44.5);
    }

    .mko57 {
        width: calc(var(--spacing) * 45);
    }

    .xcqar {
        width: calc(var(--spacing) * 48.75);
    }

    .lvsay {
        width: calc(var(--spacing) * 52);
    }

    .w-56 {
        width: calc(var(--spacing) * 56);
    }

    .ldfac {
        width: calc(var(--spacing) * 60);
    }

    .o0g7f {
        width: calc(var(--spacing) * 62);
    }

    .d41qb {
        width: calc(68/100 * 100%);
    }

    .fxqpd {
        width: calc(72/100 * 100%);
    }

    .we20t {
        width: calc(var(--spacing) * 75);
    }

    .xjy7n {
        width: calc(var(--spacing) * 83);
    }

    .p2kf1 {
        width: calc(var(--spacing) * 85);
    }

    .y3ecr {
        width: calc(var(--spacing) * 86);
    }

    .o03nj {
        width: calc(95/100 * 100%);
    }

    .v4i78 {
        width: calc(var(--spacing) * 100);
    }

    .mfqw7 {
        width: calc(var(--spacing) * 115);
    }

    .rwj2j {
        width: calc(var(--spacing) * 131);
    }

    .xo42l {
        width: calc(var(--spacing) * 149);
    }

    .g5uct {
        width: calc(var(--spacing) * 173);
    }

    .w-\[40\%\] {
        width: 40%;
    }

    .w-\[45\%\] {
        width: 45%;
    }

    .w-\[50\%\] {
        width: 50%;
    }

    .w-\[500px\] {
        width: 500px;
    }

    .dtl21 {
        width: auto;
    }

    .ntfyc {
        width: fit-content;
    }

    .w-full {
        width: 100%;
    }

    .cnskx {
        width: max-content;
    }

    .v0brd {
        width: 1px;
    }

    .z6won {
        max-width: var(--container-2xl);
    }

    .sx9f2 {
        max-width: var(--container-3xl);
    }

    .l8txf {
        max-width: var(--container-4xl);
    }

    .gfnaw {
        max-width: var(--container-5xl);
    }

    .ukf9d {
        max-width: var(--container-7xl);
    }

    .z8l9f {
        max-width: calc(var(--spacing) * 32);
    }

    .ef012 {
        max-width: calc(var(--spacing) * 35);
    }

    .max-w-40 {
        max-width: calc(var(--spacing) * 40);
    }

    .o6gsz {
        max-width: calc(var(--spacing) * 45);
    }

    .ddy8d {
        max-width: calc(var(--spacing) * 60);
    }

    .l6hme {
        max-width: calc(var(--spacing) * 75);
    }

    .hnp2s {
        max-width: calc(var(--spacing) * 80);
    }

    .mpej5 {
        max-width: calc(var(--spacing) * 82);
    }

    .f2ycf {
        max-width: calc(var(--spacing) * 96);
    }

    .u4rq4 {
        max-width: calc(var(--spacing) * 100);
    }

    .ef36a {
        max-width: calc(var(--spacing) * 115);
    }

    .u40x2 {
        max-width: calc(var(--spacing) * 122);
    }

    .mw002 {
        max-width: calc(var(--spacing) * 145);
    }

    .g1rih {
        max-width: calc(var(--spacing) * 147);
    }

    .orsg3 {
        max-width: calc(var(--spacing) * 155);
    }

    .bm84v {
        max-width: calc(var(--spacing) * 156.75);
    }

    .l1wzz {
        max-width: calc(var(--spacing) * 162.5);
    }

    .z956q {
        max-width: calc(var(--spacing) * 169.25);
    }

    .k4nwl {
        max-width: calc(var(--spacing) * 175);
    }

    .zn1e5 {
        max-width: calc(var(--spacing) * 177.75);
    }

    .ejmk9 {
        max-width: calc(var(--spacing) * 185.25);
    }

    .qrrjs {
        max-width: calc(var(--spacing) * 200);
    }

    .mbpzu {
        max-width: calc(var(--spacing) * 348);
    }

    .nu3pc {
        max-width: calc(var(--spacing) * 384);
    }

    .max-w-\[72px\] {
        max-width: 72px;
    }

    .max-w-\[1280px\] {
        max-width: 1280px;
    }

    .max-w-\[1388px\] {
        max-width: 1388px;
    }

    .max-w-\[1536px\] {
        max-width: 1536px;
    }

    .jxk8e {
        max-width: fit-content;
    }

    .rgpk2 {
        max-width: 100%;
    }

    .at1en {
        max-width: var(--container-lg);
    }

    .q9x08 {
        max-width: var(--container-md);
    }

    .zkj00 {
        max-width: var(--container-sm);
    }

    .icdro {
        max-width: var(--container-xl);
    }

    .l1x6k {
        max-width: var(--container-xs);
    }

    .sdy8p {
        max-width: calc(0.25rem * 192);
    }

    .oid1t {
        max-width: calc(0.25rem * 128);
    }

    .e8x2j {
        max-width: calc(0.25rem * 96);
    }

    .dd4vn {
        max-width: calc(0.25rem * 256);
    }

    .min-w-28 {
        min-width: calc(var(--spacing) * 28);
    }

    .q4082 {
        min-width: calc(var(--spacing) * 30);
    }

    .min-w-32 {
        min-width: calc(var(--spacing) * 32);
    }

    .yeb0f {
        min-width: calc(var(--spacing) * 40);
    }

    .min-w-48 {
        min-width: calc(var(--spacing) * 48);
    }

    .min-w-60 {
        min-width: calc(var(--spacing) * 60);
    }

    .hevq8 {
        min-width: calc(var(--spacing) * 64);
    }

    .jqlcf {
        min-width: calc(var(--spacing) * 70);
    }

    .x5rc1 {
        min-width: 100%;
    }

    .tc7ig {
        min-width: var(--container-sm);
    }

    .leexs {
        overflow: hidden;
        border-radius: var(--radius-box);
        box-shadow: var(--card-shadow, 0 1px 3px 0 var(--color-base-300), 0 1px 2px -1px var(--color-base-300));

        @supports (color: color-mix(in lab, red, red)) {
            box-shadow: var(--card-shadow, 0 1px 3px 0 color-mix(in oklab, var(--color-base-300) 20%, #0000), 0 1px 2px -1px color-mix(in oklab, var(--color-base-300) 20%, #0000));
        }

        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
        }

        border-width: var(--card-border, 0px);

        &>.kw8m5 {
            flex: 1 0 0%;
            border-radius: 0;
            --card-shadow: none;
            --card-border: 0;
        }
    }

    .imb1t {
        flex: 1;
    }

    .q6amh {
        flex-shrink: 1;
    }

    .zc2xn {
        flex-shrink: 0;
    }

    .f3e5c {
        flex-shrink: 1;
    }

    .shrink-0 {
        flex-shrink: 0;
    }

    .ibauo {
        flex-grow: 1;
    }

    .adczl {
        flex-grow: 1;
    }

    .z6aor {
        flex-grow: 1;
    }

    .zjjh0 {
        flex-basis: calc(var(--spacing) * 0);
    }

    .xw13e {
        flex-basis: 100%;
    }

    .origin-\[0_0\] {
        transform-origin: 0 0;
    }

    .z9fvy {
        --tw-translate-x: calc(calc(1/2 * 100%) * -1);
        --tw-translate-y: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .t8uqm {
        --tw-translate-x: calc(1/2 * 100%);
        --tw-translate-y: calc(1/2 * 100%);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .yj7lw {
        --tw-translate-x: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .o5msh {
        --tw-translate-x: calc(1/2 * 100%);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-2\/4 {
        --tw-translate-x: calc(2/4 * 100%);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .yeknw {
        --tw-translate-y: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-2\/4 {
        --tw-translate-y: calc(calc(2/4 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .vtyla {
        --tw-scale-x: 140%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }

    .y1bvv {

        .ztk79,
        input:indeterminate~.ztk79 {
            rotate: 45deg;
        }

        input:is(:checked, :indeterminate)~.ztk79,
        &.ri9ft .ztk79 {
            rotate: 0deg;
        }

        input:is(:checked, :indeterminate)~.b0a9u,
        &.ri9ft .b0a9u {
            rotate: calc(45deg * -1);
        }
    }

    .oj0xt {
        rotate: calc(20deg * -1);
    }

    .-rotate-\[8deg\] {
        rotate: calc(8deg * -1);
    }

    .-rotate-\[18deg\] {
        rotate: calc(18deg * -1);
    }

    .-rotate-\[20deg\] {
        rotate: calc(20deg * -1);
    }

    .-rotate-\[36deg\] {
        rotate: calc(36deg * -1);
    }

    .pcqxy {
        rotate: 10deg;
    }

    .rotate-\[-6deg\] {
        rotate: -6deg;
    }

    .rotate-\[-8deg\] {
        rotate: -8deg;
    }

    .rotate-\[-11deg\] {
        rotate: -11deg;
    }

    .rotate-\[-15deg\] {
        rotate: -15deg;
    }

    .rotate-\[5deg\] {
        rotate: 5deg;
    }

    .rotate-\[11deg\] {
        rotate: 11deg;
    }

    .rotate-\[13deg\] {
        rotate: 13deg;
    }

    .rotate-\[26deg\] {
        rotate: 26deg;
    }

    .d53m4 {
        --tw-rotate-y: rotateY(180deg);
        transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
    }

    .q3cpm {
        transform-style: preserve-3d;
        perspective: 20rem;

        .ztk79,
        .kva3c,
        input:indeterminate~.ztk79 {
            transform: rotateY(180deg);
            backface-visibility: hidden;
            opacity: 100%;
        }

        input:is(:checked, :indeterminate)~.ztk79,
        &.ri9ft .ztk79 {
            transform: rotateY(0deg);
        }

        input:is(:checked, :indeterminate)~.b0a9u,
        &.ri9ft .b0a9u {
            transform: rotateY(-180deg);
            backface-visibility: hidden;
            opacity: 100%;
        }
    }

    .xjknz {
        transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
    }

    .radio-inset {

        &:checked,
        &[aria-checked="true"] {
            animation: radio-inset 0.2s ease-out;
            background-color: currentColor;
            box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                box-shadow: 0 6px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)), 0 1px 2px 0 color-mix(in oklab, var(--color-base-content) 30%, #0000);
            }

            &:before {
                background-color: var(--color-base-100);
                box-shadow: none;
            }
        }
    }

    .ad5fu {
        @media (prefers-reduced-motion: reduce) {
            transition-duration: 15s;
        }

        animation: skeleton 1.8s ease-in-out infinite;
    }

    .rvcex {
        --motion-duration: 300ms;
        --motion-origin-rotate: 15deg;
        --motion-origin-translate-x: -25%;
        --motion-origin-translate-y: -10%;
        --motion-origin-opacity: 0;
        --motion-timing: var(--motion-spring-bounciest);
        --motion-perceptual-duration-multiplier: 5.285;
        --motion-opacity-timing: var(--motion-spring-smooth);
        --motion-opacity-perceptual-duration-multiplier: 2.035;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .rvcex {
        --motion-duration: 300ms;
        --motion-origin-rotate: 15deg;
        --motion-origin-translate-x: -25%;
        --motion-origin-translate-y: -10%;
        --motion-origin-opacity: 0;
        --motion-timing: var(--motion-spring-bounciest);
        --motion-perceptual-duration-multiplier: 5.285;
        --motion-opacity-timing: var(--motion-spring-smooth);
        --motion-opacity-perceptual-duration-multiplier: 2.035;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .rvcex {
        --motion-duration: 300ms;
        --motion-origin-rotate: 15deg;
        --motion-origin-translate-x: -25%;
        --motion-origin-translate-y: -10%;
        --motion-origin-opacity: 0;
        --motion-timing: var(--motion-spring-bounciest);
        --motion-perceptual-duration-multiplier: 5.285;
        --motion-opacity-timing: var(--motion-spring-smooth);
        --motion-opacity-perceptual-duration-multiplier: 2.035;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .rvcex {
        --motion-duration: 300ms;
        --motion-origin-rotate: 15deg;
        --motion-origin-translate-x: -25%;
        --motion-origin-translate-y: -10%;
        --motion-origin-opacity: 0;
        --motion-timing: var(--motion-spring-bounciest);
        --motion-perceptual-duration-multiplier: 5.285;
        --motion-opacity-timing: var(--motion-spring-smooth);
        --motion-opacity-perceptual-duration-multiplier: 2.035;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .rvcex {
        --motion-duration: 300ms;
        --motion-origin-rotate: 15deg;
        --motion-origin-translate-x: -25%;
        --motion-origin-translate-y: -10%;
        --motion-origin-opacity: 0;
        --motion-timing: var(--motion-spring-bounciest);
        --motion-perceptual-duration-multiplier: 5.285;
        --motion-opacity-timing: var(--motion-spring-smooth);
        --motion-opacity-perceptual-duration-multiplier: 2.035;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .u68ir {
        --motion-origin-blur: 5px;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .u68ir {
        --motion-origin-blur: 5px;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .u68ir {
        --motion-origin-blur: 5px;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .u68ir {
        --motion-origin-blur: 5px;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .u68ir {
        --motion-origin-blur: 5px;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .w5xlu {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .w5xlu {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .w5xlu {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .w5xlu {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .w5xlu {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .lb7j5 {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .lb7j5 {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .lb7j5 {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .lb7j5 {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .lb7j5 {
        --motion-origin-translate-x: -25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .jf099 {
        --motion-origin-translate-y: 25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .jf099 {
        --motion-origin-translate-y: 25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .jf099 {
        --motion-origin-translate-y: 25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .jf099 {
        --motion-origin-translate-y: 25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .jf099 {
        --motion-origin-translate-y: 25%;
        --motion-origin-opacity: 0;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .flj61 {
        --motion-origin-opacity: 0;
        --motion-duration: 500ms;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .flj61 {
        --motion-origin-opacity: 0;
        --motion-duration: 500ms;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .flj61 {
        --motion-origin-opacity: 0;
        --motion-duration: 500ms;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .flj61 {
        --motion-origin-opacity: 0;
        --motion-duration: 500ms;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .flj61 {
        --motion-origin-opacity: 0;
        --motion-duration: 500ms;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .qb13f {
        --motion-loop-translate-y: 5%;
        --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
        --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both var(--motion-translate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .qb13f {
        --motion-loop-translate-y: 5%;
        --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
        --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both var(--motion-translate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .qb13f {
        --motion-loop-translate-y: 5%;
        --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
        --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both var(--motion-translate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .qb13f {
        --motion-loop-translate-y: 5%;
        --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
        --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both var(--motion-translate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .qb13f {
        --motion-loop-translate-y: 5%;
        --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
        --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both var(--motion-translate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .czobw {
        --motion-loop-rotate: 360deg;
        --motion-timing: linear;
        --motion-rotate-loop-animation: motion-rotate-loop-reset calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both var(--motion-rotate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .czobw {
        --motion-loop-rotate: 360deg;
        --motion-timing: linear;
        --motion-rotate-loop-animation: motion-rotate-loop-reset calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both var(--motion-rotate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .czobw {
        --motion-loop-rotate: 360deg;
        --motion-timing: linear;
        --motion-rotate-loop-animation: motion-rotate-loop-reset calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both var(--motion-rotate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .czobw {
        --motion-loop-rotate: 360deg;
        --motion-timing: linear;
        --motion-rotate-loop-animation: motion-rotate-loop-reset calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both var(--motion-rotate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .czobw {
        --motion-loop-rotate: 360deg;
        --motion-timing: linear;
        --motion-rotate-loop-animation: motion-rotate-loop-reset calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both var(--motion-rotate-loop-count, var(--motion-loop-count));
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .bgrlv {
        --motion-origin-opacity: 0.001;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .bgrlv {
        --motion-origin-opacity: 0.001;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .bgrlv {
        --motion-origin-opacity: 0.001;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .bgrlv {
        --motion-origin-opacity: 0.001;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .bgrlv {
        --motion-origin-opacity: 0.001;
        --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
        animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }

    .wjulw {
        animation: var(--animate-marqueeBottom);
    }

    .h5zj3 {
        animation: var(--animate-marqueeLeft);
    }

    .j1td2 {
        animation: var(--animate-marqueeRight);
    }

    .if6ho {
        animation: var(--animate-marqueeTop);
    }

    .sw2jo {
        animation: var(--animate-pulse);
    }

    .utkhf {
        animation: progress-bar-stripes 1s linear infinite;
    }

    .ac1ru {
        cursor: default;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .rslpy {
        resize: both;
    }

    .x2h3f {
        resize: none;
    }

    .ugedv {
        list-style-position: inside;
    }

    .r0egj {
        list-style-type: disc;
    }

    .xeuwm {
        list-style-type: none;
    }

    .o074g {
        appearance: none;
    }

    .gpt9m {
        grid-auto-flow: column;

        :where(& > :not(:last-child)) {
            --tw-divide-x-reverse: 0;
            border-inline-style: var(--tw-border-style);
            border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
            border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(0px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
        }

        overflow-x: auto;
    }

    .q62gk {
        grid-auto-flow: row;

        :where(& > :not(:last-child)) {
            --tw-divide-x-reverse: 0;
            border-inline-style: var(--tw-border-style);
            border-inline-start-width: calc(0px * var(--tw-divide-x-reverse));
            border-inline-end-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(1px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
        }

        overflow-y: auto;
    }

    .dg0ot {
        grid-auto-flow: row;
    }

    .ly6mh {
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 22%, #0000);
        }

        color: var(--input-color);

        &::before {
            background-color: var(--color-base-100);
            box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 2px 0 oklch(0% 0 0 / 0.2);
        }

        &:checked,
        &[aria-checked="true"],
        &:has(> input:checked) {
            grid-template-columns: 1fr 1fr 0fr;
            color: var(--input-color);
            background-color: var(--color-base-100);
            border-color: var(--input-color);

            &:before {
                background-color: currentColor;

                @starting-style {
                    opacity: 0;
                }
            }
        }
    }

    .lqybr {
        grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .ybudb {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .k7si7 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .j3bwp {
        grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    .afiki {
        grid-template-columns: repeat(12, minmax(0, 1fr));
    }

    .flex-col {
        flex-direction: column;
    }

    .m0x46 {
        flex-direction: row;
    }

    .flex-nowrap {
        flex-wrap: nowrap;
    }

    .lq2fa {
        flex-wrap: wrap;
    }

    .lz968 {
        place-items: end;
        justify-content: flex-end;
    }

    .md0g1 {
        place-items: end;
        justify-content: flex-start;
    }

    .fn2rt {
        place-items: center;
        justify-content: flex-end;
    }

    .t6cbr {
        place-items: center;
        justify-content: flex-start;
    }

    .h124a {
        place-items: end;
    }

    .el4le {
        place-items: center;
    }

    .g1m37 {
        place-items: start;
    }

    .l66g0 {
        align-items: baseline;
    }

    .items-center {
        align-items: center;
    }

    .urcub {
        align-items: flex-end;
    }

    .jgcej {
        align-items: flex-start;
    }

    .\!justify-between {
        justify-content: space-between !important;
    }

    .fowl6 {
        justify-content: space-around;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .kxpiu {
        justify-content: flex-end;
    }

    .a0snq {
        justify-content: space-evenly;
    }

    .j7wy5 {
        justify-content: flex-start;
    }

    .knff4 {
        justify-content: flex-end;
    }

    .f0voc {
        justify-content: flex-start;
    }

    .c19dd {
        gap: calc(var(--spacing) * 0);
    }

    .gap-0\.5 {
        gap: calc(var(--spacing) * 0.5);
    }

    .gf7r7 {
        gap: calc(var(--spacing) * 0.25);
    }

    .pnlaa {
        gap: calc(var(--spacing) * 1);
    }

    .rnc77 {
        gap: calc(var(--spacing) * 1.5);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .rfmyu {
        gap: calc(var(--spacing) * 2.5);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .lx9n9 {
        gap: calc(var(--spacing) * 3.5);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .dfhjo {
        gap: calc(var(--spacing) * 4.5);
    }

    .f9dzb {
        gap: calc(var(--spacing) * 5);
    }

    .xlo5x {
        gap: calc(var(--spacing) * 6);
    }

    .zdr1e {
        gap: calc(var(--spacing) * 6.5);
    }

    .f1ehz {
        gap: calc(var(--spacing) * 7);
    }

    .wuzfl {
        gap: calc(var(--spacing) * 7.5);
    }

    .g9fs9 {
        gap: calc(var(--spacing) * 8);
    }

    .dt68u {
        gap: calc(var(--spacing) * 9);
    }

    .tmvpi {
        gap: calc(var(--spacing) * 10);
    }

    .n7j2b {
        gap: calc(var(--spacing) * 11);
    }

    .zgux6 {
        gap: calc(var(--spacing) * 12);
    }

    .nxwk9 {
        gap: calc(var(--spacing) * 14);
    }

    .ljb1s {
        gap: calc(var(--spacing) * 16);
    }

    .y3t26 {
        gap: calc(var(--spacing) * 18);
    }

    .hicsk {
        gap: calc(var(--spacing) * 19);
    }

    .gomjp {
        gap: calc(var(--spacing) * 23);
    }

    .t7y1e {
        gap: calc(var(--spacing) * 24);
    }

    .mm9gc {
        gap: calc(var(--spacing) * 28);
    }

    .fh0ys {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .vqrc7 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-1 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .ntfzo {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .hfbpz {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .dt2uz {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .i6xyt {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .dbtrq {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 3.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 3.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .x21h2 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .eynsy {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 4.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 4.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .pjqpt {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .g3s3n {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 5.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 5.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .v1aq9 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .jaiyg {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 7) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 7) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .jaf4j {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .j0j4s {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 9) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 9) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .k0kfs {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 9.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 9.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .hsefe {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .d1fm9 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 11) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 11) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .gap-x-1 {
        column-gap: calc(var(--spacing) * 1);
    }

    .gap-x-2 {
        column-gap: calc(var(--spacing) * 2);
    }

    .er6cd {
        column-gap: calc(var(--spacing) * 2.5);
    }

    .gap-x-3 {
        column-gap: calc(var(--spacing) * 3);
    }

    .rvyay {
        column-gap: calc(var(--spacing) * 4);
    }

    .y6uf2 {
        column-gap: calc(var(--spacing) * 6);
    }

    .o7usx {
        column-gap: calc(var(--spacing) * 8);
    }

    .my5ip {
        column-gap: calc(var(--spacing) * 10);
    }

    .wxomm {
        column-gap: calc(var(--spacing) * 12);
    }

    .-space-x-3 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * -3) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * -3) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .jjbpm {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * -4) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * -4) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .xxvve {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * -5) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * -5) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .n9h23 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .uxbj3 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .ustzq {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .qy9es {
        row-gap: calc(var(--spacing) * 2);
    }

    .bitcn {
        row-gap: calc(var(--spacing) * 3);
    }

    .ksyny {
        row-gap: calc(var(--spacing) * 4);
    }

    .vgy0r {
        row-gap: calc(var(--spacing) * 5);
    }

    .c4p3b {
        row-gap: calc(var(--spacing) * 6);
    }

    .mxy7y {
        row-gap: calc(var(--spacing) * 8);
    }

    .eyph2 {
        row-gap: calc(var(--spacing) * 31);
    }

    .gufsh {
        :where(& > :not(:last-child)) {
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(1px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
        }
    }

    .accordion {
        &:where(.b8yi9) {
            :where(& > :not(:last-child)) {
                --tw-divide-y-reverse: 0;
                border-bottom-style: var(--tw-border-style);
                border-top-style: var(--tw-border-style);
                border-top-width: calc(1px * var(--tw-divide-y-reverse));
                border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
                border-color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
                }
            }

            border-radius: var(--radius-box);
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
            }

            background-color: var(--color-base-100);
        }
    }

    .c9o8s {
        :where(& > :not(:last-child)) {
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
            }
        }
    }

    .y9req {
        :where(& > :not(:last-child)) {
            border-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
            }
        }
    }

    .icbew {
        :where(& > :not(:last-child)) {
            border-color: var(--color-gray-200);
        }
    }

    .liv0n {
        :where(& > :not(:last-child)) {
            border-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                border-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
        }
    }

    .d0kis {
        .rlhl2 {
            align-self: flex-start;
        }

        .efh7m {
            align-self: flex-start;
        }
    }

    .yg4gj {
        align-self: center;
    }

    .sb9a3 {
        align-self: flex-start;
    }

    .d8ief {
        justify-self: center;
    }

    .truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .gpq84 {
        overflow: auto;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-x-auto {
        overflow-x: auto;
    }

    .z3vx5 {
        overflow-x: hidden;
    }

    .i069e {
        overflow-x: scroll;
    }

    .overflow-y-auto {
        overflow-y: auto;
    }

    .wnrde {
        scroll-behavior: smooth;
    }

    .v8yv5 {
        .kw8m5 & {
            border-radius: 0;

            &:first-child {
                border-top-left-radius: var(--radius-box);
                border-top-right-radius: var(--radius-box);
            }

            &:last-child {
                border-bottom-right-radius: var(--radius-box);
                border-bottom-left-radius: var(--radius-box);
            }
        }
    }

    .opmlc {
        border-radius: 0;
        border-style: var(--tw-border-style);
        border-width: 0px;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }

        background-color: transparent;

        &:focus,
        &:focus-within {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 2px;
            border-color: var(--color-primary);
            --tw-shadow: 0 0 #0000;
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .x8tln {
        border: var(--border) solid;
        border-radius: var(--radius-box);
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }

        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 1);
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
        0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow),
        var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow),
        var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    .skeleton {
        border-radius: var(--radius-box);
        background-color: var(--color-base-200);
        will-change: background-position;
        background-image: linear-gradient(105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100%);
        background-size: 200% auto;
        background-repeat: no-repeat;
        background-position-x: -50%;
    }

    .crkkv {
        --tooltip-color: var(--color-neutral);
        --tooltip-text-color: var(--color-neutral-content);
        border-radius: var(--radius-selector);
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 1);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        line-height: calc(0.25rem * 5);
        --tw-leading: calc(0.25rem * 5);
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }

        background-color: var(--tooltip-color);
        color: var(--tooltip-text-color);
    }

    .collapse {
        :where(.nozem > li:not(.bsinl) > & > ul) {
            border-radius: var(--radius-box);
            background-color: var(--color-base-100);
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-shadow-color: var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
            }
        }
    }

    .p6tce {
        :where(li:not(.bsinl) > *:not(ul, .collapse, .accordion-content, .bsinl)) {
            border-radius: var(--radius-field);
            padding-inline: calc(0.25rem * 5);
            padding-block: calc(0.25rem * 3);
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }

        .bsinl {
            padding-inline: calc(0.25rem * 6);
            padding-block: calc(0.25rem * 3);
        }
    }

    .c05tf {
        :where(li:not(.bsinl) > *:not(ul, .collapse, .accordion-content, .bsinl)) {
            border-radius: var(--radius-field);
            padding-inline: calc(0.25rem * 4);
            padding-block: calc(0.25rem * 2.5);
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }

        .bsinl {
            padding-inline: calc(0.25rem * 4);
            padding-block: calc(0.25rem * 2);
        }
    }

    .menu-sm {
        :where(li:not(.bsinl) > *:not(ul, .collapse, .accordion-content, .bsinl)) {
            border-radius: var(--radius-field);
            padding-inline: calc(0.25rem * 3);
            padding-block: calc(0.25rem * 2);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        .bsinl {
            padding-inline: calc(0.25rem * 3);
            padding-block: calc(0.25rem * 2);
        }
    }

    .zdx09 {
        :where(li:not(.bsinl) > *:not(ul, .collapse, .accordion-content, .bsinl)) {
            border-radius: var(--radius-field);
            padding-inline: calc(0.25rem * 6);
            padding-block: calc(0.25rem * 3.5);
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }

        .bsinl {
            padding-inline: calc(0.25rem * 6);
            padding-block: calc(0.25rem * 3);
        }
    }

    .d39j2 {
        :where(li:not(.bsinl) > *:not(ul, .collapse, .accordion-content, .bsinl)) {
            border-radius: var(--radius-field);
            padding-inline: calc(0.25rem * 2);
            padding-block: calc(0.25rem * 1);
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }

        .bsinl {
            padding-inline: calc(0.25rem * 2);
            padding-block: calc(0.25rem * 1);
        }
    }

    .\!rounded-full {
        border-radius: calc(infinity * 1px) !important;
    }

    .mgm98 {
        border-radius: var(--radius-xs) !important;
    }

    .hkum6 {
        border-radius: 0.25rem;
    }

    .kddov {
        border-radius: var(--radius-2xl);
    }

    .str8f {
        border-radius: var(--radius-3xl);
    }

    .ah5ak {
        border-radius: var(--radius-4xl);
    }

    .rounded-box {
        border-radius: var(--radius-box);
    }

    .rounded-box {
        border-radius: var(--radius-box);
    }

    .rounded-field {
        border-radius: var(--radius-field);
    }

    .rounded-field {
        border-radius: var(--radius-field);
    }

    .rounded-full {
        border-radius: calc(infinity * 1px);
    }

    .rounded-lg {
        border-radius: var(--radius-lg);
    }

    .rounded-md {
        border-radius: var(--radius-md);
    }

    .iuxjp {
        border-radius: 0;
    }

    .qsqbm {
        border-radius: var(--radius-selector);
    }

    .qsqbm {
        border-radius: var(--radius-selector);
    }

    .rounded-sm {
        border-radius: var(--radius-sm);
    }

    .phc37 {
        border-radius: var(--radius-xl);
    }

    .rounded-s-full {
        border-start-start-radius: calc(infinity * 1px);
        border-end-start-radius: calc(infinity * 1px);
    }

    .dq7u0 {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
        padding: var(--card-p, 1.5rem);

        :where(&)+.zt5wl {
            padding-top: 0;
        }
    }

    .qrhcv {
        border-top-left-radius: var(--radius-3xl);
        border-top-right-radius: var(--radius-3xl);
    }

    .lj0j8 {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
    }

    .lj0j8 {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
    }

    .x47o2 {
        border-top-left-radius: var(--radius-field);
        border-top-right-radius: var(--radius-field);
    }

    .x47o2 {
        border-top-left-radius: var(--radius-field);
        border-top-right-radius: var(--radius-field);
    }

    .j9h62 {
        border-top-left-radius: calc(infinity * 1px);
        border-top-right-radius: calc(infinity * 1px);
    }

    .rounded-t-lg {
        border-top-left-radius: var(--radius-lg);
        border-top-right-radius: var(--radius-lg);
    }

    .vgl81 {
        border-top-left-radius: var(--radius-selector);
        border-top-right-radius: var(--radius-selector);
    }

    .vgl81 {
        border-top-left-radius: var(--radius-selector);
        border-top-right-radius: var(--radius-selector);
    }

    .sm6hm {
        border-top-left-radius: var(--radius-xl);
        border-top-right-radius: var(--radius-xl);
    }

    .rvdja {
        border-top-left-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
    }

    .rvdja {
        border-top-left-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
    }

    .uqqom {
        border-top-left-radius: var(--radius-field);
        border-bottom-left-radius: var(--radius-field);
    }

    .uqqom {
        border-top-left-radius: var(--radius-field);
        border-bottom-left-radius: var(--radius-field);
    }

    .ql61g {
        border-top-left-radius: var(--radius-selector);
        border-bottom-left-radius: var(--radius-selector);
    }

    .ql61g {
        border-top-left-radius: var(--radius-selector);
        border-bottom-left-radius: var(--radius-selector);
    }

    .j3wwn {
        border-top-left-radius: var(--radius-box);
    }

    .j3wwn {
        border-top-left-radius: var(--radius-box);
    }

    .zmmhk {
        border-top-left-radius: var(--radius-field);
    }

    .zmmhk {
        border-top-left-radius: var(--radius-field);
    }

    .dz5g5 {
        border-top-left-radius: var(--radius-selector);
    }

    .dz5g5 {
        border-top-left-radius: var(--radius-selector);
    }

    .wqadp {
        border-top-right-radius: var(--radius-box);
        border-bottom-right-radius: var(--radius-box);
    }

    .wqadp {
        border-top-right-radius: var(--radius-box);
        border-bottom-right-radius: var(--radius-box);
    }

    .lnyrp {
        border-top-right-radius: var(--radius-field);
        border-bottom-right-radius: var(--radius-field);
    }

    .lnyrp {
        border-top-right-radius: var(--radius-field);
        border-bottom-right-radius: var(--radius-field);
    }

    .dnp2u {
        border-top-right-radius: var(--radius-selector);
        border-bottom-right-radius: var(--radius-selector);
    }

    .dnp2u {
        border-top-right-radius: var(--radius-selector);
        border-bottom-right-radius: var(--radius-selector);
    }

    .tokcd {
        border-top-right-radius: var(--radius-box);
    }

    .tokcd {
        border-top-right-radius: var(--radius-box);
    }

    .z979q {
        border-top-right-radius: var(--radius-field);
    }

    .z979q {
        border-top-right-radius: var(--radius-field);
    }

    .apjkf {
        border-top-right-radius: var(--radius-selector);
    }

    .apjkf {
        border-top-right-radius: var(--radius-selector);
    }

    .uxwgi {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
        padding: var(--card-p, 1.5rem);

        :where(.zt5wl)+& {
            padding-top: 0;
        }
    }

    .ysvbs {
        border-bottom-right-radius: var(--radius-3xl);
        border-bottom-left-radius: var(--radius-3xl);
    }

    .rounded-b-\[80px\] {
        border-bottom-right-radius: 80px;
        border-bottom-left-radius: 80px;
    }

    .m9my2 {
        border-bottom-left-radius: var(--radius-box);
        border-bottom-right-radius: var(--radius-box);
    }

    .m9my2 {
        border-bottom-right-radius: var(--radius-box);
        border-bottom-left-radius: var(--radius-box);
    }

    .rzbbt {
        border-bottom-left-radius: var(--radius-field);
        border-bottom-right-radius: var(--radius-field);
    }

    .rzbbt {
        border-bottom-right-radius: var(--radius-field);
        border-bottom-left-radius: var(--radius-field);
    }

    .fjehc {
        border-bottom-left-radius: var(--radius-selector);
        border-bottom-right-radius: var(--radius-selector);
    }

    .fjehc {
        border-bottom-right-radius: var(--radius-selector);
        border-bottom-left-radius: var(--radius-selector);
    }

    .onwx9 {
        border-bottom-right-radius: var(--radius-xl);
        border-bottom-left-radius: var(--radius-xl);
    }

    .gz9m1 {
        border-bottom-right-radius: var(--radius-3xl);
    }

    .niabq {
        border-bottom-right-radius: var(--radius-box);
    }

    .niabq {
        border-bottom-right-radius: var(--radius-box);
    }

    .j85xr {
        border-bottom-right-radius: var(--radius-field);
    }

    .j85xr {
        border-bottom-right-radius: var(--radius-field);
    }

    .m6ot5 {
        border-bottom-right-radius: var(--radius-selector);
    }

    .m6ot5 {
        border-bottom-right-radius: var(--radius-selector);
    }

    .rounded-bl-\[140px\] {
        border-bottom-left-radius: 140px;
    }

    .jt3w6 {
        border-bottom-left-radius: var(--radius-box);
    }

    .jt3w6 {
        border-bottom-left-radius: var(--radius-box);
    }

    .lyzlg {
        border-bottom-left-radius: var(--radius-field);
    }

    .lyzlg {
        border-bottom-left-radius: var(--radius-field);
    }

    .xwadr {
        border-bottom-left-radius: var(--radius-selector);
    }

    .xwadr {
        border-bottom-left-radius: var(--radius-selector);
    }

    .nrrds {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-accent);
        background-color: var(--color-base-100);
        color: var(--color-accent);
    }

    .zh29a {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-error);
        background-color: var(--color-base-100);
        color: var(--color-error);
    }

    .ra0to {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-info);
        background-color: var(--color-base-100);
        color: var(--color-info);
    }

    .tndxl {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-neutral);
        background-color: var(--color-base-100);
        color: var(--color-neutral);
    }

    .qbeqb {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-primary);
        background-color: var(--color-base-100);
        color: var(--color-primary);
    }

    .pmae7 {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-secondary);
        background-color: var(--color-base-100);
        color: var(--color-secondary);
    }

    .dskia {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-success);
        background-color: var(--color-base-100);
        color: var(--color-success);
    }

    .r93fr {
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-warning);
        background-color: var(--color-base-100);
        color: var(--color-warning);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .kak16 {
        border-style: var(--tw-border-style);
        border-width: 0px;
    }

    .mwhhl {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .mjhov {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }

    .a2i6s {
        border-style: var(--tw-border-style);
        border-width: 3px;
    }

    .border-4 {
        border-style: var(--tw-border-style);
        border-width: 4px;
    }

    .xj5xt {
        border-style: var(--tw-border-style);
        border-width: 5px;
    }

    .eficd {
        border-width: 2px;
        transition-property: background-position, box-shadow;
        transition-timing-function: ease-in-out;
        transition-duration: 0.4s;
        background-color: transparent;
        --btn-shadow: 0px 1px 3px 0px var(--btn-color, var(--color-neutral)),
            0px 1px 2px -1px var(--btn-color, var(--color-neutral));

        @supports (color: color-mix(in lab, red, red)) {
            --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
                0px 1px 2px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
        }

        --btn-border: var(--btn-color, var(--color-neutral));
        --dark-shade: var(--btn-color, var(--color-neutral));

        @supports (color: color-mix(in lab, red, red)) {
            --dark-shade: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 80%, black);
        }

        background-size: 200% auto;
        background-image: linear-gradient(102deg, var(--btn-color, var(--color-neutral)) 0%, var(--dark-shade) 51%, var(--btn-color, var(--color-neutral)) 100%);

        @media (hover: hover) {
            &:hover {
                --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
                    0px 2px 4px -2px var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
                        0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
                }

                background-position: 99% center;
            }
        }

        &:focus-visible {
            --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
                0px 2px 4px -2px var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
                    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
            }

            background-position: 99% center;
        }

        &.gmf3v {
            --btn-shadow: 0px 4px 6px -1px var(--btn-color, var(--color-neutral)),
                0px 2px 4px -2px var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-shadow: 0px 4px 6px -1px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000),
                    0px 2px 4px -2px color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, #0000);
            }

            background-position: 99% center;
        }
    }

    .btn-text {
        --btn-shadow: "";
        color: var(--btn-color, var(--color-neutral));
        --btn-bg: "";
        --btn-border: "";
        --btn-noise: none;
        border-width: 0;
        outline-color: var(--btn-color, var(--color-neutral));

        @media (hover: hover) {
            &:hover {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }
            }
        }

        &:focus-visible {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
            }
        }

        &.gmf3v {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
            }
        }
    }

    .btn-soft {
        --btn-shadow: "";
        color: var(--btn-color, var(--color-neutral));
        --btn-bg: var(--btn-color, var(--color-neutral));

        @supports (color: color-mix(in lab, red, red)) {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, var(--color-base-100));
        }

        border-width: 0;
        --btn-noise: none;

        &:focus-visible {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
            }
        }

        @media (hover: hover) {
            &:hover {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
                }
            }
        }

        &.gmf3v {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
            }
        }
    }

    .o8hch {
        border-block-style: var(--tw-border-style);
        border-block-width: 1px;
    }

    .udxfl {
        border-inline-start-style: var(--tw-border-style);
        border-inline-start-width: 2px;
    }

    .vmfa5 {
        border-inline-start-style: var(--tw-border-style);
        border-inline-start-width: 3px;
    }

    .sh2bg {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px;
    }

    .g2x8e {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .h9eyh {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .bj56v {
        border-right-style: var(--tw-border-style);
        border-right-width: 1px;
    }

    .jsyw4 {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .qlkau {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .rbzpw {

        &:focus,
        &:focus-within {
            --tw-border-style: none;
            border-style: none;
            --tw-shadow: 0 0 #0000;
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .xkptu {
        --tw-border-style: none;
        border-style: none;

        :where(thead, tbody) {

            :where(tr:not(:last-child)),
            :where(tr:first-child:last-child) {
                --tw-border-style: none;
                border-style: none;
            }
        }
    }

    .\!border-none {
        --tw-border-style: none !important;
        border-style: none !important;
    }

    .quefn {
        --tw-border-style: dashed;
        border-style: dashed;
    }

    .t1gxl {

        &:before,
        &:after {
            --tw-border-style: dashed;
            border-style: dashed;
        }
    }

    .i3b5h {

        &:before,
        &:after {
            --tw-border-style: dotted;
            border-style: dotted;
        }
    }

    .lt6if {

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            border-color: var(--color-success);

            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-success);
                }
            }

            &:has(:hover):not(:focus, :focus-within) {
                border-color: var(--color-success);
            }

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            border-color: var(--color-error);

            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-error);
                }
            }

            &:has(:hover):not(:focus, :focus-within) {
                border-color: var(--color-error);
            }

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }

        &.is-valid::file-selector-button {
            background-color: var(--color-success);
            color: var(--color-success-content);
            --input-color: var(--color-success);
        }

        .validate &:valid::file-selector-button {
            background-color: var(--color-success);
            color: var(--color-success-content);
            --input-color: var(--color-success);
        }

        &.is-invalid::file-selector-button {
            background-color: var(--color-error);
            color: var(--color-error-content);
            --input-color: var(--color-error);
        }

        .validate &:invalid::file-selector-button {
            background-color: var(--color-error);
            color: var(--color-error-content);
            --input-color: var(--color-error);
        }

        .r48nb>&.is-valid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-success);
        }

        .validate .r48nb>&:valid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-success);
        }

        .r48nb>&.is-invalid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-error);
        }

        .validate .r48nb>&:invalid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-error);
        }
    }

    .r48nb {
        &>.lt6if.is-valid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-success);
        }

        .validate &>.lt6if:valid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-success);
        }

        &>.lt6if.is-invalid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-error);
        }

        .validate &>.lt6if:invalid::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-error);
        }

        &:has(.is-valid) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-success);
                }
            }

            .hdlg5 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-success);
                }
            }
        }

        .validate &:has(:valid) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-success);
                }
            }

            .hdlg5 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-success);
                }
            }
        }

        &:has(.is-invalid) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-error);
                }
            }

            .hdlg5 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-error);
                }
            }
        }

        .validate &:has(:invalid) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-error);
                }
            }

            .hdlg5 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-error);
                }
            }
        }
    }

    .is-invalid {
        .lt6if&::file-selector-button {
            background-color: var(--color-error);
            color: var(--color-error-content);
            --input-color: var(--color-error);
        }

        .r48nb>.lt6if&::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-error);
        }

        .xeuqu:has(~ &) {
            color: var(--color-error);
        }

        .xeuqu:has(~ * &) {
            color: var(--color-error);
        }

        :is(&)~.kgtg4 {
            color: var(--color-error);
        }

        *:has(&)~.kgtg4 {
            color: var(--color-error);
        }

        :is(&)~.xeuqu {
            color: var(--color-error);
        }

        :is(&)~.xeuqu * {
            color: var(--color-error);
        }

        :is(&)~*>.xeuqu {
            color: var(--color-error);
        }

        select&+.advance-select-toggle {
            --input-color: var(--color-error);

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }

        .lkc8r:has(> &) {
            --input-color: var(--color-error);

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }

        .r48nb:has(&) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-error);
                }
            }

            .hdlg5 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-error);
                }
            }
        }

        .f7bj4:has(&) {
            .amw3a {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-error);
                }
            }
        }

        .qyew9:has(&) {
            .nwjd7 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-error);
                }
            }
        }
    }

    .is-valid {
        .lt6if&::file-selector-button {
            background-color: var(--color-success);
            color: var(--color-success-content);
            --input-color: var(--color-success);
        }

        .r48nb>.lt6if&::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-success);
        }

        .xeuqu:has(~ &) {
            color: var(--color-success);
        }

        .xeuqu:has(~ * &) {
            color: var(--color-success);
        }

        :is(&)~.kgtg4 {
            color: var(--color-success);
        }

        *:has(&)~.kgtg4 {
            color: var(--color-success);
        }

        :is(&)~.xeuqu {
            color: var(--color-success);
        }

        :is(&)~.xeuqu * {
            color: var(--color-success);
        }

        :is(&)~*>.xeuqu {
            color: var(--color-success);
        }

        select&+.advance-select-toggle {
            --input-color: var(--color-success);

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        .lkc8r:has(> &) {
            --input-color: var(--color-success);

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        .r48nb:has(&) {
            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-success);
                }
            }

            .hdlg5 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(input:placeholder-shown)),
            &:has(.lt6if:focus) {
                .hdlg5 {
                    color: var(--color-success);
                }
            }
        }

        .f7bj4:has(&) {
            .amw3a {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-success);
                }
            }
        }

        .qyew9:has(&) {
            .nwjd7 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-success);
                }
            }
        }
    }

    .checkbox {

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            --input-color: var(--color-success);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-success);
            }
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            --input-color: var(--color-error);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-error);
            }
        }

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            color: var(--color-success-content);
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            color: var(--color-error-content);
        }
    }

    .select {

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            border-color: var(--color-success);

            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-success);
                }
            }

            &:has(:hover):not(:focus, :focus-within) {
                border-color: var(--color-success);
            }

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            border-color: var(--color-error);

            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-error);
                }
            }

            &:has(:hover):not(:focus, :focus-within) {
                border-color: var(--color-error);
            }

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }
    }

    .wz3vx {

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            border-color: var(--color-success);

            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-success);
                }
            }

            &:has(:hover):not(:focus, :focus-within) {
                border-color: var(--color-success);
            }

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            border-color: var(--color-error);

            &:hover {
                @media (hover: hover) {
                    border-color: var(--color-error);
                }
            }

            &:has(:hover):not(:focus, :focus-within) {
                border-color: var(--color-error);
            }

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }
    }

    .radio {

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            --input-color: var(--color-success);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-success);
            }
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            --input-color: var(--color-error);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-error);
            }
        }
    }

    .radio-inset {

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            --input-color: var(--color-success);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-success);
            }
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            --input-color: var(--color-error);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-error);
            }
        }
    }

    .switch {

        &.is-valid,
        &:has(.is-valid),
        .validate &:valid,
        .validate &:has(:valid) {
            --input-color: var(--color-success);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-success);
            }
        }

        &.is-invalid,
        &:has(.is-invalid),
        .validate &:invalid,
        .validate &:has(:invalid) {
            --input-color: var(--color-error);
            border-color: var(--input-color);

            &:checked,
            &[aria-checked="true"],
            &:has(> input:checked) {
                --input-color: var(--color-error);
            }
        }
    }

    .\!border-base-content\/40 {
        border-color: var(--color-base-content) !important;

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
        }
    }

    .uhqo8 {
        border-color: var(--color-accent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-accent) 10%, transparent);
        }
    }

    .xkvtq {
        border-color: var(--color-base-100);
    }

    .dt5hq {
        border-color: var(--color-base-content);
    }

    .pucc3 {
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 0%, transparent);
        }
    }

    .wjbjc {
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
    }

    .border-base-content\/15 {
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 15%, transparent);
        }
    }

    .border-base-content\/20 {
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }

    .tmfym {
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }
    }

    .border-base-content\/40 {
        border-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
    }

    .qyehr {
        border-color: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-error) 20%, transparent);
        }
    }

    .clgr3 {
        border-color: var(--color-info);
    }

    .u9yoo {
        border-color: var(--color-info);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-info) 10%, transparent);
        }
    }

    .wtyuo {
        border-color: var(--color-info);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-info) 20%, transparent);
        }
    }

    .szxbl {
        border-color: var(--color-info);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-info) 30%, transparent);
        }
    }

    .border-primary {
        border-color: var(--color-primary);
    }

    .hjv02 {
        border-color: var(--color-primary-content);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-primary-content) 40%, transparent);
        }
    }

    .gmlr5 {
        border-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
    }

    .bmrd2 {
        border-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
        }
    }

    .lljy8 {
        border-color: var(--color-success);
    }

    .dkudl {
        border-color: var(--color-success);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-success) 10%, transparent);
        }
    }

    .pluem {
        border-color: var(--color-success);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-success) 20%, transparent);
        }
    }

    .fwvm0 {
        border-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
        }
    }

    .xy5tt {
        border-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
        }
    }

    .kmqtj {
        border-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-warning) 30%, transparent);
        }
    }

    .bd03g {
        border-color: color-mix(in srgb, #fff 10%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
    }

    .skw8e {
        border-color: color-mix(in srgb, #fff 20%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
    }

    .zm640 {
        border-color: color-mix(in srgb, #fff 40%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 40%, transparent);
        }
    }

    .ish75 {
        border-color: color-mix(in srgb, #fff 80%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
    }

    .wpg17 {

        &:before,
        &:after {
            border-color: var(--color-accent);
        }
    }

    .aot76 {

        &:before,
        &:after {
            border-color: var(--color-error);
        }
    }

    .lo3fj {

        &:before,
        &:after {
            border-color: var(--color-info);
        }
    }

    .ktmep {

        &:before,
        &:after {
            border-color: var(--color-neutral);
        }
    }

    .kx6ap {

        &:before,
        &:after {
            border-color: var(--color-primary);
        }
    }

    .j1gxx {

        &:before,
        &:after {
            border-color: var(--color-secondary);
        }
    }

    .wd5a4 {

        &:before,
        &:after {
            border-color: var(--color-success);
        }
    }

    .zlm1i {

        &:before,
        &:after {
            border-color: var(--color-warning);
        }
    }

    .asv37 {
        border-inline-start-color: transparent;
    }

    .cecgc {
        border: none;
        backdrop-filter: blur(var(--glass-blur, 40px));
        background-color: #0000;
        background-image: linear-gradient(135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100%), linear-gradient(var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25%);
        box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
        text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
    }

    .r48nb {
        & .lt6if::file-selector-button {
            background-color: var(--color-base-100);
            color: var(--color-base-content);
            border-inline-end: var(--border) solid var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                border-inline-end: var(--border) solid color-mix(in oklab, var(--color-base-content) 40%, #0000);
            }

            outline: none;
        }
    }

    .dropdown-active {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }

        color: var(--color-primary);
    }

    .dmhgp {
        background-color: var(--color-accent);
        color: var(--color-accent-content);
    }

    .qlw6i {
        background-color: var(--color-error);
        color: var(--color-error-content);
    }

    .bd6vm {
        background-color: var(--color-info);
        color: var(--color-info-content);
    }

    .progress-primary {
        background-color: var(--color-primary);
        color: var(--color-primary-content);
    }

    .ztlti {
        background-color: var(--color-secondary);
        color: var(--color-secondary-content);
    }

    .ikabz {
        background-color: var(--color-success);
        color: var(--color-success-content);
    }

    .yxaen {
        background-color: var(--color-warning);
        color: var(--color-warning-content);
    }

    .select-active {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }

        color: var(--color-primary);
    }

    .ccunj {
        background-color: var(--color-accent);
        color: var(--color-accent);
    }

    .deeqj {
        background-color: var(--color-error);
        color: var(--color-error);
    }

    .yera0 {
        background-color: var(--color-info);
        color: var(--color-info);
    }

    .g40lq {
        background-color: var(--color-primary);
        color: var(--color-primary);
    }

    .oiyrs {
        background-color: var(--color-secondary);
        color: var(--color-secondary);
    }

    .zl7yt {
        background-color: var(--color-success);
        color: var(--color-success);
    }

    .tij29 {
        background-color: var(--color-warning);
        color: var(--color-warning);
    }

    .oldls {
        background-color: var(--color-accent);
        color: var(--color-accent-content);
    }

    .c8zlg {
        background-color: var(--color-error);
        color: var(--color-error-content);
    }

    .s54nl {
        background-color: var(--color-info);
        color: var(--color-info-content);
    }

    .e8czg {
        background-color: var(--color-neutral);
        color: var(--color-neutral-content);
    }

    .boteo {
        background-color: var(--color-primary);
        color: var(--color-primary-content);
    }

    .lj51x {
        background-color: var(--color-secondary);
        color: var(--color-secondary-content);
    }

    .pd2c7 {
        color: var(--color-accent);
        background-color: var(--color-accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-accent) 10%, var(--color-base-100));
        }
    }

    .vrxv9 {
        color: var(--color-error);
        background-color: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-error) 10%, var(--color-base-100));
        }
    }

    .vtly4 {
        color: var(--color-info);
        background-color: var(--color-info);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-info) 10%, var(--color-base-100));
        }
    }

    .eh4ho {
        color: var(--color-neutral);
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, var(--color-base-100));
        }
    }

    .u403j {
        color: var(--color-primary);
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
        }
    }

    .pfu80 {
        color: var(--color-secondary);
        background-color: var(--color-secondary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-secondary) 10%, var(--color-base-100));
        }
    }

    .pykq9 {
        color: var(--color-success);
        background-color: var(--color-success);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-success) 10%, var(--color-base-100));
        }
    }

    .g7chy {
        color: var(--color-warning);
        background-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-warning) 10%, var(--color-base-100));
        }
    }

    .emcqc {
        background-color: var(--color-success);
        color: var(--color-success-content);
    }

    .bii4n {
        background-color: var(--color-warning);
        color: var(--color-warning-content);
    }

    .zqze1 {
        tbody {
            tr {
                &:nth-child(even) {
                    background-color: var(--color-base-200);

                    :where(.qdiam tr th) {
                        background-color: var(--color-base-200);
                    }
                }

                &.q5op8 {

                    &,
                    &:nth-child(even) {
                        &:hover {
                            @media (hover: hover) {
                                background-color: var(--color-base-200);

                                @supports (color: color-mix(in lab, red, red)) {
                                    background-color: color-mix(in oklab, var(--color-base-200) 80%, transparent);
                                }
                            }
                        }
                    }
                }

                &.aqmao {

                    &,
                    &:nth-child(even) {
                        &:hover {
                            @media (hover: hover) {
                                background-color: var(--color-base-200);
                            }
                        }
                    }
                }
            }
        }
    }

    .\!bg-base-100 {
        background-color: var(--color-base-100) !important;
    }

    .csk06 {
        background-color: var(--color-accent);
    }

    .r7rn3 {
        background-color: var(--color-accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-accent) 10%, transparent);
        }
    }

    .j0mzy {
        background-color: var(--color-accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-accent) 20%, transparent);
        }
    }

    .r1nc2 {
        background-color: var(--color-accent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
        }
    }

    .bg-base-100 {
        background-color: var(--color-base-100);
    }

    .bg-base-200 {
        background-color: var(--color-base-200);
    }

    .aqi6z {
        background-color: var(--color-base-200);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
        }
    }

    .zadys {
        background-color: var(--color-base-200);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-200) 60%, transparent);
        }
    }

    .x4ivm {
        background-color: var(--color-base-300);
    }

    .j59ap {
        background-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-300) 5%, transparent);
        }
    }

    .zmmad {
        background-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-300) 6%, transparent);
        }
    }

    .bg-base-300\/60 {
        background-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-300) 60%, transparent);
        }
    }

    .t4fde {
        background-color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
    }

    .kvvjz {
        background-color: var(--color-black);
    }

    .x3qr4 {
        background-color: color-mix(in srgb, #000 40%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
        }
    }

    .dsadm {
        background-color: var(--color-error);
    }

    .fofl5 {
        background-color: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-error) 5%, transparent);
        }
    }

    .bg-error\/10 {
        background-color: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-error) 10%, transparent);
        }
    }

    .fkyin {
        background-color: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-error) 20%, transparent);
        }
    }

    .ol1i3 {
        background-color: var(--color-gray-50);
    }

    .yk1wz {
        background-color: var(--color-gray-100);
    }

    .m11om {
        background-color: var(--color-info);
    }

    .bg-info\/10 {
        background-color: var(--color-info);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-info) 10%, transparent);
        }
    }

    .g2xlh {
        background-color: var(--color-info);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-info) 20%, transparent);
        }
    }

    .cxil6 {
        background-color: var(--color-info);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-info) 50%, transparent);
        }
    }

    .ee2c7 {
        background-color: var(--color-neutral);
    }

    .pt6dp {
        background-color: var(--color-neutral-800);
    }

    .xvfwd {
        background-color: var(--color-neutral-content);
    }

    .bg-neutral\/10 {
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
    }

    .uq70k {
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
        }
    }

    .bg-primary {
        background-color: var(--color-primary);
    }

    .bg-primary\/5 {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
        }
    }

    .bg-primary\/10 {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
    }

    .s26dm {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 15%, transparent);
        }
    }

    .wsbm8 {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }
    }

    .n0t6k {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
        }
    }

    .lmu0k {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 45%, transparent);
        }
    }

    .hly7r {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 50%, transparent);
        }
    }

    .sk1o5 {
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 51%, transparent);
        }
    }

    .nszlk {
        background-color: var(--color-secondary);
    }

    .bg-secondary\/10 {
        background-color: var(--color-secondary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
        }
    }

    .dz1uk {
        background-color: var(--color-secondary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
        }
    }

    .jhjkt {
        background-color: var(--color-secondary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-secondary) 30%, transparent);
        }
    }

    .ceqig {
        background-color: var(--color-success);
    }

    .fyhsh {
        background-color: var(--color-success);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-success) 5%, transparent);
        }
    }

    .bg-success\/10 {
        background-color: var(--color-success);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
        }
    }

    .sth34 {
        background-color: var(--color-success);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-success) 20%, transparent);
        }
    }

    .y49oq {
        background-color: var(--color-success);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-success) 50%, transparent);
        }
    }

    .jseqn {
        background-color: transparent;
    }

    .rgoli {
        background-color: var(--color-warning);
    }

    .k4dkv {
        background-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-warning) 5%, transparent);
        }
    }

    .bg-warning\/10 {
        background-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
        }
    }

    .zjnwf {
        background-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
        }
    }

    .l8ryx {
        background-color: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-warning) 50%, transparent);
        }
    }

    .uf0sq {
        background-color: var(--color-white);
    }

    .o5zk6 {
        background-color: color-mix(in srgb, #fff 60%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
    }

    .fjege {

        td:nth-child(even),
        th:nth-child(even) {
            background-color: var(--color-base-200);
        }
    }

    .tvpsu {
        --tw-gradient-position: to bottom;

        @supports (background-image: linear-gradient(in lab, red, red)) {
            --tw-gradient-position: to bottom in oklab;
        }

        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .k0611 {
        --tw-gradient-position: to right;

        @supports (background-image: linear-gradient(in lab, red, red)) {
            --tw-gradient-position: to right in oklab;
        }

        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .zqeq5 {
        --tw-gradient-position: to bottom in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .m55wp {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-radial-\[at_50\%_100\%\] {
        --tw-gradient-position: at 50% 100%;
        background-image: radial-gradient(var(--tw-gradient-stops, at 50% 100%));
    }

    .bg-radial-\[at_94\%_92\%\] {
        --tw-gradient-position: at 94% 92%;
        background-image: radial-gradient(var(--tw-gradient-stops, at 94% 92%));
    }

    .c5u11 {
        background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
        background-size: 0.75rem 0.75rem;
    }

    .vz2x3 {
        --darker-shade: var(--gradient-color, var(--color-neutral));

        @supports (color: color-mix(in lab, red, red)) {
            --darker-shade: color-mix(in oklab, var(--gradient-color, var(--color-neutral)) 80%, black);
        }

        background-image: linear-gradient(var(--gradient-angle, 135deg), var(--gradient-color, var(--color-neutral)) 0%, var(--darker-shade) 100%);
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/ai-tool-landing-page\/blur-layers\/ai-tool-layer-blur\.png\'\)\] {
        background-image: url('../../img/ai-tool-landing-page/blur-layers/ai-tool-layer-blur.png');
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/common\/illustrations\/auth-background-2\.png\'\)\] {
        background-image: url('../../img/common/illustrations/auth-background-2.png');
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/common\/illustrations\/auth-background\.png\'\)\] {
        background-image: url('../../img/common/illustrations/auth-background.png');
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/free-landing-page\/free-layer-blur\.png\'\)\] {
        background-image: url('../../img/free-landing-page/free-layer-blur.png');
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/mobile-app-landing-page\/grid-bg\.png\'\)\] {
        background-image: url('../assets/images/grid-bg.png');
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/mobile-app-landing-page\/layer-blur-2\.png\'\)\] {
        background-image: url('../assets/images/layer-blur-2.png');
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/saas-landing-page\/layer-blur\.png\'\)\] {
        background-image: url('../assets/images/layer-blur-2.png');
    }

    .bg-\[url\(\'\.\.\/\.\.\/img\/saas-landing-page\/saas-login-background\.png\'\)\] {
        background-image: url('../../img/saas-landing-page/saas-login-background.png');
    }

    .laukt {
        background-image: repeating-linear-gradient(45deg, var(--color-base-200), var(--color-base-200) 2px, var(--color-base-100) 3px, var(--color-base-100) 6px);
    }

    .e0fi5 {
        --tw-gradient-from: color-mix(in srgb, #000 0%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-black) 0%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .pl4yn {
        --tw-gradient-from: var(--color-info);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .xazk7 {
        --tw-gradient-from: var(--color-primary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .nflza {
        --tw-gradient-from: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 6%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .dv6pf {
        --tw-gradient-from: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .zi7ro {
        --tw-gradient-from: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 15%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .iyjh6 {
        --tw-gradient-from: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .awhph {
        --tw-gradient-from: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 30%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .mplzo {
        --tw-gradient-from: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 40%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .esqlo {
        --tw-gradient-from: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .zzk48 {
        --tw-gradient-from: var(--color-warning);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-warning) 10%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .s3kq0 {
        --tw-gradient-from: var(--color-white);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .uhe60 {
        --tw-gradient-from-position: 5%;
    }

    .gzg4b {
        --tw-gradient-via: var(--color-error);
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .xupep {
        --tw-gradient-via: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-via: color-mix(in oklab, var(--color-error) 10%, transparent);
        }

        --tw-gradient-via-stops: var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-via) var(--tw-gradient-via-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .o1511 {
        --tw-gradient-via: var(--color-primary);
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .h1weg {
        --tw-gradient-via: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-via: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }

        --tw-gradient-via-stops: var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-via) var(--tw-gradient-via-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .cjmca {
        --tw-gradient-via: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-via: color-mix(in oklab, var(--color-primary) 30%, transparent);
        }

        --tw-gradient-via-stops: var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-via) var(--tw-gradient-via-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .l4xhi {
        --tw-gradient-to: color-mix(in srgb, #000 85%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-black) 85%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .ecews {
        --tw-gradient-to: #F47B20;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .lw0mp {
        --tw-gradient-to: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-error) 6%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .dtupz {
        --tw-gradient-to: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-error) 30%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .fvs6e {
        --tw-gradient-to: var(--color-gray-100);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .fmqhb {
        --tw-gradient-to: var(--color-gray-200);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .cxxl2 {
        --tw-gradient-to: var(--color-info);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .r4j9y {
        --tw-gradient-to: var(--color-primary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .jkbnh {
        --tw-gradient-to: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .iq1c2 {
        --tw-gradient-to: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-primary) 60%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .pcz51 {
        --tw-gradient-to: var(--color-success);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .m3w8p {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .wu8b6 {
        --tw-gradient-to: var(--color-warning);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .y4s8v {
        --tw-gradient-to-position: 30%;
    }

    .vkurx {
        --tw-gradient-to-position: 45%;
    }

    .ud2ua {
        --tw-gradient-to-position: 50%;
    }

    .y19ck {
        --tw-gradient-to-position: 60%;
    }

    .eg9fw {
        --tw-gradient-to-position: 80%;
    }

    .exqpn {
        --tw-gradient-to-position: 85%;
    }

    .mo0ba {
        --tw-gradient-to-position: 90%;
    }

    .vfnlc {
        --tw-gradient-to-position: 95%;
    }

    .ey891 {
        --tw-gradient-to-position: 98%;
    }

    .gefzu {
        --tw-gradient-to-position: 100%;
    }

    .yeit0 {
        mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_rXNP%7Banimation:spinner_YeBj .8s infinite%7D@keyframes spinner_YeBj%7B0%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);cy:5px%7D46.875%25%7Bcy:20px;rx:4px;ry:4px%7D50%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);cy:20.5px;rx:4.8px;ry:3px%7D53.125%25%7Brx:4px;ry:4px%7D100%25%7Bcy:5px%7D%7D%3C/style%3E%3Cellipse class='spinner_rXNP' cx='12' cy='5' rx='4' ry='4'/%3E%3C/svg%3E");
    }

    .r92jk {
        mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_hzlK%7Banimation:spinner_vc4H .8s linear infinite;animation-delay:-.8s%7D.spinner_koGT%7Banimation-delay:-.65s%7D.spinner_YF1u%7Banimation-delay:-.5s%7D@keyframes spinner_vc4H%7B0%25%7By:1px;height:22px%7D93.75%25%7By:5px;height:14px;opacity:.2%7D%7D%3C/style%3E%3Crect class='spinner_hzlK' x='1' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_koGT' x='9' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_YF1u' x='17' y='1' width='6' height='22'/%3E%3C/svg%3E");
    }

    .bdtog {
        mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_qM83%7Banimation:spinner_8HQG 1.05s infinite%7D.spinner_oXPr%7Banimation-delay:.1s%7D.spinner_ZTLf%7Banimation-delay:.2s%7D@keyframes spinner_8HQG%7B0%25,57.14%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);transform:translate(0)%7D28.57%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);transform:translateY(-6px)%7D100%25%7Btransform:translate(0)%7D%7D%3C/style%3E%3Ccircle class='spinner_qM83' cx='4' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_oXPr' cx='12' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_ZTLf' cx='20' cy='12' r='3'/%3E%3C/svg%3E");
    }

    .f8vu1 {
        mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='%230a0a0a' stroke-width='10' stroke-dasharray='205.271142578125 51.317785644531256' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.58892822265625'%3E%3C/animate%3E%3C/path%3E%3C/svg%3E");
    }

    .fpr41 {
        mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='%23fff'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    }

    .loading-spinner {
        mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
    }

    .mask-\[linear-gradient\(var\(--color-base-200\)\,var\(--color-base-200\)_18\%\,transparent_100\%\)\] {
        mask-image: linear-gradient(var(--color-base-200), var(--color-base-200) 18%, transparent 100%);
    }

    .tvdko {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .dt4lg {
        mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .pfa6j {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ogvcg {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }

    .u9q0r {
        mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }

    .qnzh5 {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }

    .m39xa {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M46.154 0H200l-46.154 153.846H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .mrh2z {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.846 0H0l46.154 153.846H200z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .iwt3g {
        mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.077 47.077v153.846l153.846-46.154V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .bm1rg {
        mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.923 47.077v153.846L.077 154.77V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .jutcy {
        mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .vlkjl {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 0h200v200H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .h9x7k {
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
    }

    .svhn6 {
        mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .t7olf {
        mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .bibtf {
        mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .xpbq4 {
        mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .jtvwo {
        mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ie6yu {
        mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .tvdko {
        --tw-mask-radial-shape: circle;
    }

    .psw97 {
        background-size: contain;
    }

    .w5dga {
        background-size: cover;
    }

    .nkmv1 {
        background-clip: text;
    }

    .p2k6d {
        background-position: center;
    }

    .y5c3w {
        background-repeat: no-repeat;
    }

    .t6mq7 {
        mask-size: contain;
        mask-repeat: no-repeat;
        mask-position: center;
    }

    .s5pi5 {
        mask-size: 200%;
        mask-position: left;

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            mask-position: right;
        }
    }

    .ywzew {
        mask-size: 200%;
        mask-position: right;

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            mask-position: left;
        }
    }

    .cmxn9 {
        mask-repeat: repeat;
    }

    .fill-black {
        fill: var(--color-black);
    }

    .fill-gray-200 {
        fill: var(--color-gray-200);
    }

    .fddki {
        object-fit: contain;
    }

    .ekgnz {
        object-fit: cover;
    }

    .zwkz6 {
        object-position: left;
    }

    .w2988 {
        object-position: top;
    }

    .jxtyj {
        padding: calc(0.25rem * 1);
        --size: calc(var(--size-selector, 0.25rem) * 7);
    }

    .cu5w6 {
        padding: calc(0.25rem * 0.5);
        --size: calc(var(--size-selector, 0.25rem) * 6);
    }

    .checkbox-sm {
        padding: calc(0.25rem * 0.5);
        --size: calc(var(--size-selector, 0.25rem) * 5);
    }

    .dlgwq {
        padding: calc(0.25rem * 1.5);
        --size: calc(var(--size-selector, 0.25rem) * 8);
    }

    .knh2h {
        padding: calc(0.25rem * 0.5);
        --size: calc(var(--size-selector, 0.25rem) * 4);
    }

    .zlbf8 {
        padding: 0.3125rem;

        &:is([type="radio"]) {
            --size: calc(var(--size-selector, 0.25rem) * 7);
        }
    }

    .wlxxp {
        padding: 0.25rem;

        &:is([type="radio"]) {
            --size: calc(var(--size-selector, 0.25rem) * 6);
        }
    }

    .kskgy {
        padding: 0.1875rem;

        &:is([type="radio"]) {
            --size: calc(var(--size-selector, 0.25rem) * 5);
        }
    }

    .zpbah {
        padding: 0.375rem;

        &:is([type="radio"]) {
            --size: calc(var(--size-selector, 0.25rem) * 8);
        }
    }

    .jw41a {
        padding: 0.1875rem;

        &:is([type="radio"]) {
            --size: calc(var(--size-selector, 0.25rem) * 4);
        }
    }

    .kc1oy {
        padding: calc(var(--spacing) * 0);
    }

    .p-0\.5 {
        padding: calc(var(--spacing) * 0.5);
    }

    .pumar {
        padding: calc(var(--spacing) * 0.25);
    }

    .yhoo7 {
        padding: calc(var(--spacing) * 1);
    }

    .p-2 {
        padding: calc(var(--spacing) * 2);
    }

    .pfbal {
        padding: calc(var(--spacing) * 2.5);
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .zkmdp {
        padding: calc(var(--spacing) * 3.5);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .vx2f2 {
        padding: calc(var(--spacing) * 5);
    }

    .ar7to {
        padding: calc(var(--spacing) * 6);
    }

    .a0ujr {
        padding: calc(var(--spacing) * 8);
    }

    .qp8xj {
        padding: calc(var(--spacing) * 10);
    }

    .xmmnx {
        padding: calc(var(--spacing) * 12);
    }

    .cq0xj {
        padding: 1px;
    }

    .bsinl {
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 2);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
    }

    .i7shm {
        :where(thead, tfoot) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        :not(thead, tfoot) tr {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }

        :where(th, td) {
            padding-inline: calc(0.25rem * 6);
            padding-block: calc(0.25rem * 4);
        }
    }

    .b31i1 {
        :where(thead, tfoot) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        :not(thead, tfoot) tr {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        :where(th, td) {
            padding-inline: calc(0.25rem * 5);
            padding-block: calc(0.25rem * 3);
        }
    }

    .eiz1k {
        :where(thead, tfoot) {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }

        :not(thead, tfoot) tr {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        :where(th, td) {
            padding-inline: calc(0.25rem * 3);
            padding-block: calc(0.25rem * 2);
        }
    }

    .qih53 {
        :where(thead, tfoot) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }

        :not(thead, tfoot) tr {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }

        :where(th, td) {
            padding-inline: calc(0.25rem * 6);
            padding-block: calc(0.25rem * 5);
        }
    }

    .m607g {
        :where(thead, tfoot) {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }

        :not(thead, tfoot) tr {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }

        :where(th, td) {
            padding-inline: calc(0.25rem * 2);
            padding-block: calc(0.25rem * 1);
        }
    }

    .xulae {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 7);
        padding-inline: calc(0.25rem * 3.5);
    }

    .kmzy3 {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 6);
        padding-inline: calc(0.25rem * 3);
    }

    .vnrko {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 5);
        padding-inline: calc(0.25rem * 2);
    }

    .hmkaq {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 8);
        padding-inline: calc(0.25rem * 4);
    }

    .wv9pc {
        --size: calc(var(--size-selector, 0.25rem) * 4);
        font-size: 0.625rem;
        padding-inline: calc(0.25rem * 1.5);
    }

    .\!px-2\.5 {
        padding-inline: calc(var(--spacing) * 2.5) !important;
    }

    .oak0n {
        padding-inline: calc(var(--spacing) * 0);
    }

    .a3o0x {
        padding-inline: calc(var(--spacing) * 0.5);
    }

    .iefrh {
        padding-inline: calc(var(--spacing) * 1);
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .mcuiv {
        padding-inline: calc(var(--spacing) * 2.5);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .e6j53 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .ufdzd {
        padding-inline: calc(var(--spacing) * 5);
    }

    .hqyv3 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .esy76 {
        padding-inline: calc(var(--spacing) * 8);
    }

    .wmf6l {
        padding-inline: calc(var(--spacing) * 10);
    }

    .bsx0h {
        padding-inline: calc(var(--spacing) * 14);
    }

    .\!py-0\.5 {
        padding-block: calc(var(--spacing) * 0.5) !important;
    }

    .b49hy {
        padding-block: calc(var(--spacing) * 0);
    }

    .qqtj1 {
        padding-block: calc(var(--spacing) * 0.25);
    }

    .k8six {
        padding-block: calc(var(--spacing) * 1);
    }

    .fb79z {
        padding-block: calc(var(--spacing) * 1.5);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .u032e {
        padding-block: calc(var(--spacing) * 2.5);
    }

    .uzxed {
        padding-block: calc(var(--spacing) * 3);
    }

    .pqmfs {
        padding-block: calc(var(--spacing) * 3.5);
    }

    .k3cg2 {
        padding-block: calc(var(--spacing) * 4);
    }

    .tww3e {
        padding-block: calc(var(--spacing) * 5);
    }

    .atpmx {
        padding-block: calc(var(--spacing) * 6);
    }

    .gn2e2 {
        padding-block: calc(var(--spacing) * 8);
    }

    .dcc8q {
        padding-block: calc(var(--spacing) * 10);
    }

    .nl1ji {
        padding-block: calc(var(--spacing) * 12);
    }

    .l8qsq {
        padding-inline-start: calc(var(--spacing) * 0);
    }

    .hbtis {
        padding-inline-start: calc(var(--spacing) * 3.5);
    }

    .qwg2y {
        padding-inline-start: calc(var(--spacing) * 4);
    }

    .in0rp {
        padding-inline-start: calc(var(--spacing) * 5);
    }

    .xble1 {
        padding-inline-start: calc(var(--spacing) * 6);
    }

    .jnx4w {
        padding-inline-start: calc(var(--spacing) * 8);
    }

    .ki2gy {
        padding-inline-end: calc(var(--spacing) * 0);
    }

    .x88ed {
        padding-inline-end: calc(var(--spacing) * 1.5);
    }

    .xfk7t {
        padding-inline-end: calc(var(--spacing) * 3);
    }

    .jcqqj {
        padding-top: calc(var(--spacing) * 0);
    }

    .heoo4 {
        padding-top: calc(var(--spacing) * 0.5);
    }

    .kaoyb {
        padding-top: calc(var(--spacing) * 0.25);
    }

    .a5svk {
        padding-top: calc(var(--spacing) * 1);
    }

    .pt-3 {
        padding-top: calc(var(--spacing) * 3);
    }

    .wgged {
        padding-top: calc(var(--spacing) * 4);
    }

    .e5l13 {
        padding-top: calc(var(--spacing) * 4.5);
    }

    .nho8u {
        padding-top: calc(var(--spacing) * 6);
    }

    .gjub7 {
        padding-top: calc(var(--spacing) * 8);
    }

    .qop78 {
        padding-top: calc(var(--spacing) * 10.5);
    }

    .kezwy {
        padding-top: calc(var(--spacing) * 12);
    }

    .buo4u {
        padding-top: calc(var(--spacing) * 16);
    }

    .jbqhz {
        padding-top: calc(var(--spacing) * 18);
    }

    .maaj8 {
        padding-top: calc(var(--spacing) * 20);
    }

    .pkj1p {
        padding-top: calc(var(--spacing) * 28);
    }

    .uejpv {
        padding-top: calc(var(--spacing) * 34.5);
    }

    .kn1gc {
        padding-top: calc(var(--spacing) * 40);
    }

    .zxusr {
        padding-bottom: calc(var(--spacing) * 0) !important;
    }

    .nnhfx {
        padding-bottom: calc(var(--spacing) * 0);
    }

    .p4nwx {
        padding-bottom: calc(var(--spacing) * 2);
    }

    .jzr3y {
        padding-bottom: calc(var(--spacing) * 3);
    }

    .m073z {
        padding-bottom: calc(var(--spacing) * 3.5);
    }

    .az4rj {
        padding-bottom: calc(var(--spacing) * 4);
    }

    .fxmh2 {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .sti0w {
        padding-bottom: calc(var(--spacing) * 9.5);
    }

    .urhqv {
        padding-bottom: calc(var(--spacing) * 16);
    }

    .a7iic {
        padding-bottom: calc(var(--spacing) * 24);
    }

    .d69hz {
        padding-bottom: calc(var(--spacing) * 28);
    }

    .spjhh {
        padding-bottom: calc(var(--spacing) * 32);
    }

    .text-center {
        text-align: center;
    }

    .dubsx {
        text-align: end;
    }

    .zd843 {
        text-align: left;
    }

    .faxlj {
        text-align: start;
    }

    .align-bottom {
        vertical-align: bottom;
    }

    .ylsrn {
        vertical-align: middle;
    }

    .fpocx {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        color: var(--color-base-content);
    }

    .pura0 {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        color: var(--color-base-content);
    }

    .hn88e {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
        color: var(--color-base-content);
    }

    .q7kod {
        --card-p: 2rem;
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));

        .fpocx {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
    }

    .qjoz6 {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --card-p: 1.5rem;

        .fpocx {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
    }

    .gjdcv {
        --card-p: 1rem;
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));

        .fpocx {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }
    }

    .xddvt {
        --card-p: 2.5rem;
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));

        .fpocx {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
    }

    .bkpsx {
        --card-p: 0.5rem;
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));

        .fpocx {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }

    .u60zw {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --btn-p: 1.25rem;
        --size: calc(var(--size-field, 0.25rem) * 11.5);
    }

    .m5ce0 {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --btn-p: 1rem;
        --size: calc(var(--size-field, 0.25rem) * 9.5);
    }

    .btn-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --btn-p: 0.75rem;
        --size: calc(var(--size-field, 0.25rem) * 7.5);
    }

    .j3m7f {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --btn-p: 1.5rem;
        --size: calc(var(--size-field, 0.25rem) * 14);
    }

    .qe0k3 {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --btn-p: 0.5rem;
        --size: calc(var(--size-field, 0.25rem) * 6);
    }

    .f8b31 {
        & :where(.qqm0l) {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            --size: calc(var(--size-field, 0.25rem) * 11.5);
            --tab-p: 1.25rem;
        }
    }

    .p1tyb {
        & :where(.qqm0l) {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            --size: calc(var(--size-field, 0.25rem) * 9.5);
            --tab-p: 1rem;
        }
    }

    .bviur {
        & :where(.qqm0l) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            --size: calc(var(--size-field, 0.25rem) * 7.5);
            --tab-p: 0.75rem;
        }
    }

    .x3643 {
        & :where(.qqm0l) {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
            --size: calc(var(--size-field, 0.25rem) * 14);
            --tab-p: 1.5rem;
        }
    }

    .rpaay {
        & :where(.qqm0l) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            --size: calc(var(--size-field, 0.25rem) * 6);
            --tab-p: 0.5rem;
        }
    }

    .kmki3 {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 7.5);
    }

    .zp42k {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 6.5);
    }

    .qnpeu {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 5.5);
    }

    .jsjqx {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --size: calc(var(--size-selector, 0.25rem) * 8.5);
    }

    .h7xmx {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --size: calc(var(--size-field, 0.25rem) * 11.5);
    }

    .nny4r {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        --size: calc(var(--size-field, 0.25rem) * 9.5);
    }

    .q4ywa {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        --size: calc(var(--size-field, 0.25rem) * 7.5);
    }

    .ywm77 {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
        --size: calc(var(--size-field, 0.25rem) * 14);
    }

    .bvizj {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
        --size: calc(var(--size-field, 0.25rem) * 6);
    }

    .\!text-sm {
        font-size: var(--text-sm) !important;
        line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
    }

    .ynugf {
        &::file-selector-button {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }
    }

    .i6t40 {
        &::file-selector-button {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }

    .j8n2r {
        &::file-selector-button {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .moz2m {
        &::file-selector-button {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
    }

    .oeghr {
        &::file-selector-button {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height));
        }
    }

    .tjfu0 {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .zsd78 {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }

    .zfzi2 {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }

    .lgtdm {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading, var(--text-5xl--line-height));
    }

    .vxk1t {
        font-size: var(--text-6xl);
        line-height: var(--tw-leading, var(--text-6xl--line-height));
    }

    .aei2x {
        font-size: var(--text-7xl);
        line-height: var(--tw-leading, var(--text-7xl--line-height));
    }

    .i6s5h {
        font-size: var(--text-8xl);
        line-height: var(--tw-leading, var(--text-8xl--line-height));
    }

    .q978b {
        font-size: var(--text-9xl);
        line-height: var(--tw-leading, var(--text-9xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .itvoh {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .ehpxe {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .afhoz {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .qjv76 {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .zi458 {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .ud2k2 {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }

    .yxy9c {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .yemnw {
        --size: calc(var(--size-selector, 0.25rem) * 4.5);
        font-size: 0.625rem;
    }

    .text-\[6px\] {
        font-size: 6px;
    }

    .text-\[8px\] {
        font-size: 8px;
    }

    .text-\[50px\] {
        font-size: 50px;
    }

    .leading-\[1\.2\] {
        --tw-leading: 1.2;
        line-height: 1.2;
    }

    .leading-\[1\.15\] {
        --tw-leading: 1.15;
        line-height: 1.15;
    }

    .leading-\[1\.25\] {
        --tw-leading: 1.25;
        line-height: 1.25;
    }

    .r53xo {
        --tw-leading: 1;
        line-height: 1;
    }

    .wlnhf {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed);
    }

    .\!font-medium {
        --tw-font-weight: var(--font-weight-medium) !important;
        font-weight: var(--font-weight-medium) !important;
    }

    .\!font-semibold {
        --tw-font-weight: var(--font-weight-semibold) !important;
        font-weight: var(--font-weight-semibold) !important;
    }

    .yx8fg {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .nrv3j {
        --tw-font-weight: var(--font-weight-light);
        font-weight: var(--font-weight-light);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .kqmml {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
    }

    .j05ae {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .a8v2u {
        --tw-tracking: var(--tracking-wide);
        letter-spacing: var(--tracking-wide);
    }

    .v06ob {
        --tw-tracking: var(--tracking-wider);
        letter-spacing: var(--tracking-wider);
    }

    .g04xg {
        text-wrap: balance;
    }

    .text-nowrap {
        text-wrap: nowrap;
    }

    .text-wrap {
        text-wrap: wrap;
    }

    .gepu3 {
        word-break: break-all;
    }

    .whitespace-nowrap {
        white-space: nowrap;
    }

    .pqebt {
        --btn-shadow: "";
        --btn-bg: "";
        color: var(--btn-color, var(--color-neutral));
        --btn-border: var(--btn-color, var(--color-neutral));
        --btn-noise: none;
        outline-color: var(--btn-color, var(--color-neutral));

        @media (hover: hover) {
            &:hover {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }
            }
        }

        &:focus-visible {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
            }

            outline-width: 1px;
        }

        &.gmf3v {
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
            }
        }
    }

    .xeuqu {
        &:has(~ .is-valid) {
            color: var(--color-success);
        }

        &:has(~ * .is-valid) {
            color: var(--color-success);
        }

        .validate &:has(~ :valid) {
            color: var(--color-success);
        }

        .validate &:has(~ * :valid) {
            color: var(--color-success);
        }

        :is(.is-valid)~& {
            color: var(--color-success);
        }

        :is(.is-valid)~& * {
            color: var(--color-success);
        }

        :is(.is-valid)~*>& {
            color: var(--color-success);
        }

        .validate :is(:valid)~& {
            color: var(--color-success);
        }

        .validate :is(:valid)~& * {
            color: var(--color-success);
        }

        .validate :is(:valid)~*>& {
            color: var(--color-success);
        }

        &:has(~ .is-invalid) {
            color: var(--color-error);
        }

        &:has(~ * .is-invalid) {
            color: var(--color-error);
        }

        .validate &:has(~ :invalid) {
            color: var(--color-error);
        }

        .validate &:has(~ * :invalid) {
            color: var(--color-error);
        }

        :is(.is-invalid)~& {
            color: var(--color-error);
        }

        :is(.is-invalid)~& * {
            color: var(--color-error);
        }

        :is(.is-invalid)~*>& {
            color: var(--color-error);
        }

        .validate :is(:invalid)~& {
            color: var(--color-error);
        }

        .validate :is(:invalid)~& * {
            color: var(--color-error);
        }

        .validate :is(:invalid)~*>& {
            color: var(--color-error);
        }
    }

    .kgtg4 {
        :is(.is-valid)~& {
            color: var(--color-success);
        }

        *:has(.is-valid)~& {
            color: var(--color-success);
        }

        .validate :is(:valid)~& {
            color: var(--color-success);
        }

        .validate *:has(:valid)~& {
            color: var(--color-success);
        }

        :is(.is-invalid)~& {
            color: var(--color-error);
        }

        *:has(.is-invalid)~& {
            color: var(--color-error);
        }

        .validate :is(:invalid)~& {
            color: var(--color-error);
        }

        .validate *:has(:invalid)~& {
            color: var(--color-error);
        }
    }

    .qyew9 {
        &:has(.is-valid) {
            .nwjd7 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-success);
                }
            }
        }

        .validate &:has(:valid) {
            .nwjd7 {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-success);
                }
            }
        }

        &:has(.is-invalid) {
            .nwjd7 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-error);
                }
            }
        }

        .validate &:has(:invalid) {
            .nwjd7 {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(select:placeholder-shown)),
            &:has(.select:focus) {
                .nwjd7 {
                    color: var(--color-error);
                }
            }
        }
    }

    .f7bj4 {
        &:has(.is-valid) {
            .amw3a {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-success);
                }
            }
        }

        .validate &:has(:valid) {
            .amw3a {
                color: var(--color-success);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-success);
                }
            }
        }

        &:has(.is-invalid) {
            .amw3a {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-error);
                }
            }
        }

        .validate &:has(:invalid) {
            .amw3a {
                color: var(--color-error);
            }

            &:focus-within,
            &:not(:has(textarea:placeholder-shown)),
            &:has(.wz3vx:focus) {
                .amw3a {
                    color: var(--color-error);
                }
            }
        }
    }

    .ujnbr {
        color: var(--color-error-content);
        --alert-color: var(--color-error);
    }

    .q86vb {
        color: var(--color-info-content);
        --alert-color: var(--color-info);
    }

    .iymdm {
        color: var(--color-primary-content);
        --alert-color: var(--color-primary);
    }

    .j5w28 {
        color: var(--color-success-content);
        --alert-color: var(--color-success);
    }

    .zjngl {
        color: var(--color-warning-content);
        --alert-color: var(--color-warning);
    }

    .jqbeu {
        color: var(--color-accent-content);
        --input-color: var(--color-accent);
    }

    .g6k0a {
        color: var(--color-error-content);
        --input-color: var(--color-error);
    }

    .l3a9l {
        color: var(--color-info-content);
        --input-color: var(--color-info);
    }

    .checkbox-primary {
        color: var(--color-primary-content);
        --input-color: var(--color-primary);
    }

    .boiek {
        color: var(--color-secondary-content);
        --input-color: var(--color-secondary);
    }

    .vayqj {
        color: var(--color-success-content);
        --input-color: var(--color-success);
    }

    .aiuvh {
        color: var(--color-warning-content);
        --input-color: var(--color-warning);
    }

    .cgqix {
        color: var(--color-accent);
    }

    .jac86 {
        color: var(--color-base-100);
    }

    .text-base-content {
        color: var(--color-base-content);
    }

    .text-base-content\/50 {
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }

    .qa7s3 {
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
    }

    .zg09p {
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
        }
    }

    .text-base-content\/80 {
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }
    }

    .xa19p {
        color: var(--color-black);
    }

    .hihrn {
        color: color-mix(in srgb, #000 60%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-black) 60%, transparent);
        }
    }

    .fucm0 {
        color: var(--color-blue-600);
    }

    .text-error {
        color: var(--color-error);
    }

    .mv3r1 {
        color: var(--color-error-content);
    }

    .pjj97 {
        color: var(--color-gray-500);
    }

    .ftnxj {
        color: var(--color-gray-600);
    }

    .a6fpo {
        color: var(--color-gray-800);
    }

    .yfr09 {
        color: var(--color-gray-900);
    }

    .text-info {
        color: var(--color-info);
    }

    .qi3pj {
        color: var(--color-neutral);
    }

    .lofmf {
        color: var(--color-neutral-content);
    }

    .il5ut {
        color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-neutral) 80%, transparent);
        }
    }

    .ujkaa {
        color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-neutral) 90%, transparent);
        }
    }

    .text-primary {
        color: var(--color-primary);
    }

    .fjiw5 {
        color: var(--color-primary-content);
    }

    .l3w0q {
        color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-primary) 50%, transparent);
        }
    }

    .text-secondary {
        color: var(--color-secondary);
    }

    .sd439 {
        color: var(--color-secondary-content);
    }

    .text-success {
        color: var(--color-success);
    }

    .iirbx {
        color: var(--color-success-content);
    }

    .opx1h {
        color: transparent;
    }

    .text-warning {
        color: var(--color-warning);
    }

    .lxj2x {
        color: var(--color-warning-content);
    }

    .aeah0 {
        color: var(--color-white);
    }

    .vbsrs {
        color: color-mix(in srgb, #fff 60%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
    }

    .zvy52 {
        color: color-mix(in srgb, #fff 80%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
    }

    .qu1q0 {
        color: color-mix(in srgb, #fff 90%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-white) 90%, transparent);
        }
    }

    .ryawj {
        color: var(--color-yellow-400);
    }

    .m9095 {
        text-transform: lowercase;
    }

    .uppercase {
        text-transform: uppercase;
    }

    .hr8y0 {
        font-style: normal;
    }

    .dg5t4 {
        .y9rox:where(&) {
            text-decoration-line: none;

            @media (hover:hover) {
                &:hover {
                    @media (hover: hover) {
                        text-decoration-line: underline;
                    }
                }
            }
        }
    }

    .ucc74 {
        text-decoration-line: line-through;
    }

    .xthjh {
        text-decoration-line: none;
    }

    .qt0xl {
        text-decoration-line: underline;
    }

    .ri9ft {
        .b0a9u {
            opacity: 0%;
        }

        .ztk79 {
            opacity: 100%;
        }
    }

    .opacity-0 {
        opacity: 0%;
    }

    .dmc94 {
        opacity: 10%;
    }

    .nojzy {
        opacity: 20%;
    }

    .kcg5f {
        opacity: 30%;
    }

    .lltwf {
        opacity: 40%;
    }

    .opacity-100 {
        opacity: 100%;
    }

    .ja1w2 {
        --tw-shadow: 0 0 #0000 !important;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
    }

    .rl7z0 {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-md {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ys2lo {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .hi1cb {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .q3jfq {
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 10%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    .shadow-base-300\/20 {
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    .gdwg6 {
        --tw-shadow-color: var(--color-error);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-error) 40%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    .vu9hv {
        --tw-shadow-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-primary) 30%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    .ring-primary {
        --tw-ring-color: var(--color-primary);
    }

    .c58t4 {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .r7ej6 {
        --tw-blur: blur(8px);
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .blur-2xl {
        --tw-blur: blur(var(--blur-2xl));
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .dblit {
        --tw-blur: blur(var(--blur-3xl));
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .rqk65 {
        --tw-grayscale: grayscale(100%);
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .pzzdr {
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .ml95d {
        --tw-backdrop-blur: blur(var(--blur-md));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .acikh {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .v6cg4 {
        --tw-backdrop-saturate: saturate(200%);
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .v1r1u {
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .carousel-slide {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
        transition-duration: 700ms;
        --tw-duration: 700ms;
    }

    .transition {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-\[height\] {
        transition-property: height;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .nyygi {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .hcr5v {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .do45s {
        transition-property: box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .l11bc {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .p0e8f {
        --tw-duration: 200ms;
        transition-duration: 200ms;
    }

    .duration-300 {
        --tw-duration: 300ms;
        transition-duration: 300ms;
    }

    .duration-500 {
        --tw-duration: 500ms;
        transition-duration: 500ms;
    }

    .fu49i {
        --tw-duration: 800ms;
        transition-duration: 800ms;
    }

    .q6ysz {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
    }

    .mlfbq {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out);
    }

    .advance-select-toggle {
        select.is-valid+& {
            --input-color: var(--color-success);

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        .validate select:has(~ * > .selected)+& {
            --input-color: var(--color-success);

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        select.is-invalid+& {
            --input-color: var(--color-error);

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }

        .validate select:not(:has(~ * > .selected))+& {
            --input-color: var(--color-error);

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }
    }

    .lkc8r {
        &:has(> .is-valid) {
            --input-color: var(--color-success);

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }

        &:has(> .is-invalid) {
            --input-color: var(--color-error);

            &:focus,
            &:focus-within {
                --input-color: var(--color-error);
            }
        }
    }

    .v5sy4 {
        --indicator-s: 50%;
        --indicator-e: 50%;
        --indicator-x: -50%;

        [dir="rtl"] & {
            --indicator-x: 50%;
        }
    }

    .orqwy {
        --indicator-s: auto;
        --indicator-e: 0;
        --indicator-x: 50%;

        [dir="rtl"] & {
            --indicator-x: -50%;
        }
    }

    .ewh5b {
        --indicator-s: 0;
        --indicator-e: auto;
        --indicator-x: -50%;

        [dir="rtl"] & {
            --indicator-x: 50%;
        }
    }

    .rb1zv {
        --indicator-t: auto;
        --indicator-b: 0;
        --indicator-y: 50%;
    }

    .qqblv {
        --indicator-t: 50%;
        --indicator-b: 50%;
        --indicator-y: -50%;
    }

    .escij {
        --indicator-t: 0;
        --indicator-b: auto;
        --indicator-y: -50%;
    }

    .bvsq1 {
        --range-thumb-border-width: 4px;
        --range-track-height: 10px;
        --range-thumb-size: 18px;
    }

    .oh5qp {
        --range-thumb-border-width: 3px;
        --range-track-height: 8px;
        --range-thumb-size: 16px;
    }

    .ks3my {
        --range-thumb-border-width: 2.5px;
        --range-track-height: 6px;
        --range-thumb-size: 12px;
    }

    .mp0rj {
        --range-thumb-border-width: 4px;
        --range-track-height: 12px;
        --range-thumb-size: 20px;
    }

    .j3ekk {
        --range-thumb-border-width: 2.5px;
        --range-track-height: 4px;
        --range-thumb-size: 10px;
    }

    .k92tu {
        --tw-outline-style: none !important;
        outline-style: none !important;
    }

    .ls529 {
        --badge-color: var(--color-accent);
        --badge-fg: var(--color-accent-content);
    }

    .badge-error {
        --badge-color: var(--color-error);
        --badge-fg: var(--color-error-content);
    }

    .badge-info {
        --badge-color: var(--color-info);
        --badge-fg: var(--color-info-content);
    }

    .badge-primary {
        --badge-color: var(--color-primary);
        --badge-fg: var(--color-primary-content);
    }

    .badge-secondary {
        --badge-color: var(--color-secondary);
        --badge-fg: var(--color-secondary-content);
    }

    .badge-success {
        --badge-color: var(--color-success);
        --badge-fg: var(--color-success-content);
    }

    .badge-warning {
        --badge-color: var(--color-warning);
        --badge-fg: var(--color-warning-content);
    }

    .kbhuy {
        --btn-color: var(--color-accent);
        --btn-fg: var(--color-accent-content);
    }

    .zr9mn {
        --btn-color: var(--color-error);
        --btn-fg: var(--color-error-content);
    }

    .d1cr3 {
        --btn-color: var(--color-info);
        --btn-fg: var(--color-info-content);
    }

    .s344y {
        --btn-color: var(--color-neutral);
        --btn-fg: var(--color-neutral-content);
    }

    .btn-primary {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
    }

    .kt9dk {
        --btn-color: var(--color-secondary);
        --btn-fg: var(--color-secondary-content);
    }

    .hdsac {
        --btn-color: var(--color-success);
        --btn-fg: var(--color-success-content);
    }

    .c5e3h {
        --btn-color: var(--color-warning);
        --btn-fg: var(--color-warning-content);
    }

    .jbdag {

        .validate &:has(:valid),
        &:has(.is-valid) {
            --input-color: var(--color-success);
        }

        .validate &:has(:invalid),
        &:has(.is-invalid) {
            --input-color: var(--color-error);
        }
    }

    .t69f9 {

        .validate &:has(:valid),
        &:has(.is-valid) {
            --input-color: var(--color-success);
        }

        .validate &:has(:invalid),
        &:has(.is-invalid) {
            --input-color: var(--color-error);
        }
    }

    .fwcll {
        --tw-outline-style: none;
        outline-style: none;
    }

    .selected {
        .validate select:has(~ * > &)+.advance-select-toggle {
            --input-color: var(--color-success);

            &:focus,
            &:focus-within {
                --input-color: var(--color-success);
            }
        }
    }

    .skp4m {

        &:is([type="checkbox"]),
        &:has([type="checkbox"]) {
            --switch-p: 0.25rem;
            --size: calc(var(--size-selector, 0.25rem) * 7);
        }
    }

    .zwfmq {

        &:is([type="checkbox"]),
        &:has([type="checkbox"]) {
            --switch-p: 0.1875rem;
            --size: calc(var(--size-selector, 0.25rem) * 6);
        }
    }

    .switch-sm {

        &:is([type="checkbox"]),
        &:has([type="checkbox"]) {
            --switch-p: 0.125rem;
            --size: calc(var(--size-selector, 0.25rem) * 5);
        }
    }

    .mnaz9 {

        &:is([type="checkbox"]),
        &:has([type="checkbox"]) {
            --switch-p: 0.3125rem;
            --size: calc(var(--size-selector, 0.25rem) * 8);
        }
    }

    .xerk2 {

        &:is([type="checkbox"]),
        &:has([type="checkbox"]) {
            --switch-p: 0.125rem;
            --size: calc(var(--size-selector, 0.25rem) * 4);
        }
    }

    .gig5s {
        > :where(li) {
            --timeline-col-start: 0.5rem;
            --timeline-row-start: minmax(0, 1fr);
        }
    }

    .pivaj {
        --tooltip-color: var(--color-accent);
        --tooltip-text-color: var(--color-accent-content);
    }

    .u8mf0 {
        --tooltip-color: var(--color-error);
        --tooltip-text-color: var(--color-error-content);
    }

    .ek45a {
        --tooltip-color: var(--color-info);
        --tooltip-text-color: var(--color-info-content);
    }

    .f53lx {
        --tooltip-color: var(--color-primary);
        --tooltip-text-color: var(--color-primary-content);
    }

    .b80wd {
        --tooltip-color: var(--color-secondary);
        --tooltip-text-color: var(--color-secondary-content);
    }

    .p64mq {
        --tooltip-color: var(--color-success);
        --tooltip-text-color: var(--color-success-content);
    }

    .vwkh8 {
        --tooltip-color: var(--color-warning);
        --tooltip-text-color: var(--color-warning-content);
    }

    .\[--adaptive\:none\] {
        --adaptive: none;
    }

    .\[--auto-close\:inside\] {
        --auto-close: inside;
    }

    .\[--auto-close\:lg\] {
        --auto-close: lg;
    }

    .\[--auto-close\:xl\] {
        --auto-close: xl;
    }

    .\[--btn-color\:\#24202D\] {
        --btn-color: #24202D;
    }

    .\[--btn-color\:\#fff\] {
        --btn-color: #fff;
    }

    .\[--btn-color\:var\(--color-base-100\)\] {
        --btn-color: var(--color-base-100);
    }

    .\[--btn-color\:var\(--color-base-200\)\] {
        --btn-color: var(--color-base-200);
    }

    .\[--btn-color\:white\] {
        --btn-color: white;
    }

    .\[--link-color\:var\(--color-base-content\)\] {
        --link-color: var(--color-base-content);
    }

    .\[--mega-menu\:true\] {
        --mega-menu: true;
    }

    .\[--offset\:5\] {
        --offset: 5;
    }

    .\[--offset\:15\] {
        --offset: 15;
    }

    .\[--offset\:21\] {
        --offset: 21;
    }

    .\[--offset\:24\] {
        --offset: 24;
    }

    .\[--placement\:bottom-end\] {
        --placement: bottom-end;
    }

    .\[--placement\:bottom\] {
        --placement: bottom;
    }

    .\[--placement\:left-start\] {
        --placement: left-start;
    }

    .\[--placement\:top\] {
        --placement: top;
    }

    .\[scrollbar-width\:thin\] {
        scrollbar-width: thin;
    }

    .cnv8p {
        --gradient-color: var(--color-accent);
    }

    .m3wkp {
        --gradient-color: var(--color-error);
    }

    .s7auz {
        --gradient-color: var(--color-info);
    }

    .rq1v3 {
        --gradient-color: var(--color-primary);
    }

    .du2dj {
        --gradient-color: var(--color-secondary);
    }

    .hf3om {
        --gradient-color: var(--color-success);
    }

    .crzos {
        --gradient-color: var(--color-warning);
    }

    .r0qqc {
        --link-color: var(--color-accent);
    }

    .ec2y2 {
        --link-color: var(--color-error);
    }

    .q9dwv {
        --link-color: var(--color-info);
    }

    .py185 {
        --link-color: var(--color-neutral);
    }

    .wjxe0 {
        --link-color: var(--color-primary);
    }

    .hb9cy {
        --link-color: var(--color-secondary);
    }

    .xk9uq {
        --link-color: var(--color-success);
    }

    .mlrxl {
        --link-color: var(--color-warning);
    }

    .cwegy {
        --motion-delay: 100ms;
    }

    .cwegy {
        --motion-delay: 100ms;
    }

    .cwegy {
        --motion-delay: 100ms;
    }

    .cwegy {
        --motion-delay: 100ms;
    }

    .cwegy {
        --motion-delay: 100ms;
    }

    .wje1v {
        --motion-delay: 300ms;
    }

    .wje1v {
        --motion-delay: 300ms;
    }

    .wje1v {
        --motion-delay: 300ms;
    }

    .wje1v {
        --motion-delay: 300ms;
    }

    .wje1v {
        --motion-delay: 300ms;
    }

    .gyko7 {
        --motion-delay: 600ms;
    }

    .gyko7 {
        --motion-delay: 600ms;
    }

    .gyko7 {
        --motion-delay: 600ms;
    }

    .gyko7 {
        --motion-delay: 600ms;
    }

    .gyko7 {
        --motion-delay: 600ms;
    }

    .r36hn {
        --motion-delay: 900ms;
    }

    .r36hn {
        --motion-delay: 900ms;
    }

    .r36hn {
        --motion-delay: 900ms;
    }

    .r36hn {
        --motion-delay: 900ms;
    }

    .r36hn {
        --motion-delay: 900ms;
    }

    .tlzdm {
        --motion-delay: 1200ms;
    }

    .tlzdm {
        --motion-delay: 1200ms;
    }

    .tlzdm {
        --motion-delay: 1200ms;
    }

    .tlzdm {
        --motion-delay: 1200ms;
    }

    .tlzdm {
        --motion-delay: 1200ms;
    }

    .urtjy {
        --motion-delay: 1500ms;
    }

    .urtjy {
        --motion-delay: 1500ms;
    }

    .urtjy {
        --motion-delay: 1500ms;
    }

    .urtjy {
        --motion-delay: 1500ms;
    }

    .urtjy {
        --motion-delay: 1500ms;
    }

    .m6dkd {
        --motion-delay: 1700ms;
    }

    .m6dkd {
        --motion-delay: 1700ms;
    }

    .m6dkd {
        --motion-delay: 1700ms;
    }

    .m6dkd {
        --motion-delay: 1700ms;
    }

    .m6dkd {
        --motion-delay: 1700ms;
    }

    .ksfhx {
        --motion-delay: 1900ms;
    }

    .ksfhx {
        --motion-delay: 1900ms;
    }

    .ksfhx {
        --motion-delay: 1900ms;
    }

    .ksfhx {
        --motion-delay: 1900ms;
    }

    .ksfhx {
        --motion-delay: 1900ms;
    }

    .gz4re {
        --motion-delay: 2000ms;
    }

    .gz4re {
        --motion-delay: 2000ms;
    }

    .gz4re {
        --motion-delay: 2000ms;
    }

    .gz4re {
        --motion-delay: 2000ms;
    }

    .gz4re {
        --motion-delay: 2000ms;
    }

    .y13ac {
        --motion-delay: 2100ms;
    }

    .y13ac {
        --motion-delay: 2100ms;
    }

    .y13ac {
        --motion-delay: 2100ms;
    }

    .y13ac {
        --motion-delay: 2100ms;
    }

    .y13ac {
        --motion-delay: 2100ms;
    }

    .srekv {
        --motion-delay: 2200ms;
    }

    .srekv {
        --motion-delay: 2200ms;
    }

    .srekv {
        --motion-delay: 2200ms;
    }

    .srekv {
        --motion-delay: 2200ms;
    }

    .srekv {
        --motion-delay: 2200ms;
    }

    .irhx7 {
        --motion-delay: 2300ms;
    }

    .irhx7 {
        --motion-delay: 2300ms;
    }

    .irhx7 {
        --motion-delay: 2300ms;
    }

    .irhx7 {
        --motion-delay: 2300ms;
    }

    .irhx7 {
        --motion-delay: 2300ms;
    }

    .fdfie {
        --motion-delay: 2400ms;
    }

    .fdfie {
        --motion-delay: 2400ms;
    }

    .fdfie {
        --motion-delay: 2400ms;
    }

    .fdfie {
        --motion-delay: 2400ms;
    }

    .fdfie {
        --motion-delay: 2400ms;
    }

    .bbit9 {
        --motion-delay: 2700ms;
    }

    .bbit9 {
        --motion-delay: 2700ms;
    }

    .bbit9 {
        --motion-delay: 2700ms;
    }

    .bbit9 {
        --motion-delay: 2700ms;
    }

    .bbit9 {
        --motion-delay: 2700ms;
    }

    .nuol8 {
        --motion-delay: 3000ms;
    }

    .nuol8 {
        --motion-delay: 3000ms;
    }

    .nuol8 {
        --motion-delay: 3000ms;
    }

    .nuol8 {
        --motion-delay: 3000ms;
    }

    .nuol8 {
        --motion-delay: 3000ms;
    }

    .jchp6 {
        --motion-delay: 3300ms;
    }

    .jchp6 {
        --motion-delay: 3300ms;
    }

    .jchp6 {
        --motion-delay: 3300ms;
    }

    .jchp6 {
        --motion-delay: 3300ms;
    }

    .jchp6 {
        --motion-delay: 3300ms;
    }

    .yy8rm {
        --motion-delay: 3600ms;
    }

    .yy8rm {
        --motion-delay: 3600ms;
    }

    .yy8rm {
        --motion-delay: 3600ms;
    }

    .yy8rm {
        --motion-delay: 3600ms;
    }

    .yy8rm {
        --motion-delay: 3600ms;
    }

    .gw5cs {
        --motion-delay: 3900ms;
    }

    .gw5cs {
        --motion-delay: 3900ms;
    }

    .gw5cs {
        --motion-delay: 3900ms;
    }

    .gw5cs {
        --motion-delay: 3900ms;
    }

    .gw5cs {
        --motion-delay: 3900ms;
    }

    .v53cv {
        --motion-duration: 800ms;
    }

    .v53cv {
        --motion-duration: 800ms;
    }

    .v53cv {
        --motion-duration: 800ms;
    }

    .v53cv {
        --motion-duration: 800ms;
    }

    .v53cv {
        --motion-duration: 800ms;
    }

    .sugke {
        --motion-duration: 1000ms;
    }

    .sugke {
        --motion-duration: 1000ms;
    }

    .sugke {
        --motion-duration: 1000ms;
    }

    .sugke {
        --motion-duration: 1000ms;
    }

    .sugke {
        --motion-duration: 1000ms;
    }

    .nud2p {
        --motion-duration: 1500ms;
    }

    .nud2p {
        --motion-duration: 1500ms;
    }

    .nud2p {
        --motion-duration: 1500ms;
    }

    .nud2p {
        --motion-duration: 1500ms;
    }

    .nud2p {
        --motion-duration: 1500ms;
    }

    .kz64p {
        --motion-duration: 3500ms;
    }

    .kz64p {
        --motion-duration: 3500ms;
    }

    .kz64p {
        --motion-duration: 3500ms;
    }

    .kz64p {
        --motion-duration: 3500ms;
    }

    .kz64p {
        --motion-duration: 3500ms;
    }

    .jwyqz {
        --input-color: var(--color-accent);
    }

    .gf5mf {
        --input-color: var(--color-error);
    }

    .p98m7 {
        --input-color: var(--color-info);
    }

    .n9629 {
        --input-color: var(--color-primary);
    }

    .scoq8 {
        --input-color: var(--color-secondary);
    }

    .nd9s8 {
        --input-color: var(--color-success);
    }

    .wkc77 {
        --input-color: var(--color-warning);
    }

    .ftdwl {
        --range-color: var(--color-accent);
    }

    .opw4q {
        --range-color: var(--color-error);
    }

    .b0cvr {
        --range-color: var(--color-info);
    }

    .t1ttb {
        --range-color: var(--color-primary);
    }

    .wx73c {
        --range-color: var(--color-secondary);
    }

    .enrcd {
        --range-color: var(--color-success);
    }

    .vvgi9 {
        --range-color: var(--color-warning);
    }

    .s6cuo {

        &:checked,
        &[aria-checked="true"] {
            --input-color: var(--color-accent);
        }
    }

    .abfzd {

        &:checked,
        &[aria-checked="true"] {
            --input-color: var(--color-error);
        }
    }

    .xg48p {

        &:checked,
        &[aria-checked="true"] {
            --input-color: var(--color-info);
        }
    }

    .switch-primary {

        &:checked,
        &[aria-checked="true"] {
            --input-color: var(--color-primary);
        }
    }

    .k069n {

        &:checked,
        &[aria-checked="true"] {
            --input-color: var(--color-secondary);
        }
    }

    .gwm8k {

        &:checked,
        &[aria-checked="true"] {
            --input-color: var(--color-success);
        }
    }

    .cwhkv {

        &:checked,
        &[aria-checked="true"] {
            --input-color: var(--color-warning);
        }
    }

    .\*\:flex {
        :is(& > *) {
            display: flex;
        }
    }

    .\*\:items-center {
        :is(& > *) {
            align-items: center;
        }
    }

    .\*\:items-start {
        :is(& > *) {
            align-items: flex-start;
        }
    }

    .\*\:gap-2 {
        :is(& > *) {
            gap: calc(var(--spacing) * 2);
        }
    }

    .\*\:gap-3 {
        :is(& > *) {
            gap: calc(var(--spacing) * 3);
        }
    }

    .\*\:rounded-box {
        :is(& > *) {
            border-radius: var(--radius-box);
        }
    }

    .\*\:rounded-box {
        :is(& > *) {
            border-radius: var(--radius-box);
        }
    }

    .\*\:rounded-none {
        :is(& > *) {
            border-radius: 0;
        }
    }

    .\*\:p-1 {
        :is(& > *) {
            padding: calc(var(--spacing) * 1);
        }
    }

    .\*\:p-3 {
        :is(& > *) {
            padding: calc(var(--spacing) * 3);
        }
    }

    .\*\:py-1 {
        :is(& > *) {
            padding-block: calc(var(--spacing) * 1);
        }
    }

    .\*\:font-normal {
        :is(& > *) {
            --tw-font-weight: var(--font-weight-normal);
            font-weight: var(--font-weight-normal);
        }
    }

    .\*\:text-nowrap {
        :is(& > *) {
            text-wrap: nowrap;
        }
    }

    .\*\:text-base-content {
        :is(& > *) {
            color: var(--color-base-content);
        }
    }

    .\*\:text-white {
        :is(& > *) {
            color: var(--color-white);
        }
    }

    .\*\:not-last\:border-base-content\/25 {
        :is(& > *) {
            &:not(*:last-child) {
                border-color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
                }
            }
        }
    }

    .group-last\:hidden {
        &:is(:where(.group):last-child *) {
            display: none;
        }
    }

    .group-hover\:-translate-x-1 {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                --tw-translate-x: calc(var(--spacing) * -1);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .group-hover\:motion-preset-focus {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                --motion-origin-blur: 5px;
                --motion-origin-opacity: 0;
                --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
                --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
                animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
            }
        }
    }

    .group-hover\:motion-preset-focus {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                --motion-origin-blur: 5px;
                --motion-origin-opacity: 0;
                --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
                --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
                animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
            }
        }
    }

    .group-hover\:motion-preset-focus {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                --motion-origin-blur: 5px;
                --motion-origin-opacity: 0;
                --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
                --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
                animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
            }
        }
    }

    .group-hover\:motion-preset-focus {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                --motion-origin-blur: 5px;
                --motion-origin-opacity: 0;
                --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
                --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
                animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
            }
        }
    }

    .group-hover\:motion-preset-focus {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                --motion-origin-blur: 5px;
                --motion-origin-opacity: 0;
                --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
                --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
                animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
            }
        }
    }

    .group-hover\:animate-spin {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                animation: var(--animate-spin);
            }
        }
    }

    .group-hover\:bg-primary\/20 {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                background-color: var(--color-primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
                }
            }
        }
    }

    .group-hover\:text-primary {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                color: var(--color-primary);
            }
        }
    }

    .group-hover\:text-white {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                color: var(--color-white);
            }
        }
    }

    .group-hover\:opacity-0 {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                opacity: 0%;
            }
        }
    }

    .group-hover\:opacity-100 {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                opacity: 100%;
            }
        }
    }

    .group-has-checked\:text-bg-primary {
        &:is(:where(.group):has(*:checked) *) {
            background-color: var(--color-primary);
            color: var(--color-primary-content);
        }
    }

    .group-has-checked\:text-primary {
        &:is(:where(.group):has(*:checked) *) {
            color: var(--color-primary);
        }
    }

    .group-has-\[\.menu-active\]\:bg-neutral\/10 {
        &:is(:where(.group):has(*:is(.w0v1k)) *) {
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }
        }
    }

    .group-\[\.dropdown-active\]\:block {
        &:is(:where(.group):is(.dropdown-active) *) {
            display: block;
        }
    }

    .group-\[\.theme-active\]\:block {
        &:is(:where(.group):is(.theme-active) *) {
            display: block;
        }
    }

    .group-\[\.theme-active\]\:hidden {
        &:is(:where(.group):is(.theme-active) *) {
            display: none;
        }
    }

    .group-\[\.theme-active\]\:text-primary {
        &:is(:where(.group):is(.theme-active) *) {
            color: var(--color-primary);
        }
    }

    .group-\[\.update-customizer\]\:block {
        &:is(:where(.group):is(.update-customizer) *) {
            display: block;
        }
    }

    .placeholder\:text-sm {
        &::placeholder {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    .placeholder\:text-black\/50 {
        &::placeholder {
            color: color-mix(in srgb, #000 50%, transparent);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-black) 50%, transparent);
            }
        }
    }

    .placeholder\:text-black\/60 {
        &::placeholder {
            color: color-mix(in srgb, #000 60%, transparent);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-black) 60%, transparent);
            }
        }
    }

    .before\:absolute {
        &::before {
            content: var(--tw-content);
            position: absolute;
        }
    }

    .before\:inset-0 {
        &::before {
            content: var(--tw-content);
            inset: calc(var(--spacing) * 0);
        }
    }

    .before\:-start-3 {
        &::before {
            content: var(--tw-content);
            inset-inline-start: calc(var(--spacing) * -3);
        }
    }

    .before\:start-0 {
        &::before {
            content: var(--tw-content);
            inset-inline-start: calc(var(--spacing) * 0);
        }
    }

    .before\:top-1\/2 {
        &::before {
            content: var(--tw-content);
            top: calc(1/2 * 100%);
        }
    }

    .before\:top-3 {
        &::before {
            content: var(--tw-content);
            top: calc(var(--spacing) * 3);
        }
    }

    .before\:mb-2 {
        &::before {
            content: var(--tw-content);
            margin-bottom: calc(var(--spacing) * 2);
        }
    }

    .before\:block {
        &::before {
            content: var(--tw-content);
            display: block;
        }
    }

    .before\:hidden {
        &::before {
            content: var(--tw-content);
            display: none;
        }
    }

    .before\:h-0\.5 {
        &::before {
            content: var(--tw-content);
            height: calc(var(--spacing) * 0.5);
        }
    }

    .before\:w-2\.5 {
        &::before {
            content: var(--tw-content);
            width: calc(var(--spacing) * 2.5);
        }
    }

    .before\:w-px {
        &::before {
            content: var(--tw-content);
            width: 1px;
        }
    }

    .before\:border-white {
        &::before {
            content: var(--tw-content);
            border-color: var(--color-white);
        }
    }

    .before\:bg-base-content\/20 {
        &::before {
            content: var(--tw-content);
            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
            }
        }
    }

    .before\:bg-gradient-to-l {
        &::before {
            content: var(--tw-content);
            --tw-gradient-position: to left in oklab;
            background-image: linear-gradient(var(--tw-gradient-stops));
        }
    }

    .before\:bg-gradient-to-r {
        &::before {
            content: var(--tw-content);
            --tw-gradient-position: to right in oklab;
            background-image: linear-gradient(var(--tw-gradient-stops));
        }
    }

    .before\:from-base-100\/0 {
        &::before {
            content: var(--tw-content);
            --tw-gradient-from: var(--color-base-100);

            @supports (color: color-mix(in lab, red, red)) {
                --tw-gradient-from: color-mix(in oklab, var(--color-base-100) 0%, transparent);
            }

            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
    }

    .before\:from-80\% {
        &::before {
            content: var(--tw-content);
            --tw-gradient-from-position: 80%;
        }
    }

    .before\:to-base-100 {
        &::before {
            content: var(--tw-content);
            --tw-gradient-to: var(--color-base-100);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
    }

    .before\:opacity-90 {
        &::before {
            content: var(--tw-content);
            opacity: 90%;
        }
    }

    .after\:border-white {
        &::after {
            content: var(--tw-content);
            border-color: var(--color-white);
        }
    }

    .\*\:first\:rounded-t-md {
        :is(& > *) {
            &:first-child {
                border-top-left-radius: var(--radius-md);
                border-top-right-radius: var(--radius-md);
            }
        }
    }

    .\*\:last\:rounded-b-md {
        :is(& > *) {
            &:last-child {
                border-bottom-right-radius: var(--radius-md);
                border-bottom-left-radius: var(--radius-md);
            }
        }
    }

    .empty\:m-0 {
        &:empty {
            margin: calc(var(--spacing) * 0);
        }
    }

    .empty\:my-0 {
        &:empty {
            margin-block: calc(var(--spacing) * 0);
        }
    }

    .empty\:mt-0 {
        &:empty {
            margin-top: calc(var(--spacing) * 0);
        }
    }

    .focus-within\:bg-base-200 {
        &:focus-within {
            background-color: var(--color-base-200);
        }
    }

    .focus-within\:outline-0 {
        &:focus-within {
            outline-style: var(--tw-outline-style);
            outline-width: 0px;
        }
    }

    .hover\:-translate-y-1 {
        &:hover {
            @media (hover: hover) {
                --tw-translate-y: calc(var(--spacing) * -1);
                translate: var(--tw-translate-x) var(--tw-translate-y);
            }
        }
    }

    .hover\:cursor-grab {
        &:hover {
            @media (hover: hover) {
                cursor: grab;
            }
        }
    }

    .hover\:border-base-content\/20 {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
                }
            }
        }
    }

    .hover\:border-info {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-info);
            }
        }
    }

    .hover\:border-primary {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-primary);
            }
        }
    }

    .hover\:border-primary\/30 {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-primary);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
                }
            }
        }
    }

    .hover\:border-warning {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-warning);
            }
        }
    }

    .hover\:text-bg-soft-primary {
        &:hover {
            @media (hover: hover) {
                color: var(--color-primary);
                background-color: var(--color-primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
                }
            }
        }
    }

    .hover\:bg-base-100 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-base-100);
            }
        }
    }

    .hover\:bg-base-200 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-base-200);
            }
        }
    }

    .hover\:bg-primary {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-primary);
            }
        }
    }

    .hover\:bg-primary\/20 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-primary);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
                }
            }
        }
    }

    .hover\:bg-transparent {
        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .hover\:bg-white {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-white);
            }
        }
    }

    .hover\:text-blue-600 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-blue-600);
            }
        }
    }

    .hover\:text-blue-800 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-blue-800);
            }
        }
    }

    .hover\:text-primary {
        &:hover {
            @media (hover: hover) {
                color: var(--color-primary);
            }
        }
    }

    .hover\:text-primary-content {
        &:hover {
            @media (hover: hover) {
                color: var(--color-primary-content);
            }
        }
    }

    .hover\:text-white {
        &:hover {
            @media (hover: hover) {
                color: var(--color-white);
            }
        }
    }

    .hover\:text-white\/70 {
        &:hover {
            @media (hover: hover) {
                color: color-mix(in srgb, #fff 70%, transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    color: color-mix(in oklab, var(--color-white) 70%, transparent);
                }
            }
        }
    }

    .hover\:shadow-md {
        &:hover {
            @media (hover: hover) {
                --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }
        }
    }

    .hover\:ring {
        &:hover {
            @media (hover: hover) {
                --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }
        }
    }

    .hover\:ring-2 {
        &:hover {
            @media (hover: hover) {
                --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }
        }
    }

    .hover\:ring-accent\/30 {
        &:hover {
            @media (hover: hover) {
                --tw-ring-color: var(--color-accent);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab, var(--color-accent) 30%, transparent);
                }
            }
        }
    }

    .hover\:ring-primary {
        &:hover {
            @media (hover: hover) {
                --tw-ring-color: var(--color-primary);
            }
        }
    }

    .hover\:ring-primary\/30 {
        &:hover {
            @media (hover: hover) {
                --tw-ring-color: var(--color-primary);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
                }
            }
        }
    }

    .hover\:ring-success\/30 {
        &:hover {
            @media (hover: hover) {
                --tw-ring-color: var(--color-success);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab, var(--color-success) 30%, transparent);
                }
            }
        }
    }

    .hover\:ring-warning\/30 {
        &:hover {
            @media (hover: hover) {
                --tw-ring-color: var(--color-warning);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-ring-color: color-mix(in oklab, var(--color-warning) 30%, transparent);
                }
            }
        }
    }

    .\*\:hover\:bg-neutral\/10 {
        :is(& > *) {
            &:hover {
                @media (hover: hover) {
                    background-color: var(--color-neutral);

                    @supports (color: color-mix(in lab, red, red)) {
                        background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
                    }
                }
            }
        }
    }

    .\*\:hover\:bg-linear-to-b {
        :is(& > *) {
            &:hover {
                @media (hover: hover) {
                    --tw-gradient-position: to bottom;

                    @supports (background-image: linear-gradient(in lab, red, red)) {
                        --tw-gradient-position: to bottom in oklab;
                    }

                    background-image: linear-gradient(var(--tw-gradient-stops));
                }
            }
        }
    }

    .\*\:hover\:from-purple-300 {
        :is(& > *) {
            &:hover {
                @media (hover: hover) {
                    --tw-gradient-from: var(--color-purple-300);
                    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
                }
            }
        }
    }

    .\*\:hover\:to-primary {
        :is(& > *) {
            &:hover {
                @media (hover: hover) {
                    --tw-gradient-to: var(--color-primary);
                    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
                }
            }
        }
    }

    .\*\:hover\:bg-clip-text {
        :is(& > *) {
            &:hover {
                @media (hover: hover) {
                    background-clip: text;
                }
            }
        }
    }

    .\*\:hover\:text-primary {
        :is(& > *) {
            &:hover {
                @media (hover: hover) {
                    color: var(--color-primary);
                }
            }
        }
    }

    .\*\:hover\:text-transparent {
        :is(& > *) {
            &:hover {
                @media (hover: hover) {
                    color: transparent;
                }
            }
        }
    }

    .focus\:border-primary {
        &:focus {
            border-color: var(--color-primary);
        }
    }

    .focus\:text-bg-soft-primary {
        &:focus {
            color: var(--color-primary);
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
            }
        }
    }

    .focus\:text-blue-600 {
        &:focus {
            color: var(--color-blue-600);
        }
    }

    .focus\:outline-hidden {
        &:focus {
            --tw-outline-style: none;
            outline-style: none;

            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }

    .focus\:outline-1 {
        &:focus {
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
        }
    }

    .focus\:outline-primary {
        &:focus {
            outline-color: var(--color-primary);
        }
    }

    .focus\:outline-none {
        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .active\:cursor-grabbing {
        &:active {
            cursor: grabbing;
        }
    }

    .active\:ring-\[3px\] {
        &:active {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .\*\:active\:text-primary {
        :is(& > *) {
            &:active {
                color: var(--color-primary);
            }
        }
    }

    .hover\:active\:scale-97 {
        &:hover {
            @media (hover: hover) {
                &:active {
                    --tw-scale-x: 97%;
                    --tw-scale-y: 97%;
                    --tw-scale-z: 97%;
                    scale: var(--tw-scale-x) var(--tw-scale-y);
                }
            }
        }
    }

    .has-checked\:text-primary {
        &:has(*:checked) {
            color: var(--color-primary);
        }
    }

    .supports-\[backdrop-filter\]\:bg-base-200\/60 {
        @supports (backdrop-filter: var(--tw)) {
            background-color: var(--color-base-200);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-200) 60%, transparent);
            }
        }
    }

    .motion-reduce\:animate-none {
        @media (prefers-reduced-motion: reduce) {
            animation: none;
        }
    }

    .max-\[1600px\]\:-start-1 {
        @media (width < 1600px) {
            inset-inline-start: calc(var(--spacing) * -1);
        }
    }

    .max-\[1600px\]\:-start-7 {
        @media (width < 1600px) {
            inset-inline-start: calc(var(--spacing) * -7);
        }
    }

    .max-\[1600px\]\:start-2\/5 {
        @media (width < 1600px) {
            inset-inline-start: calc(2/5 * 100%);
        }
    }

    .max-\[1600px\]\:start-7 {
        @media (width < 1600px) {
            inset-inline-start: calc(var(--spacing) * 7);
        }
    }

    .max-\[1600px\]\:start-8 {
        @media (width < 1600px) {
            inset-inline-start: calc(var(--spacing) * 8);
        }
    }

    .max-\[1600px\]\:start-12 {
        @media (width < 1600px) {
            inset-inline-start: calc(var(--spacing) * 12);
        }
    }

    .max-\[1600px\]\:start-16 {
        @media (width < 1600px) {
            inset-inline-start: calc(var(--spacing) * 16);
        }
    }

    .max-\[1600px\]\:start-\[15\%\] {
        @media (width < 1600px) {
            inset-inline-start: 15%;
        }
    }

    .max-\[1600px\]\:start-\[25\%\] {
        @media (width < 1600px) {
            inset-inline-start: 25%;
        }
    }

    .max-\[1600px\]\:-end-1\/3 {
        @media (width < 1600px) {
            inset-inline-end: calc(calc(1/3 * 100%) * -1);
        }
    }

    .max-\[1600px\]\:-end-10 {
        @media (width < 1600px) {
            inset-inline-end: calc(var(--spacing) * -10);
        }
    }

    .max-\[1600px\]\:-end-18 {
        @media (width < 1600px) {
            inset-inline-end: calc(var(--spacing) * -18);
        }
    }

    .max-\[1600px\]\:-end-20 {
        @media (width < 1600px) {
            inset-inline-end: calc(var(--spacing) * -20);
        }
    }

    .max-\[1600px\]\:-end-25 {
        @media (width < 1600px) {
            inset-inline-end: calc(var(--spacing) * -25);
        }
    }

    .max-\[1600px\]\:-top-5\/7 {
        @media (width < 1600px) {
            top: calc(calc(5/7 * 100%) * -1);
        }
    }

    .max-\[1600px\]\:-top-17 {
        @media (width < 1600px) {
            top: calc(var(--spacing) * -17);
        }
    }

    .max-\[1600px\]\:-top-\[8\%\] {
        @media (width < 1600px) {
            top: calc(8% * -1);
        }
    }

    .max-\[1600px\]\:-top-\[12\%\] {
        @media (width < 1600px) {
            top: calc(12% * -1);
        }
    }

    .max-\[1600px\]\:-top-\[23\%\] {
        @media (width < 1600px) {
            top: calc(23% * -1);
        }
    }

    .max-\[1600px\]\:-top-\[36\%\] {
        @media (width < 1600px) {
            top: calc(36% * -1);
        }
    }

    .max-\[1600px\]\:-bottom-1 {
        @media (width < 1600px) {
            bottom: calc(var(--spacing) * -1);
        }
    }

    .max-\[1600px\]\:-bottom-3 {
        @media (width < 1600px) {
            bottom: calc(var(--spacing) * -3);
        }
    }

    .max-\[1600px\]\:-bottom-5 {
        @media (width < 1600px) {
            bottom: calc(var(--spacing) * -5);
        }
    }

    .max-\[1600px\]\:-bottom-8 {
        @media (width < 1600px) {
            bottom: calc(var(--spacing) * -8);
        }
    }

    .max-\[1600px\]\:bottom-0 {
        @media (width < 1600px) {
            bottom: calc(var(--spacing) * 0);
        }
    }

    .max-\[1600px\]\:bottom-9 {
        @media (width < 1600px) {
            bottom: calc(var(--spacing) * 9);
        }
    }

    .max-\[1600px\]\:bottom-15 {
        @media (width < 1600px) {
            bottom: calc(var(--spacing) * 15);
        }
    }

    .max-\[1600px\]\:mt-30 {
        @media (width < 1600px) {
            margin-top: calc(var(--spacing) * 30);
        }
    }

    .max-\[1600px\]\:h-170 {
        @media (width < 1600px) {
            height: calc(var(--spacing) * 170);
        }
    }

    .max-\[1600px\]\:w-160 {
        @media (width < 1600px) {
            width: calc(var(--spacing) * 160);
        }
    }

    .max-2xl\:hidden {
        @media (width < 96rem) {
            display: none;
        }
    }

    .max-xl\:order-2 {
        @media (width < 80rem) {
            order: 2;
        }
    }

    .max-xl\:hidden {
        @media (width < 80rem) {
            display: none;
        }
    }

    .max-xl\:flex-col {
        @media (width < 80rem) {
            flex-direction: column;
        }
    }

    .max-lg\:left-4 {
        @media (width < 64rem) {
            left: calc(var(--spacing) * 4);
        }
    }

    .max-lg\:ms-4 {
        @media (width < 64rem) {
            margin-inline-start: calc(var(--spacing) * 4);
        }
    }

    .max-lg\:-mt-2 {
        @media (width < 64rem) {
            margin-top: calc(var(--spacing) * -2);
        }
    }

    .max-lg\:mt-1 {
        @media (width < 64rem) {
            margin-top: calc(var(--spacing) * 1);
        }
    }

    .max-lg\:mt-4 {
        @media (width < 64rem) {
            margin-top: calc(var(--spacing) * 4);
        }
    }

    .max-lg\:hidden {
        @media (width < 64rem) {
            display: none;
        }
    }

    .max-lg\:w-full {
        @media (width < 64rem) {
            width: 100%;
        }
    }

    .max-lg\:stats-vertical {
        @media (width < 64rem) {
            grid-auto-flow: row;

            :where(& > :not(:last-child)) {
                --tw-divide-x-reverse: 0;
                border-inline-style: var(--tw-border-style);
                border-inline-start-width: calc(0px * var(--tw-divide-x-reverse));
                border-inline-end-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));
                --tw-divide-y-reverse: 0;
                border-bottom-style: var(--tw-border-style);
                border-top-style: var(--tw-border-style);
                border-top-width: calc(1px * var(--tw-divide-y-reverse));
                border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
            }

            overflow-y: auto;
        }
    }

    .max-lg\:grid-cols-1 {
        @media (width < 64rem) {
            grid-template-columns: repeat(1, minmax(0, 1fr));
        }
    }

    .max-lg\:flex-col {
        @media (width < 64rem) {
            flex-direction: column;
        }
    }

    .max-lg\:flex-wrap {
        @media (width < 64rem) {
            flex-wrap: wrap;
        }
    }

    .max-lg\:items-start {
        @media (width < 64rem) {
            align-items: flex-start;
        }
    }

    .max-lg\:space-y-6 {
        @media (width < 64rem) {
            :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
                margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
            }
        }
    }

    .max-lg\:overflow-hidden {
        @media (width < 64rem) {
            overflow: hidden;
        }
    }

    .max-lg\:p-0 {
        @media (width < 64rem) {
            padding: calc(var(--spacing) * 0);
        }
    }

    .max-lg\:ps-2 {
        @media (width < 64rem) {
            padding-inline-start: calc(var(--spacing) * 2);
        }
    }

    .max-lg\:text-center {
        @media (width < 64rem) {
            text-align: center;
        }
    }

    .max-lg\:shadow-none {
        @media (width < 64rem) {
            --tw-shadow: 0 0 #0000;
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .max-lg\:duration-100 {
        @media (width < 64rem) {
            --tw-duration: 100ms;
            transition-duration: 100ms;
        }
    }

    .max-lg\:\[--strategy\:static\] {
        @media (width < 64rem) {
            --strategy: static;
        }
    }

    .max-lg\:before\:bottom-3 {
        @media (width < 64rem) {
            &::before {
                content: var(--tw-content);
                bottom: calc(var(--spacing) * 3);
            }
        }
    }

    .max-lg\:before\:bg-base-content\/10 {
        @media (width < 64rem) {
            &::before {
                content: var(--tw-content);
                background-color: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
                }
            }
        }
    }

    .max-md\:my-1 {
        @media (width < 48rem) {
            margin-block: calc(var(--spacing) * 1);
        }
    }

    .max-md\:my-4 {
        @media (width < 48rem) {
            margin-block: calc(var(--spacing) * 4);
        }
    }

    .max-md\:mt-4 {
        @media (width < 48rem) {
            margin-top: calc(var(--spacing) * 4);
        }
    }

    .max-md\:mt-6 {
        @media (width < 48rem) {
            margin-top: calc(var(--spacing) * 6);
        }
    }

    .max-md\:mt-20 {
        @media (width < 48rem) {
            margin-top: calc(var(--spacing) * 20);
        }
    }

    .max-md\:hidden {
        @media (width < 48rem) {
            display: none;
        }
    }

    .max-md\:btn-block {
        @media (width < 48rem) {
            width: 100%;
        }
    }

    .max-md\:w-full {
        @media (width < 48rem) {
            width: 100%;
        }
    }

    .max-md\:flex-col {
        @media (width < 48rem) {
            flex-direction: column;
        }
    }

    .max-md\:flex-col-reverse {
        @media (width < 48rem) {
            flex-direction: column-reverse;
        }
    }

    .max-md\:flex-wrap {
        @media (width < 48rem) {
            flex-wrap: wrap;
        }
    }

    .max-md\:justify-center {
        @media (width < 48rem) {
            justify-content: center;
        }
    }

    .max-md\:gap-10 {
        @media (width < 48rem) {
            gap: calc(var(--spacing) * 10);
        }
    }

    .max-md\:gap-x-6 {
        @media (width < 48rem) {
            column-gap: calc(var(--spacing) * 6);
        }
    }

    .max-md\:divide-y {
        @media (width < 48rem) {
            :where(& > :not(:last-child)) {
                --tw-divide-y-reverse: 0;
                border-bottom-style: var(--tw-border-style);
                border-top-style: var(--tw-border-style);
                border-top-width: calc(1px * var(--tw-divide-y-reverse));
                border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
            }
        }
    }

    .max-md\:border-b {
        @media (width < 48rem) {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px;
        }
    }

    .max-md\:bg-base-100 {
        @media (width < 48rem) {
            background-color: var(--color-base-100);
        }
    }

    .max-md\:px-0 {
        @media (width < 48rem) {
            padding-inline: calc(var(--spacing) * 0);
        }
    }

    .max-md\:px-8 {
        @media (width < 48rem) {
            padding-inline: calc(var(--spacing) * 8);
        }
    }

    .max-md\:text-center {
        @media (width < 48rem) {
            text-align: center;
        }
    }

    .max-md\:text-2xl {
        @media (width < 48rem) {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
    }

    .max-md\:text-3xl {
        @media (width < 48rem) {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
    }

    .max-md\:text-5xl {
        @media (width < 48rem) {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }
    }

    .max-md\:\*\:not-last\:border-b {
        @media (width < 48rem) {
            :is(& > *) {
                &:not(*:last-child) {
                    border-bottom-style: var(--tw-border-style);
                    border-bottom-width: 1px;
                }
            }
        }
    }

    .max-sm\:btn {
        @media (width < 40rem) {
            display: inline-flex;
            flex-shrink: 0;
            cursor: pointer;
            flex-wrap: nowrap;
            align-items: center;
            justify-content: center;
            gap: calc(0.25rem * 2);
            text-align: center;
            vertical-align: middle;
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            --tw-font-weight: var(--font-weight-medium);
            font-weight: var(--font-weight-medium);
            text-decoration-line: none;
            webkit-user-select: none;
            user-select: none;

            @media (prefers-reduced-motion: reduce) {
                transition-property: none;
            }

            padding-inline: var(--btn-p);
            color: var(--btn-fg);
            height: var(--size);
            outline-color: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                outline-color: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 30%, var(--color-base-100));
            }

            transition-property: color,
            background-color,
            border-color,
            box-shadow;
            transition-timing-function: cubic-bezier(0, 0, 0.96, 1.03);
            transition-duration: 0.25s;
            border-start-start-radius: var(--join-ss, var(--radius-field));
            border-start-end-radius: var(--join-se, var(--radius-field));
            border-end-start-radius: var(--join-es, var(--radius-field));
            border-end-end-radius: var(--join-ee, var(--radius-field));
            background-color: var(--btn-bg);
            background-size: auto,
            calc(var(--noise) * 100%);
            background-image: none,
            var(--btn-noise);
            border: var(--border) solid var(--btn-border);
            box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 8%)) inset,
            var(--btn-shadow);
            --size: calc(var(--size-field, 0.25rem) * 9.5);
            --btn-bg: var(--btn-color, var(--color-neutral));
            --btn-fg: var(--color-neutral-content);
            --btn-p: 1rem;
            --btn-border: var(--btn-bg);

            @supports (color: color-mix(in lab, red, red)) {
                --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
            }

            --btn-shadow: 0px 1px 3px 0px var(--color-base-300),
            0px 1px 2px -1px var(--color-base-300);

            @supports (color: color-mix(in lab, red, red)) {
                --btn-shadow: 0px 1px 3px 0px color-mix(in oklab, var(--color-base-300) 40%, #0000),
                    0px 1px 2px -1px color-mix(in oklab, var(--color-base-300) 40%, #0000);
            }

            --btn-noise: var(--fx-noise);

            @media (hover: hover) {
                &:hover {
                    --btn-bg: var(--btn-color, var(--color-neutral));

                    @supports (color: color-mix(in lab, red, red)) {
                        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 90%, #000);
                    }
                }
            }

            &:active:hover:not(.gmf3v),
            &:active:focus:not(.gmf3v) {
                --tw-scale-x: 95%;
                --tw-scale-y: 95%;
                --tw-scale-z: 95%;
                scale: var(--tw-scale-x) var(--tw-scale-y);
                transition-property: transform, translate, scale, rotate;
                transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
                transition-timing-function: ease-out;
                transition-duration: var(--tw-duration, var(--default-transition-duration));
                transition-duration: 300ms;
                --tw-duration: 300ms;
            }

            &:focus-visible {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)), #000 10%);
                }

                outline-width: 2px;
                outline-style: solid;
            }

            &:is(:disabled, [disabled], .iidbg) {
                pointer-events: none;
                opacity: 50%;
                --tw-shadow: 0 0 #0000;
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }

            &:is(input[type="checkbox"], input[type="radio"]) {
                appearance: none;

                &::after {
                    content: attr(aria-label);
                }

                &:checked {
                    background: var(--color-primary);
                    color: var(--color-primary-content);
                    outline-color: var(--color-primary);
                    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
                    isolation: isolate;
                }
            }
        }
    }

    .max-sm\:top-32 {
        @media (width < 40rem) {
            top: calc(var(--spacing) * 32);
        }
    }

    .max-sm\:-bottom-7 {
        @media (width < 40rem) {
            bottom: calc(var(--spacing) * -7);
        }
    }

    .max-sm\:-bottom-18 {
        @media (width < 40rem) {
            bottom: calc(var(--spacing) * -18);
        }
    }

    .max-sm\:timeline-compact {
        @media (width < 40rem) {

            &,
            &.obe7e {
                --timeline-row-start: 0;

                .rlhl2 {
                    grid-column-start: 1;
                    grid-column-end: 4;
                    grid-row-start: 3;
                    grid-row-end: 4;
                    margin: calc(0.25rem * 2);
                    align-self: flex-start;
                    justify-self: center;
                }

                li:has(.rlhl2) {
                    .efh7m {
                        grid-column-start: none;
                        grid-row-start: auto;
                    }
                }
            }

            &.ck9cm {
                >li {
                    --timeline-col-start: 0;
                }

                .rlhl2 {
                    grid-column-start: 3;
                    grid-column-end: 4;
                    grid-row-start: 1;
                    grid-row-end: 4;
                    align-self: center;
                    justify-self: flex-start;
                }

                li:has(.rlhl2) {
                    .efh7m {
                        grid-column-start: auto;
                        grid-row-start: none;
                    }
                }

                .nxvn2 {
                    .rlhl2 {
                        grid-column-start: 3;
                        grid-column-end: 4;
                        grid-row-start: 3;
                    }

                    .efh7m {
                        grid-column-start: 3;
                        grid-column-end: 4;
                        grid-row-start: 1;
                        grid-row-end: 2;
                    }
                }
            }
        }
    }

    .max-sm\:m-5 {
        @media (width < 40rem) {
            margin: calc(var(--spacing) * 5);
        }
    }

    .max-sm\:hidden {
        @media (width < 40rem) {
            display: none;
        }
    }

    .max-sm\:btn-square {
        @media (width < 40rem) {
            padding-inline: calc(0.25rem * 0);
            width: var(--size);
            height: var(--size);
        }
    }

    .max-sm\:h-25 {
        @media (width < 40rem) {
            height: calc(var(--spacing) * 25);
        }
    }

    .max-sm\:h-90 {
        @media (width < 40rem) {
            height: calc(var(--spacing) * 90);
        }
    }

    .max-sm\:w-full {
        @media (width < 40rem) {
            width: 100%;
        }
    }

    .max-sm\:flex-col {
        @media (width < 40rem) {
            flex-direction: column;
        }
    }

    .max-sm\:flex-col-reverse {
        @media (width < 40rem) {
            flex-direction: column-reverse;
        }
    }

    .max-sm\:flex-wrap {
        @media (width < 40rem) {
            flex-wrap: wrap;
        }
    }

    .max-sm\:items-center {
        @media (width < 40rem) {
            align-items: center;
        }
    }

    .max-sm\:btn-text {
        @media (width < 40rem) {
            --btn-shadow: "";
            color: var(--btn-color, var(--color-neutral));
            --btn-bg: "";
            --btn-border: "";
            --btn-noise: none;
            border-width: 0;
            outline-color: var(--btn-color, var(--color-neutral));

            @media (hover: hover) {
                &:hover {
                    --btn-bg: var(--btn-color, var(--color-neutral));

                    @supports (color: color-mix(in lab, red, red)) {
                        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                    }
                }
            }

            &:focus-visible {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }
            }

            &.gmf3v {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }
            }
        }
    }

    .max-sm\:border-b-4 {
        @media (width < 40rem) {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 4px;
        }
    }

    .max-sm\:bg-base-100 {
        @media (width < 40rem) {
            background-color: var(--color-base-100);
        }
    }

    .max-sm\:p-10 {
        @media (width < 40rem) {
            padding: calc(var(--spacing) * 10);
        }
    }

    .max-sm\:px-10 {
        @media (width < 40rem) {
            padding-inline: calc(var(--spacing) * 10);
        }
    }

    .max-sm\:pt-10 {
        @media (width < 40rem) {
            padding-top: calc(var(--spacing) * 10);
        }
    }

    .max-sm\:pb-15 {
        @media (width < 40rem) {
            padding-bottom: calc(var(--spacing) * 15);
        }
    }

    .max-sm\:text-center {
        @media (width < 40rem) {
            text-align: center;
        }
    }

    .max-sm\:btn-sm {
        @media (width < 40rem) {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            --btn-p: 0.75rem;
            --size: calc(var(--size-field, 0.25rem) * 7.5);
        }
    }

    .sm\:col-span-2 {
        @media (width >=40rem) {
            grid-column: span 2 / span 2;
        }
    }

    .sm\:col-span-4 {
        @media (width >=40rem) {
            grid-column: span 4 / span 4;
        }
    }

    .sm\:timeline-horizontal {
        @media (width >=40rem) {
            flex-direction: row;

            >li {
                align-items: center;

                >hr {
                    height: 1.5px;
                    min-height: calc(0.25rem * 0);
                    width: 100%;

                    &:first-child {
                        grid-column-start: 1;
                        grid-row-start: 2;
                    }

                    &:last-child {
                        grid-column-start: 3;
                        grid-column-end: none;
                        grid-row-start: 2;
                        grid-row-end: auto;
                    }
                }
            }

            .rlhl2 {
                grid-column-start: 1;
                grid-column-end: 4;
                grid-row-start: 1;
                grid-row-end: 2;
                align-self: flex-end;
                justify-self: center;
            }

            .efh7m {
                grid-column-start: 1;
                grid-column-end: 4;
                grid-row-start: 3;
                grid-row-end: 4;
                align-self: flex-start;
                justify-self: center;
            }

            &:has(.a81ch) {
                >li {
                    >hr {
                        &:first-child {
                            border-start-start-radius: 0;
                            border-end-start-radius: 0;
                            border-start-end-radius: var(--radius-selector);
                            border-end-end-radius: var(--radius-selector);
                        }

                        &:last-child {
                            border-start-start-radius: var(--radius-selector);
                            border-end-start-radius: var(--radius-selector);
                            border-start-end-radius: 0;
                            border-end-end-radius: 0;
                        }
                    }
                }
            }

            &:not(:has(.a81ch)) {
                :first-child {
                    >hr:last-child {
                        border-start-start-radius: var(--radius-selector);
                        border-end-start-radius: var(--radius-selector);
                        border-start-end-radius: 0;
                        border-end-end-radius: 0;
                    }
                }

                :last-child {
                    >hr:first-child {
                        border-start-start-radius: 0;
                        border-end-start-radius: 0;
                        border-start-end-radius: var(--radius-selector);
                        border-end-end-radius: var(--radius-selector);
                    }
                }
            }
        }
    }

    .sm\:me-auto {
        @media (width >=40rem) {
            margin-inline-end: auto;
        }
    }

    .sm\:mt-16 {
        @media (width >=40rem) {
            margin-top: calc(var(--spacing) * 16);
        }
    }

    .sm\:mb-0 {
        @media (width >=40rem) {
            margin-bottom: calc(var(--spacing) * 0);
        }
    }

    .sm\:mb-8 {
        @media (width >=40rem) {
            margin-bottom: calc(var(--spacing) * 8);
        }
    }

    .sm\:mb-10 {
        @media (width >=40rem) {
            margin-bottom: calc(var(--spacing) * 10);
        }
    }

    .sm\:mb-16 {
        @media (width >=40rem) {
            margin-bottom: calc(var(--spacing) * 16);
        }
    }

    .sm\:block {
        @media (width >=40rem) {
            display: block;
        }
    }

    .sm\:flex {
        @media (width >=40rem) {
            display: flex;
        }
    }

    .sm\:hidden {
        @media (width >=40rem) {
            display: none;
        }
    }

    .sm\:inline {
        @media (width >=40rem) {
            display: inline;
        }
    }

    .sm\:divider-horizontal {
        @media (width >=40rem) {
            &.crmfv {
                height: auto;
                width: auto;
                flex-direction: column;

                &:before,
                &:after {
                    height: 100%;
                    width: 1px;
                    border-inline-end-style: var(--tw-border-style);
                    border-inline-end-width: 1px;
                    border-top-style: var(--tw-border-style);
                    border-top-width: 0px;
                }
            }
        }
    }

    .sm\:h-46 {
        @media (width >=40rem) {
            height: calc(var(--spacing) * 46);
        }
    }

    .sm\:w-1\/2 {
        @media (width >=40rem) {
            width: calc(1/2 * 100%);
        }
    }

    .sm\:w-65 {
        @media (width >=40rem) {
            width: calc(var(--spacing) * 65);
        }
    }

    .sm\:w-75 {
        @media (width >=40rem) {
            width: calc(var(--spacing) * 75);
        }
    }

    .sm\:max-w-104 {
        @media (width >=40rem) {
            max-width: calc(var(--spacing) * 104);
        }
    }

    .sm\:max-w-md {
        @media (width >=40rem) {
            max-width: var(--container-md);
        }
    }

    .sm\:max-w-sm {
        @media (width >=40rem) {
            max-width: var(--container-sm);
        }
    }

    .sm\:min-w-md {
        @media (width >=40rem) {
            min-width: var(--container-md);
        }
    }

    .sm\:grid-cols-2 {
        @media (width >=40rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .sm\:grid-cols-3 {
        @media (width >=40rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .sm\:grid-cols-4 {
        @media (width >=40rem) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    .sm\:flex-col {
        @media (width >=40rem) {
            flex-direction: column;
        }
    }

    .sm\:flex-row {
        @media (width >=40rem) {
            flex-direction: row;
        }
    }

    .sm\:flex-nowrap {
        @media (width >=40rem) {
            flex-wrap: nowrap;
        }
    }

    .sm\:items-center {
        @media (width >=40rem) {
            align-items: center;
        }
    }

    .sm\:justify-between {
        @media (width >=40rem) {
            justify-content: space-between;
        }
    }

    .sm\:justify-end {
        @media (width >=40rem) {
            justify-content: flex-end;
        }
    }

    .sm\:gap-4 {
        @media (width >=40rem) {
            gap: calc(var(--spacing) * 4);
        }
    }

    .sm\:gap-6 {
        @media (width >=40rem) {
            gap: calc(var(--spacing) * 6);
        }
    }

    .sm\:gap-9 {
        @media (width >=40rem) {
            gap: calc(var(--spacing) * 9);
        }
    }

    .sm\:gap-12 {
        @media (width >=40rem) {
            gap: calc(var(--spacing) * 12);
        }
    }

    .sm\:gap-16 {
        @media (width >=40rem) {
            gap: calc(var(--spacing) * 16);
        }
    }

    .sm\:gap-y-35 {
        @media (width >=40rem) {
            row-gap: calc(var(--spacing) * 35);
        }
    }

    .sm\:p-12 {
        @media (width >=40rem) {
            padding: calc(var(--spacing) * 12);
        }
    }

    .sm\:p-16 {
        @media (width >=40rem) {
            padding: calc(var(--spacing) * 16);
        }
    }

    .sm\:px-6 {
        @media (width >=40rem) {
            padding-inline: calc(var(--spacing) * 6);
        }
    }

    .sm\:px-8 {
        @media (width >=40rem) {
            padding-inline: calc(var(--spacing) * 8);
        }
    }

    .sm\:px-20 {
        @media (width >=40rem) {
            padding-inline: calc(var(--spacing) * 20);
        }
    }

    .sm\:py-6 {
        @media (width >=40rem) {
            padding-block: calc(var(--spacing) * 6);
        }
    }

    .sm\:py-16 {
        @media (width >=40rem) {
            padding-block: calc(var(--spacing) * 16);
        }
    }

    .sm\:pt-6 {
        @media (width >=40rem) {
            padding-top: calc(var(--spacing) * 6);
        }
    }

    .sm\:pt-16 {
        @media (width >=40rem) {
            padding-top: calc(var(--spacing) * 16);
        }
    }

    .sm\:pt-20 {
        @media (width >=40rem) {
            padding-top: calc(var(--spacing) * 20);
        }
    }

    .sm\:pt-24 {
        @media (width >=40rem) {
            padding-top: calc(var(--spacing) * 24);
        }
    }

    .sm\:pb-36 {
        @media (width >=40rem) {
            padding-bottom: calc(var(--spacing) * 36);
        }
    }

    .sm\:pin-input-lg {
        @media (width >=40rem) {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            --size: calc(var(--size-field, 0.25rem) * 11.5);
        }
    }

    .sm\:max-lg\:grid-cols-2 {
        @media (width >=40rem) {
            @media (width < 64rem) {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }
        }
    }

    .sm\:max-md\:end-\[5\%\] {
        @media (width >=40rem) {
            @media (width < 48rem) {
                inset-inline-end: 5%;
            }
        }
    }

    .md\:start-8 {
        @media (width >=48rem) {
            inset-inline-start: calc(var(--spacing) * 8);
        }
    }

    .md\:start-27 {
        @media (width >=48rem) {
            inset-inline-start: calc(var(--spacing) * 27);
        }
    }

    .md\:start-36 {
        @media (width >=48rem) {
            inset-inline-start: calc(var(--spacing) * 36);
        }
    }

    .md\:start-42 {
        @media (width >=48rem) {
            inset-inline-start: calc(var(--spacing) * 42);
        }
    }

    .md\:start-47 {
        @media (width >=48rem) {
            inset-inline-start: calc(var(--spacing) * 47);
        }
    }

    .md\:end-2 {
        @media (width >=48rem) {
            inset-inline-end: calc(var(--spacing) * 2);
        }
    }

    .md\:end-25 {
        @media (width >=48rem) {
            inset-inline-end: calc(var(--spacing) * 25);
        }
    }

    .md\:end-38 {
        @media (width >=48rem) {
            inset-inline-end: calc(var(--spacing) * 38);
        }
    }

    .md\:end-48 {
        @media (width >=48rem) {
            inset-inline-end: calc(var(--spacing) * 48);
        }
    }

    .md\:top-15 {
        @media (width >=48rem) {
            top: calc(var(--spacing) * 15);
        }
    }

    .md\:top-\[29\%\] {
        @media (width >=48rem) {
            top: 29%;
        }
    }

    .md\:top-\[34\%\] {
        @media (width >=48rem) {
            top: 34%;
        }
    }

    .md\:bottom-0 {
        @media (width >=48rem) {
            bottom: calc(var(--spacing) * 0);
        }
    }

    .md\:order-1 {
        @media (width >=48rem) {
            order: 1;
        }
    }

    .md\:order-2 {
        @media (width >=48rem) {
            order: 2;
        }
    }

    .md\:col-span-1 {
        @media (width >=48rem) {
            grid-column: span 1 / span 1;
        }
    }

    .md\:col-span-2 {
        @media (width >=48rem) {
            grid-column: span 2 / span 2;
        }
    }

    .md\:col-span-3 {
        @media (width >=48rem) {
            grid-column: span 3 / span 3;
        }
    }

    .md\:col-span-4 {
        @media (width >=48rem) {
            grid-column: span 4 / span 4;
        }
    }

    .md\:col-span-5 {
        @media (width >=48rem) {
            grid-column: span 5 / span 5;
        }
    }

    .md\:col-span-8 {
        @media (width >=48rem) {
            grid-column: span 8 / span 8;
        }
    }

    .md\:mx-6 {
        @media (width >=48rem) {
            margin-inline: calc(var(--spacing) * 6);
        }
    }

    .md\:input-lg {
        @media (width >=48rem) {
            padding-inline: calc(0.25rem * 4);
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            --size: calc(var(--size-field, 0.25rem) * 11.5);

            &[type="number"] {
                &::-webkit-inner-spin-button {
                    margin-block: calc(0.25rem * -3);
                    margin-inline-end: calc(0.25rem * -3);
                }
            }
        }
    }

    .md\:my-2 {
        @media (width >=48rem) {
            margin-block: calc(var(--spacing) * 2);
        }
    }

    .md\:-ms-50 {
        @media (width >=48rem) {
            margin-inline-start: calc(var(--spacing) * -50);
        }
    }

    .md\:ms-6 {
        @media (width >=48rem) {
            margin-inline-start: calc(var(--spacing) * 6);
        }
    }

    .md\:mt-16 {
        @media (width >=48rem) {
            margin-top: calc(var(--spacing) * 16);
        }
    }

    .md\:mb-8 {
        @media (width >=48rem) {
            margin-bottom: calc(var(--spacing) * 8);
        }
    }

    .md\:navbar-end {
        @media (width >=48rem) {
            display: flex;
            width: calc(1/2 * 100%);
            justify-content: flex-end;
        }
    }

    .md\:block {
        @media (width >=48rem) {
            display: block;
        }
    }

    .md\:flex {
        @media (width >=48rem) {
            display: flex;
        }
    }

    .md\:hidden {
        @media (width >=48rem) {
            display: none;
        }
    }

    .md\:divider-horizontal {
        @media (width >=48rem) {
            &.crmfv {
                height: auto;
                width: auto;
                flex-direction: column;

                &:before,
                &:after {
                    height: 100%;
                    width: 1px;
                    border-inline-end-style: var(--tw-border-style);
                    border-inline-end-width: 1px;
                    border-top-style: var(--tw-border-style);
                    border-top-width: 0px;
                }
            }
        }
    }

    .md\:size-70 {
        @media (width >=48rem) {
            width: calc(var(--spacing) * 70);
            height: calc(var(--spacing) * 70);
        }
    }

    .md\:size-90 {
        @media (width >=48rem) {
            width: calc(var(--spacing) * 90);
            height: calc(var(--spacing) * 90);
        }
    }

    .md\:size-110 {
        @media (width >=48rem) {
            width: calc(var(--spacing) * 110);
            height: calc(var(--spacing) * 110);
        }
    }

    .md\:h-16 {
        @media (width >=48rem) {
            height: calc(var(--spacing) * 16);
        }
    }

    .md\:h-85 {
        @media (width >=48rem) {
            height: calc(var(--spacing) * 85);
        }
    }

    .md\:h-auto {
        @media (width >=48rem) {
            height: auto;
        }
    }

    .md\:w-2\/4 {
        @media (width >=48rem) {
            width: calc(2/4 * 100%);
        }
    }

    .md\:w-50 {
        @media (width >=48rem) {
            width: calc(var(--spacing) * 50);
        }
    }

    .md\:w-60 {
        @media (width >=48rem) {
            width: calc(var(--spacing) * 60);
        }
    }

    .md\:w-100 {
        @media (width >=48rem) {
            width: calc(var(--spacing) * 100);
        }
    }

    .md\:max-w-3xl {
        @media (width >=48rem) {
            max-width: var(--container-3xl);
        }
    }

    .md\:max-w-96 {
        @media (width >=48rem) {
            max-width: calc(var(--spacing) * 96);
        }
    }

    .md\:max-w-lg {
        @media (width >=48rem) {
            max-width: var(--container-lg);
        }
    }

    .md\:flex-1 {
        @media (width >=48rem) {
            flex: 1;
        }
    }

    .md\:navbar-center {
        @media (width >=48rem) {
            flex-shrink: 0;
        }
    }

    .md\:grow {
        @media (width >=48rem) {
            flex-grow: 1;
        }
    }

    .md\:basis-1\/3 {
        @media (width >=48rem) {
            flex-basis: calc(1/3 * 100%);
        }
    }

    .md\:basis-2\/3 {
        @media (width >=48rem) {
            flex-basis: calc(2/3 * 100%);
        }
    }

    .md\:grid-cols-2 {
        @media (width >=48rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .md\:grid-cols-3 {
        @media (width >=48rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .md\:grid-cols-4 {
        @media (width >=48rem) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    .md\:grid-cols-5 {
        @media (width >=48rem) {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
    }

    .md\:grid-cols-6 {
        @media (width >=48rem) {
            grid-template-columns: repeat(6, minmax(0, 1fr));
        }
    }

    .md\:grid-cols-12 {
        @media (width >=48rem) {
            grid-template-columns: repeat(12, minmax(0, 1fr));
        }
    }

    .md\:flex-col {
        @media (width >=48rem) {
            flex-direction: column;
        }
    }

    .md\:flex-row {
        @media (width >=48rem) {
            flex-direction: row;
        }
    }

    .md\:items-center {
        @media (width >=48rem) {
            align-items: center;
        }
    }

    .md\:items-end {
        @media (width >=48rem) {
            align-items: flex-end;
        }
    }

    .min-md\:items-center {
        @media (width >=48rem) {
            align-items: center;
        }
    }

    .min-md\:items-end {
        @media (width >=48rem) {
            align-items: flex-end;
        }
    }

    .md\:justify-between {
        @media (width >=48rem) {
            justify-content: space-between;
        }
    }

    .md\:justify-end {
        @media (width >=48rem) {
            justify-content: flex-end;
        }
    }

    .md\:gap-2 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 2);
        }
    }

    .md\:gap-3 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 3);
        }
    }

    .md\:gap-4 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 4);
        }
    }

    .md\:gap-5 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 5);
        }
    }

    .md\:gap-6 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 6);
        }
    }

    .md\:gap-7 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 7);
        }
    }

    .md\:gap-9 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 9);
        }
    }

    .md\:gap-10 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 10);
        }
    }

    .md\:gap-16 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 16);
        }
    }

    .md\:gap-20 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 20);
        }
    }

    .md\:gap-24 {
        @media (width >=48rem) {
            gap: calc(var(--spacing) * 24);
        }
    }

    .md\:divide-x {
        @media (width >=48rem) {
            :where(& > :not(:last-child)) {
                --tw-divide-x-reverse: 0;
                border-inline-style: var(--tw-border-style);
                border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
                border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
            }
        }
    }

    .md\:rounded-e-none {
        @media (width >=48rem) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    .md\:border-e {
        @media (width >=48rem) {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 1px;
        }
    }

    .md\:border-r {
        @media (width >=48rem) {
            border-right-style: var(--tw-border-style);
            border-right-width: 1px;
        }
    }

    .md\:border-r-4 {
        @media (width >=48rem) {
            border-right-style: var(--tw-border-style);
            border-right-width: 4px;
        }
    }

    .md\:p-12 {
        @media (width >=48rem) {
            padding: calc(var(--spacing) * 12);
        }
    }

    .md\:pe-4 {
        @media (width >=48rem) {
            padding-inline-end: calc(var(--spacing) * 4);
        }
    }

    .md\:pt-45 {
        @media (width >=48rem) {
            padding-top: calc(var(--spacing) * 45);
        }
    }

    .md\:text-end {
        @media (width >=48rem) {
            text-align: end;
        }
    }

    .md\:btn-lg {
        @media (width >=48rem) {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            --btn-p: 1.25rem;
            --size: calc(var(--size-field, 0.25rem) * 11.5);
        }
    }

    .md\:input-lg {
        @media (width >=48rem) {
            &::file-selector-button {
                font-size: var(--text-lg);
                line-height: var(--tw-leading, var(--text-lg--line-height));
            }
        }
    }

    .md\:text-2xl {
        @media (width >=48rem) {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
    }

    .md\:text-3xl {
        @media (width >=48rem) {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
    }

    .md\:text-4xl {
        @media (width >=48rem) {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
    }

    .md\:text-6xl {
        @media (width >=48rem) {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading, var(--text-6xl--line-height));
        }
    }

    .md\:text-lg {
        @media (width >=48rem) {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }
    }

    .md\:text-xl {
        @media (width >=48rem) {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
    }

    .md\:\*\:not-last\:border-e {
        @media (width >=48rem) {
            :is(& > *) {
                &:not(*:last-child) {
                    border-inline-end-style: var(--tw-border-style);
                    border-inline-end-width: 1px;
                }
            }
        }
    }

    .md\:max-lg\:col-span-2 {
        @media (width >=48rem) {
            @media (width < 64rem) {
                grid-column: span 2 / span 2;
            }
        }
    }

    .md\:max-lg\:col-span-4 {
        @media (width >=48rem) {
            @media (width < 64rem) {
                grid-column: span 4 / span 4;
            }
        }
    }

    .md\:max-lg\:grid-cols-1 {
        @media (width >=48rem) {
            @media (width < 64rem) {
                grid-template-columns: repeat(1, minmax(0, 1fr));
            }
        }
    }

    .md\:max-lg\:grid-cols-5 {
        @media (width >=48rem) {
            @media (width < 64rem) {
                grid-template-columns: repeat(5, minmax(0, 1fr));
            }
        }
    }

    .lg\:menu-horizontal {
        @media (width >=64rem) {
            display: inline-flex;
            flex-direction: row;

            &>li:not(.bsinl)>.collapse>ul {
                position: absolute;
                margin-inline-start: calc(0.25rem * 0);
                margin-top: calc(0.25rem * 4);
                padding-block: calc(0.25rem * 2);
                padding-inline-end: calc(0.25rem * 2);
            }

            &>li>.collapse>ul {
                &:before {
                    content: none;
                }
            }

            :where(& > li:not(.bsinl) > .collapse > ul) {
                border-radius: var(--radius-box);
                background-color: var(--color-base-100);
                --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
                --tw-shadow-color: var(--color-base-300);

                @supports (color: color-mix(in lab, red, red)) {
                    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
                }
            }
        }
    }

    .lg\:absolute {
        @media (width >=64rem) {
            position: absolute;
        }
    }

    .lg\:start-9 {
        @media (width >=64rem) {
            inset-inline-start: calc(var(--spacing) * 9);
        }
    }

    .lg\:start-18 {
        @media (width >=64rem) {
            inset-inline-start: calc(var(--spacing) * 18);
        }
    }

    .lg\:start-20 {
        @media (width >=64rem) {
            inset-inline-start: calc(var(--spacing) * 20);
        }
    }

    .lg\:start-\[23\%\] {
        @media (width >=64rem) {
            inset-inline-start: 23%;
        }
    }

    .lg\:end-3 {
        @media (width >=64rem) {
            inset-inline-end: calc(var(--spacing) * 3);
        }
    }

    .lg\:end-20 {
        @media (width >=64rem) {
            inset-inline-end: calc(var(--spacing) * 20);
        }
    }

    .lg\:top-3 {
        @media (width >=64rem) {
            top: calc(var(--spacing) * 3);
        }
    }

    .lg\:top-6 {
        @media (width >=64rem) {
            top: calc(var(--spacing) * 6);
        }
    }

    .lg\:top-\[18px\] {
        @media (width >=64rem) {
            top: 18px;
        }
    }

    .lg\:top-\[19\%\] {
        @media (width >=64rem) {
            top: 19%;
        }
    }

    .lg\:top-\[22\%\] {
        @media (width >=64rem) {
            top: 22%;
        }
    }

    .lg\:-right-8 {
        @media (width >=64rem) {
            right: calc(var(--spacing) * -8);
        }
    }

    .lg\:-bottom-25 {
        @media (width >=64rem) {
            bottom: calc(var(--spacing) * -25);
        }
    }

    .lg\:left-1\/2 {
        @media (width >=64rem) {
            left: calc(1/2 * 100%);
        }
    }

    .lg\:left-auto {
        @media (width >=64rem) {
            left: auto;
        }
    }

    .lg\:z-50 {
        @media (width >=64rem) {
            z-index: 50;
        }
    }

    .lg\:order-1 {
        @media (width >=64rem) {
            order: 1;
        }
    }

    .lg\:order-3 {
        @media (width >=64rem) {
            order: 3;
        }
    }

    .lg\:order-4 {
        @media (width >=64rem) {
            order: 4;
        }
    }

    .lg\:col-span-1 {
        @media (width >=64rem) {
            grid-column: span 1 / span 1;
        }
    }

    .lg\:col-span-2 {
        @media (width >=64rem) {
            grid-column: span 2 / span 2;
        }
    }

    .lg\:col-span-3 {
        @media (width >=64rem) {
            grid-column: span 3 / span 3;
        }
    }

    .lg\:col-span-4 {
        @media (width >=64rem) {
            grid-column: span 4 / span 4;
        }
    }

    .lg\:col-span-6 {
        @media (width >=64rem) {
            grid-column: span 6 / span 6;
        }
    }

    .lg\:col-span-8 {
        @media (width >=64rem) {
            grid-column: span 8 / span 8;
        }
    }

    .lg\:col-span-9 {
        @media (width >=64rem) {
            grid-column: span 9 / span 9;
        }
    }

    .lg\:mx-0 {
        @media (width >=64rem) {
            margin-inline: calc(var(--spacing) * 0);
        }
    }

    .lg\:mt-2\.5 {
        @media (width >=64rem) {
            margin-top: calc(var(--spacing) * 2.5);
        }
    }

    .lg\:mt-6 {
        @media (width >=64rem) {
            margin-top: calc(var(--spacing) * 6);
        }
    }

    .lg\:mt-10\.5 {
        @media (width >=64rem) {
            margin-top: calc(var(--spacing) * 10.5);
        }
    }

    .lg\:mt-23 {
        @media (width >=64rem) {
            margin-top: calc(var(--spacing) * 23);
        }
    }

    .lg\:mt-24 {
        @media (width >=64rem) {
            margin-top: calc(var(--spacing) * 24);
        }
    }

    .lg\:mb-10 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 10);
        }
    }

    .lg\:mb-14 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 14);
        }
    }

    .lg\:mb-16 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 16);
        }
    }

    .lg\:mb-24 {
        @media (width >=64rem) {
            margin-bottom: calc(var(--spacing) * 24);
        }
    }

    .lg\:ml-0 {
        @media (width >=64rem) {
            margin-left: calc(var(--spacing) * 0);
        }
    }

    .lg\:ml-8 {
        @media (width >=64rem) {
            margin-left: calc(var(--spacing) * 8);
        }
    }

    .lg\:block {
        @media (width >=64rem) {
            display: block;
        }
    }

    .lg\:flex {
        @media (width >=64rem) {
            display: flex;
        }
    }

    .lg\:grid {
        @media (width >=64rem) {
            display: grid;
        }
    }

    .lg\:hidden {
        @media (width >=64rem) {
            display: none;
        }
    }

    .lg\:inline-block {
        @media (width >=64rem) {
            display: inline-block;
        }
    }

    .lg\:h-62\.5 {
        @media (width >=64rem) {
            height: calc(var(--spacing) * 62.5);
        }
    }

    .lg\:h-141 {
        @media (width >=64rem) {
            height: calc(var(--spacing) * 141);
        }
    }

    .lg\:h-161 {
        @media (width >=64rem) {
            height: calc(var(--spacing) * 161);
        }
    }

    .lg\:h-auto {
        @media (width >=64rem) {
            height: auto;
        }
    }

    .lg\:h-px {
        @media (width >=64rem) {
            height: 1px;
        }
    }

    .lg\:max-h-121 {
        @media (width >=64rem) {
            max-height: calc(var(--spacing) * 121);
        }
    }

    .lg\:min-h-179 {
        @media (width >=64rem) {
            min-height: calc(var(--spacing) * 179);
        }
    }

    .lg\:w-1\/2 {
        @media (width >=64rem) {
            width: calc(1/2 * 100%);
        }
    }

    .lg\:w-3\/4 {
        @media (width >=64rem) {
            width: calc(3/4 * 100%);
        }
    }

    .lg\:w-10\/12 {
        @media (width >=64rem) {
            width: calc(10/12 * 100%);
        }
    }

    .lg\:w-120 {
        @media (width >=64rem) {
            width: calc(var(--spacing) * 120);
        }
    }

    .lg\:w-\[calc\(100\%_-_17px\)\] {
        @media (width >=64rem) {
            width: calc(100% - 17px);
        }
    }

    .lg\:max-w-200 {
        @media (width >=64rem) {
            max-width: calc(var(--spacing) * 200);
        }
    }

    .lg\:max-w-\[1280px\] {
        @media (width >=64rem) {
            max-width: 1280px;
        }
    }

    .lg\:max-w-lg {
        @media (width >=64rem) {
            max-width: var(--container-lg);
        }
    }

    .lg\:max-w-md {
        @media (width >=64rem) {
            max-width: var(--container-md);
        }
    }

    .lg\:navbar-center {
        @media (width >=64rem) {
            flex-shrink: 0;
        }
    }

    .lg\:basis-auto {
        @media (width >=64rem) {
            flex-basis: auto;
        }
    }

    .lg\:-translate-x-1\/2 {
        @media (width >=64rem) {
            --tw-translate-x: calc(calc(1/2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .lg\:translate-x-0 {
        @media (width >=64rem) {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .lg\:grid-cols-2 {
        @media (width >=64rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-3 {
        @media (width >=64rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-4 {
        @media (width >=64rem) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-5 {
        @media (width >=64rem) {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-6 {
        @media (width >=64rem) {
            grid-template-columns: repeat(6, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-7 {
        @media (width >=64rem) {
            grid-template-columns: repeat(7, minmax(0, 1fr));
        }
    }

    .lg\:grid-cols-12 {
        @media (width >=64rem) {
            grid-template-columns: repeat(12, minmax(0, 1fr));
        }
    }

    .lg\:flex-col {
        @media (width >=64rem) {
            flex-direction: column;
        }
    }

    .lg\:flex-row {
        @media (width >=64rem) {
            flex-direction: row;
        }
    }

    .lg\:flex-nowrap {
        @media (width >=64rem) {
            flex-wrap: nowrap;
        }
    }

    .lg\:items-center {
        @media (width >=64rem) {
            align-items: center;
        }
    }

    .lg\:items-end {
        @media (width >=64rem) {
            align-items: flex-end;
        }
    }

    .min-lg\:items-end {
        @media (width >=64rem) {
            align-items: flex-end;
        }
    }

    .lg\:justify-end {
        @media (width >=64rem) {
            justify-content: flex-end;
        }
    }

    .lg\:gap-2 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 2);
        }
    }

    .lg\:gap-6 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 6);
        }
    }

    .lg\:gap-7\.5 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 7.5);
        }
    }

    .lg\:gap-8 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 8);
        }
    }

    .lg\:gap-22 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 22);
        }
    }

    .lg\:gap-24 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 24);
        }
    }

    .lg\:gap-28 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 28);
        }
    }

    .lg\:gap-35 {
        @media (width >=64rem) {
            gap: calc(var(--spacing) * 35);
        }
    }

    .lg\:space-y-14 {
        @media (width >=64rem) {
            :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(calc(var(--spacing) * 14) * var(--tw-space-y-reverse));
                margin-block-end: calc(calc(var(--spacing) * 14) * calc(1 - var(--tw-space-y-reverse)));
            }
        }
    }

    .lg\:gap-y-43 {
        @media (width >=64rem) {
            row-gap: calc(var(--spacing) * 43);
        }
    }

    .lg\:rounded-2xl {
        @media (width >=64rem) {
            border-radius: var(--radius-2xl);
        }
    }

    .lg\:rounded-s-none {
        @media (width >=64rem) {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
    }

    .lg\:rounded-t-none {
        @media (width >=64rem) {
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }
    }

    .lg\:rounded-l-3xl {
        @media (width >=64rem) {
            border-top-left-radius: var(--radius-3xl);
            border-bottom-left-radius: var(--radius-3xl);
        }
    }

    .lg\:rounded-r-3xl {
        @media (width >=64rem) {
            border-top-right-radius: var(--radius-3xl);
            border-bottom-right-radius: var(--radius-3xl);
        }
    }

    .lg\:rounded-b-none {
        @media (width >=64rem) {
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    .lg\:p-8 {
        @media (width >=64rem) {
            padding: calc(var(--spacing) * 8);
        }
    }

    .lg\:p-16 {
        @media (width >=64rem) {
            padding: calc(var(--spacing) * 16);
        }
    }

    .lg\:p-24 {
        @media (width >=64rem) {
            padding: calc(var(--spacing) * 24);
        }
    }

    .lg\:badge-lg {
        @media (width >=64rem) {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
            --size: calc(var(--size-selector, 0.25rem) * 7);
            padding-inline: calc(0.25rem * 3.5);
        }
    }

    .lg\:px-7 {
        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 7);
        }
    }

    .lg\:px-8 {
        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 8);
        }
    }

    .lg\:px-11\.75 {
        @media (width >=64rem) {
            padding-inline: calc(var(--spacing) * 11.75);
        }
    }

    .lg\:py-4 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 4);
        }
    }

    .lg\:py-6 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 6);
        }
    }

    .lg\:py-8 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 8);
        }
    }

    .lg\:py-12 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 12);
        }
    }

    .lg\:py-12\.75 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 12.75);
        }
    }

    .lg\:py-18 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 18);
        }
    }

    .lg\:py-24 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 24);
        }
    }

    .min-lg\:py-0 {
        @media (width >=64rem) {
            padding-block: calc(var(--spacing) * 0);
        }
    }

    .lg\:ps-75 {
        @media (width >=64rem) {
            padding-inline-start: calc(var(--spacing) * 75);
        }
    }

    .lg\:pt-8 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 8);
        }
    }

    .lg\:pt-21 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 21);
        }
    }

    .lg\:pt-24 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 24);
        }
    }

    .lg\:pt-26\.5 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 26.5);
        }
    }

    .lg\:pt-28 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 28);
        }
    }

    .lg\:pt-45 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 45);
        }
    }

    .lg\:pt-47\.5 {
        @media (width >=64rem) {
            padding-top: calc(var(--spacing) * 47.5);
        }
    }

    .lg\:pb-0 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 0);
        }
    }

    .lg\:pb-35 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 35);
        }
    }

    .lg\:pb-40 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 40);
        }
    }

    .lg\:pb-43 {
        @media (width >=64rem) {
            padding-bottom: calc(var(--spacing) * 43);
        }
    }

    .lg\:btn-lg {
        @media (width >=64rem) {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
            --btn-p: 1.25rem;
            --size: calc(var(--size-field, 0.25rem) * 11.5);
        }
    }

    .lg\:text-3xl {
        @media (width >=64rem) {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
    }

    .lg\:text-4xl {
        @media (width >=64rem) {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
    }

    .lg\:text-xl {
        @media (width >=64rem) {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
    }

    .lg\:shadow-none {
        @media (width >=64rem) {
            --tw-shadow: 0 0 #0000;
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .lg\:\[--adaptive\:adaptive\] {
        @media (width >=64rem) {
            --adaptive: adaptive;
        }
    }

    .lg\:before\:-top-4 {
        @media (width >=64rem) {
            &::before {
                content: var(--tw-content);
                top: calc(var(--spacing) * -4);
            }
        }
    }

    .lg\:before\:h-5 {
        @media (width >=64rem) {
            &::before {
                content: var(--tw-content);
                height: calc(var(--spacing) * 5);
            }
        }
    }

    .lg\:before\:w-full {
        @media (width >=64rem) {
            &::before {
                content: var(--tw-content);
                width: 100%;
            }
        }
    }

    .lg\:max-xl\:col-span-2 {
        @media (width >=64rem) {
            @media (width < 80rem) {
                grid-column: span 2 / span 2;
            }
        }
    }

    .lg\:max-xl\:max-w-140 {
        @media (width >=64rem) {
            @media (width < 80rem) {
                max-width: calc(var(--spacing) * 140);
            }
        }
    }

    .lg\:max-xl\:scale-80 {
        @media (width >=64rem) {
            @media (width < 80rem) {
                --tw-scale-x: 80%;
                --tw-scale-y: 80%;
                --tw-scale-z: 80%;
                scale: var(--tw-scale-x) var(--tw-scale-y);
            }
        }
    }

    .lg\:max-xl\:grid-cols-4 {
        @media (width >=64rem) {
            @media (width < 80rem) {
                grid-template-columns: repeat(4, minmax(0, 1fr));
            }
        }
    }

    .xl\:start-2 {
        @media (width >=80rem) {
            inset-inline-start: calc(var(--spacing) * 2);
        }
    }

    .xl\:start-12 {
        @media (width >=80rem) {
            inset-inline-start: calc(var(--spacing) * 12);
        }
    }

    .xl\:start-22 {
        @media (width >=80rem) {
            inset-inline-start: calc(var(--spacing) * 22);
        }
    }

    .xl\:start-28 {
        @media (width >=80rem) {
            inset-inline-start: calc(var(--spacing) * 28);
        }
    }

    .xl\:start-\[8\%\] {
        @media (width >=80rem) {
            inset-inline-start: 8%;
        }
    }

    .xl\:start-\[12\%\] {
        @media (width >=80rem) {
            inset-inline-start: 12%;
        }
    }

    .xl\:end-10 {
        @media (width >=80rem) {
            inset-inline-end: calc(var(--spacing) * 10);
        }
    }

    .xl\:end-12 {
        @media (width >=80rem) {
            inset-inline-end: calc(var(--spacing) * 12);
        }
    }

    .xl\:end-28 {
        @media (width >=80rem) {
            inset-inline-end: calc(var(--spacing) * 28);
        }
    }

    .xl\:end-\[8\%\] {
        @media (width >=80rem) {
            inset-inline-end: 8%;
        }
    }

    .xl\:end-\[12\%\] {
        @media (width >=80rem) {
            inset-inline-end: 12%;
        }
    }

    .xl\:top-15 {
        @media (width >=80rem) {
            top: calc(var(--spacing) * 15);
        }
    }

    .xl\:top-\[25\%\] {
        @media (width >=80rem) {
            top: 25%;
        }
    }

    .xl\:top-\[31\%\] {
        @media (width >=80rem) {
            top: 31%;
        }
    }

    .xl\:z-50 {
        @media (width >=80rem) {
            z-index: 50;
        }
    }

    .xl\:col-span-2 {
        @media (width >=80rem) {
            grid-column: span 2 / span 2;
        }
    }

    .xl\:col-span-3 {
        @media (width >=80rem) {
            grid-column: span 3 / span 3;
        }
    }

    .xl\:col-span-4 {
        @media (width >=80rem) {
            grid-column: span 4 / span 4;
        }
    }

    .xl\:mt-42 {
        @media (width >=80rem) {
            margin-top: calc(var(--spacing) * 42);
        }
    }

    .xl\:block {
        @media (width >=80rem) {
            display: block;
        }
    }

    .xl\:hidden {
        @media (width >=80rem) {
            display: none;
        }
    }

    .xl\:divider-horizontal {
        @media (width >=80rem) {
            &.crmfv {
                height: auto;
                width: auto;
                flex-direction: column;

                &:before,
                &:after {
                    height: 100%;
                    width: 1px;
                    border-inline-end-style: var(--tw-border-style);
                    border-inline-end-width: 1px;
                    border-top-style: var(--tw-border-style);
                    border-top-width: 0px;
                }
            }
        }
    }

    .xl\:size-80 {
        @media (width >=80rem) {
            width: calc(var(--spacing) * 80);
            height: calc(var(--spacing) * 80);
        }
    }

    .xl\:size-114 {
        @media (width >=80rem) {
            width: calc(var(--spacing) * 114);
            height: calc(var(--spacing) * 114);
        }
    }

    .xl\:size-138 {
        @media (width >=80rem) {
            width: calc(var(--spacing) * 138);
            height: calc(var(--spacing) * 138);
        }
    }

    .xl\:h-16\.5 {
        @media (width >=80rem) {
            height: calc(var(--spacing) * 16.5);
        }
    }

    .xl\:h-72\.75 {
        @media (width >=80rem) {
            height: calc(var(--spacing) * 72.75);
        }
    }

    .xl\:h-104 {
        @media (width >=80rem) {
            height: calc(var(--spacing) * 104);
        }
    }

    .xl\:h-screen {
        @media (width >=80rem) {
            height: 100vh;
        }
    }

    .xl\:w-max {
        @media (width >=80rem) {
            width: max-content;
        }
    }

    .xl\:max-w-md {
        @media (width >=80rem) {
            max-width: var(--container-md);
        }
    }

    .xl\:translate-x-0 {
        @media (width >=80rem) {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .xl\:translate-y-1\/2 {
        @media (width >=80rem) {
            --tw-translate-y: calc(1/2 * 100%);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .xl\:grid-cols-2 {
        @media (width >=80rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .xl\:grid-cols-3 {
        @media (width >=80rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .xl\:grid-cols-4 {
        @media (width >=80rem) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    .xl\:grid-cols-5 {
        @media (width >=80rem) {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
    }

    .xl\:grid-cols-6 {
        @media (width >=80rem) {
            grid-template-columns: repeat(6, minmax(0, 1fr));
        }
    }

    .xl\:flex-col {
        @media (width >=80rem) {
            flex-direction: column;
        }
    }

    .xl\:flex-row {
        @media (width >=80rem) {
            flex-direction: row;
        }
    }

    .xl\:gap-24 {
        @media (width >=80rem) {
            gap: calc(var(--spacing) * 24);
        }
    }

    .xl\:gap-44 {
        @media (width >=80rem) {
            gap: calc(var(--spacing) * 44);
        }
    }

    .xl\:gap-x-8 {
        @media (width >=80rem) {
            column-gap: calc(var(--spacing) * 8);
        }
    }

    .xl\:px-25 {
        @media (width >=80rem) {
            padding-inline: calc(var(--spacing) * 25);
        }
    }

    .xl\:py-0 {
        @media (width >=80rem) {
            padding-block: calc(var(--spacing) * 0);
        }
    }

    .xl\:py-16 {
        @media (width >=80rem) {
            padding-block: calc(var(--spacing) * 16);
        }
    }

    .xl\:ps-8 {
        @media (width >=80rem) {
            padding-inline-start: calc(var(--spacing) * 8);
        }
    }

    .xl\:ps-65 {
        @media (width >=80rem) {
            padding-inline-start: calc(var(--spacing) * 65);
        }
    }

    .xl\:pt-57 {
        @media (width >=80rem) {
            padding-top: calc(var(--spacing) * 57);
        }
    }

    .xl\:text-9xl {
        @media (width >=80rem) {
            font-size: var(--text-9xl);
            line-height: var(--tw-leading, var(--text-9xl--line-height));
        }
    }

    .xl\:transition-none {
        @media (width >=80rem) {
            transition-property: none;
        }
    }

    .\32 xl\:grid-cols-3 {
        @media (width >=96rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    .rtl\:start-12 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            inset-inline-start: calc(var(--spacing) * 12);
        }
    }

    .rtl\:start-\[11\%\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            inset-inline-start: 11%;
        }
    }

    .rtl\:start-\[13\%\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            inset-inline-start: 13%;
        }
    }

    .rtl\:end-44 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            inset-inline-end: calc(var(--spacing) * 44);
        }
    }

    .rtl\:end-\[100\%\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            inset-inline-end: 100%;
        }
    }

    .rtl\:top-\[33\%\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            top: 33%;
        }
    }

    .rtl\:\!mr-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            margin-right: calc(var(--spacing) * 0) !important;
        }
    }

    .rtl\:-translate-x-1\/2 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-translate-x: calc(calc(1/2 * 100%) * -1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .rtl\:translate-x-1\/2 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-translate-x: calc(1/2 * 100%);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .rtl\:-rotate-\[11deg\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: calc(11deg * -1);
        }
    }

    .rtl\:-rotate-\[19deg\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: calc(19deg * -1);
        }
    }

    .rtl\:-rotate-\[26deg\] {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: calc(26deg * -1);
        }
    }

    .rtl\:rotate-180 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: 180deg;
        }
    }

    .rtl\:rotate-y-0 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-rotate-y: rotateY(0deg);
            transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
        }
    }

    .rtl\:rotate-y-180 {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-rotate-y: rotateY(180deg);
            transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
        }
    }

    .rtl\:animate-marqueeLeft {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            animation: var(--animate-marqueeLeft);
        }
    }

    .rtl\:animate-marqueeRight {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            animation: var(--animate-marqueeRight);
        }
    }

    .rtl\:rounded-l-3xl {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            border-top-left-radius: var(--radius-3xl);
            border-bottom-left-radius: var(--radius-3xl);
        }
    }

    .rtl\:lg\:rounded-l-3xl {
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            @media (width >=64rem) {
                border-top-left-radius: var(--radius-3xl);
                border-bottom-left-radius: var(--radius-3xl);
            }
        }
    }

    .dark\:text-neutral-500 {
        @media (prefers-color-scheme: dark) {
            color: var(--color-neutral-500);
        }
    }

    .dark\:hover\:text-blue-500 {
        @media (prefers-color-scheme: dark) {
            &:hover {
                @media (hover: hover) {
                    color: var(--color-blue-500);
                }
            }
        }
    }

    .dark\:focus\:text-blue-500 {
        @media (prefers-color-scheme: dark) {
            &:focus {
                color: var(--color-blue-500);
            }
        }
    }

    .dropdown-open\:rotate-180 {
        &.dropdown-menu.open {
            rotate: 180deg;
        }

        .dropdown.open>& {
            rotate: 180deg;
        }

        .dropdown.open>.dropdown-toggle & {
            rotate: 180deg;
        }

        .dropdown.open>.dropdown-menu>& {
            rotate: 180deg;
        }
    }

    .dropdown-open\:bg-base-content\/10 {
        &.dropdown-menu.open {
            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
        }

        .dropdown.open>& {
            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
        }

        .dropdown.open>.dropdown-toggle & {
            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
        }

        .dropdown.open>.dropdown-menu>& {
            background-color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
        }
    }

    .dropdown-open\:text-base-content {
        &.dropdown-menu.open {
            color: var(--color-base-content);
        }

        .dropdown.open>& {
            color: var(--color-base-content);
        }

        .dropdown.open>.dropdown-toggle & {
            color: var(--color-base-content);
        }

        .dropdown.open>.dropdown-menu>& {
            color: var(--color-base-content);
        }
    }

    .dropdown-open\:opacity-100 {
        &.dropdown-menu.open {
            opacity: 100%;
        }

        .dropdown.open>& {
            opacity: 100%;
        }

        .dropdown.open>.dropdown-toggle & {
            opacity: 100%;
        }

        .dropdown.open>.dropdown-menu>& {
            opacity: 100%;
        }
    }

    .removing\:translate-x-5 {
        &.removing {
            --tw-translate-x: calc(var(--spacing) * 5);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .removing\:opacity-0 {
        &.removing {
            opacity: 0%;
        }
    }

    .tooltip-shown\:visible {
        &.tooltip-content.show {
            visibility: visible;
        }

        .tooltip.show & {
            visibility: visible;
        }
    }

    .tooltip-shown\:opacity-100 {
        &.tooltip-content.show {
            opacity: 100%;
        }

        .tooltip.show & {
            opacity: 100%;
        }
    }

    .accordion-item-active\:block {
        &.accordion-item.active {
            display: block;
        }

        .accordion-item.active>& {
            display: block;
        }

        .accordion-item.active>.accordion-toggle & {
            display: block;
        }

        .accordion-item.active>.accordion-heading>.accordion-toggle & {
            display: block;
        }

        &.accordion-toggle {
            .accordion-item.active>& {
                display: block;
            }
        }

        &.accordion-toggle {
            .accordion-item.active>.accordion-heading>& {
                display: block;
            }
        }

        &.accordion-force-active {
            .accordion-item.active & {
                display: block;
            }
        }
    }

    .accordion-item-active\:hidden {
        &.accordion-item.active {
            display: none;
        }

        .accordion-item.active>& {
            display: none;
        }

        .accordion-item.active>.accordion-toggle & {
            display: none;
        }

        .accordion-item.active>.accordion-heading>.accordion-toggle & {
            display: none;
        }

        &.accordion-toggle {
            .accordion-item.active>& {
                display: none;
            }
        }

        &.accordion-toggle {
            .accordion-item.active>.accordion-heading>& {
                display: none;
            }
        }

        &.accordion-force-active {
            .accordion-item.active & {
                display: none;
            }
        }
    }

    .accordion-item-active\:-rotate-180 {
        &.accordion-item.active {
            rotate: calc(180deg * -1);
        }

        .accordion-item.active>& {
            rotate: calc(180deg * -1);
        }

        .accordion-item.active>.accordion-toggle & {
            rotate: calc(180deg * -1);
        }

        .accordion-item.active>.accordion-heading>.accordion-toggle & {
            rotate: calc(180deg * -1);
        }

        &.accordion-toggle {
            .accordion-item.active>& {
                rotate: calc(180deg * -1);
            }
        }

        &.accordion-toggle {
            .accordion-item.active>.accordion-heading>& {
                rotate: calc(180deg * -1);
            }
        }

        &.accordion-force-active {
            .accordion-item.active & {
                rotate: calc(180deg * -1);
            }
        }
    }

    .accordion-item-active\:rotate-90 {
        &.accordion-item.active {
            rotate: 90deg;
        }

        .accordion-item.active>& {
            rotate: 90deg;
        }

        .accordion-item.active>.accordion-toggle & {
            rotate: 90deg;
        }

        .accordion-item.active>.accordion-heading>.accordion-toggle & {
            rotate: 90deg;
        }

        &.accordion-toggle {
            .accordion-item.active>& {
                rotate: 90deg;
            }
        }

        &.accordion-toggle {
            .accordion-item.active>.accordion-heading>& {
                rotate: 90deg;
            }
        }

        &.accordion-force-active {
            .accordion-item.active & {
                rotate: 90deg;
            }
        }
    }

    .accordion-item-active\:rotate-180 {
        &.accordion-item.active {
            rotate: 180deg;
        }

        .accordion-item.active>& {
            rotate: 180deg;
        }

        .accordion-item.active>.accordion-toggle & {
            rotate: 180deg;
        }

        .accordion-item.active>.accordion-heading>.accordion-toggle & {
            rotate: 180deg;
        }

        &.accordion-toggle {
            .accordion-item.active>& {
                rotate: 180deg;
            }
        }

        &.accordion-toggle {
            .accordion-item.active>.accordion-heading>& {
                rotate: 180deg;
            }
        }

        &.accordion-force-active {
            .accordion-item.active & {
                rotate: 180deg;
            }
        }
    }

    .accordion-item-active\:bg-neutral\/10 {
        &.accordion-item.active {
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }
        }

        .accordion-item.active>& {
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }
        }

        .accordion-item.active>.accordion-toggle & {
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }
        }

        .accordion-item.active>.accordion-heading>.accordion-toggle & {
            background-color: var(--color-neutral);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
            }
        }

        &.accordion-toggle {
            .accordion-item.active>& {
                background-color: var(--color-neutral);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
                }
            }
        }

        &.accordion-toggle {
            .accordion-item.active>.accordion-heading>& {
                background-color: var(--color-neutral);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
                }
            }
        }

        &.accordion-force-active {
            .accordion-item.active & {
                background-color: var(--color-neutral);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
                }
            }
        }
    }

    .\*\:accordion-item-active\:shadow-md {
        :is(& > *) {
            &.accordion-item.active {
                --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }

            .accordion-item.active>& {
                --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }

            .accordion-item.active>.accordion-toggle & {
                --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }

            .accordion-item.active>.accordion-heading>.accordion-toggle & {
                --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
            }

            &.accordion-toggle {
                .accordion-item.active>& {
                    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
                }
            }

            &.accordion-toggle {
                .accordion-item.active>.accordion-heading>& {
                    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
                }
            }

            &.accordion-force-active {
                .accordion-item.active & {
                    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
                    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
                }
            }
        }
    }

    .collapse-open\:block {
        &.collapse.open {
            display: block;
        }

        &.collapse-toggle.open {
            display: block;
        }

        .collapse.open>& {
            display: block;
        }

        .collapse-toggle.open>& {
            display: block;
        }
    }

    .collapse-open\:hidden {
        &.collapse.open {
            display: none;
        }

        &.collapse-toggle.open {
            display: none;
        }

        .collapse.open>& {
            display: none;
        }

        .collapse-toggle.open>& {
            display: none;
        }
    }

    .active-tab\:tab-active {
        &[data-tab].active {
            &:not([disabled]) {
                border-color: var(--color-primary);
                color: var(--color-primary);
            }

            .dhabj>.qqm0l&:not([disabled]) {
                background-color: var(--tab-bg);
                border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
                border-color: var(--tab-border-color);
                border-end-start-radius: 0;
                border-end-end-radius: 0;
                padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
                padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
                padding-bottom: var(--tab-border, 1px);
                padding-top: 0;
            }

            .dhabj>.qqm0l&:not([disabled]):before {
                content: "";
                display: block;
                position: absolute;
                z-index: 1;
                width: calc(100% + var(--radius-field, 0.375rem) * 2);
                height: var(--radius-field, 0.375rem);
                bottom: 0;
                background-size: var(--radius-field, 0.375rem);
                background-repeat: no-repeat;
                background-position: top left, top right;
                --tab-grad: calc(69% - var(--tab-border, 1px));
                --radius-start: radial-gradient(circle at top left,
                        transparent var(--tab-grad),
                        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
                --radius-end: radial-gradient(circle at top right,
                        transparent var(--tab-grad),
                        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
                background-image: var(--radius-start), var(--radius-end);
            }

            .dhabj>.qqm0l&:not([disabled]):first-child:before {
                background-image: var(--radius-end);
                background-position: top right;
            }

            .dhabj>.qqm0l&:not([disabled]):last-child:before {
                background-image: var(--radius-start);
                background-position: top left;
            }

            [dir="rtl"] .dhabj>.qqm0l&:not([disabled]):first-child:before {
                background-image: var(--radius-start);
                background-position: top left;
            }

            [dir="rtl"] .dhabj>.qqm0l&:not([disabled]):last-child:before {
                background-image: var(--radius-end);
                background-position: top right;
            }

            .dhabj>&:not([disabled])+.dhabj .active-tab\:tab-active:not([disabled]) {
                &:before {
                    background-image: var(--radius-end);
                    background-position: top right;
                }
            }

            .dhabj>.active-tab\:tab-active:not([disabled])+.dhabj &:not([disabled]) {
                &:before {
                    background-image: var(--radius-end);
                    background-position: top right;
                }
            }
        }

        [data-tab].active & {
            &:not([disabled]) {
                border-color: var(--color-primary);
                color: var(--color-primary);
            }

            .dhabj>.qqm0l&:not([disabled]) {
                background-color: var(--tab-bg);
                border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
                border-color: var(--tab-border-color);
                border-end-start-radius: 0;
                border-end-end-radius: 0;
                padding-inline-start: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
                padding-inline-end: calc(var(--tab-p, 1rem) - var(--tab-border, 1px));
                padding-bottom: var(--tab-border, 1px);
                padding-top: 0;
            }

            .dhabj>.qqm0l&:not([disabled]):before {
                content: "";
                display: block;
                position: absolute;
                z-index: 1;
                width: calc(100% + var(--radius-field, 0.375rem) * 2);
                height: var(--radius-field, 0.375rem);
                bottom: 0;
                background-size: var(--radius-field, 0.375rem);
                background-repeat: no-repeat;
                background-position: top left, top right;
                --tab-grad: calc(69% - var(--tab-border, 1px));
                --radius-start: radial-gradient(circle at top left,
                        transparent var(--tab-grad),
                        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
                --radius-end: radial-gradient(circle at top right,
                        transparent var(--tab-grad),
                        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
                        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
                        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));
                background-image: var(--radius-start), var(--radius-end);
            }

            .dhabj>.qqm0l&:not([disabled]):first-child:before {
                background-image: var(--radius-end);
                background-position: top right;
            }

            .dhabj>.qqm0l&:not([disabled]):last-child:before {
                background-image: var(--radius-start);
                background-position: top left;
            }

            [dir="rtl"] .dhabj>.qqm0l&:not([disabled]):first-child:before {
                background-image: var(--radius-start);
                background-position: top left;
            }

            [dir="rtl"] .dhabj>.qqm0l&:not([disabled]):last-child:before {
                background-image: var(--radius-end);
                background-position: top right;
            }

            .dhabj>&:not([disabled])+.dhabj .active-tab\:tab-active:not([disabled]) {
                &:before {
                    background-image: var(--radius-end);
                    background-position: top right;
                }
            }

            .dhabj>.active-tab\:tab-active:not([disabled])+.dhabj &:not([disabled]) {
                &:before {
                    background-image: var(--radius-end);
                    background-position: top right;
                }
            }
        }
    }

    .active-tab\:border-white {
        &[data-tab].active {
            border-color: var(--color-white);
        }

        [data-tab].active & {
            border-color: var(--color-white);
        }
    }

    .active-tab\:bg-primary {
        &[data-tab].active {
            background-color: var(--color-primary);
        }

        [data-tab].active & {
            background-color: var(--color-primary);
        }
    }

    .active-tab\:bg-linear-to-r {
        &[data-tab].active {
            --tw-gradient-position: to right;

            @supports (background-image: linear-gradient(in lab, red, red)) {
                --tw-gradient-position: to right in oklab;
            }

            background-image: linear-gradient(var(--tw-gradient-stops));
        }

        [data-tab].active & {
            --tw-gradient-position: to right;

            @supports (background-image: linear-gradient(in lab, red, red)) {
                --tw-gradient-position: to right in oklab;
            }

            background-image: linear-gradient(var(--tw-gradient-stops));
        }
    }

    .active-tab\:gradient-bg {
        &[data-tab].active {
            --darker-shade: var(--gradient-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --darker-shade: color-mix(in oklab, var(--gradient-color, var(--color-neutral)) 80%, black);
            }

            background-image: linear-gradient(var(--gradient-angle, 135deg), var(--gradient-color, var(--color-neutral)) 0%, var(--darker-shade) 100%);
        }

        [data-tab].active & {
            --darker-shade: var(--gradient-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --darker-shade: color-mix(in oklab, var(--gradient-color, var(--color-neutral)) 80%, black);
            }

            background-image: linear-gradient(var(--gradient-angle, 135deg), var(--gradient-color, var(--color-neutral)) 0%, var(--darker-shade) 100%);
        }
    }

    .active-tab\:from-primary {
        &[data-tab].active {
            --tw-gradient-from: var(--color-primary);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        [data-tab].active & {
            --tw-gradient-from: var(--color-primary);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
    }

    .active-tab\:bg-clip-text {
        &[data-tab].active {
            background-clip: text;
        }

        [data-tab].active & {
            background-clip: text;
        }
    }

    .active-tab\:text-base-100 {
        &[data-tab].active {
            color: var(--color-base-100);
        }

        [data-tab].active & {
            color: var(--color-base-100);
        }
    }

    .active-tab\:text-transparent {
        &[data-tab].active {
            color: transparent;
        }

        [data-tab].active & {
            color: transparent;
        }
    }

    .active-tab\:text-white {
        &[data-tab].active {
            color: var(--color-white);
        }

        [data-tab].active & {
            color: var(--color-white);
        }
    }

    .active-tab\:gradient-bg-primary {
        &[data-tab].active {
            --gradient-color: var(--color-primary);
        }

        [data-tab].active & {
            --gradient-color: var(--color-primary);
        }
    }

    .overlay-open\:translate-x-0 {
        &.open {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }

        .open & {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    .overlay-open\:opacity-100 {
        &.open {
            opacity: 100%;
        }

        .open & {
            opacity: 100%;
        }
    }

    .overlay-open\:duration-300 {
        &.open {
            --tw-duration: 300ms;
            transition-duration: 300ms;
        }

        .open & {
            --tw-duration: 300ms;
            transition-duration: 300ms;
        }
    }

    .carousel-active\:bg-primary {
        &.active {
            background-color: var(--color-primary);
        }

        .active & {
            background-color: var(--color-primary);
        }
    }

    .carousel-disabled\:btn-soft {
        &.disabled {
            --btn-shadow: "";
            color: var(--btn-color, var(--color-neutral));
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, var(--color-base-100));
            }

            border-width: 0;
            --btn-noise: none;

            &:focus-visible {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
                }
            }

            @media (hover: hover) {
                &:hover {
                    --btn-bg: var(--btn-color, var(--color-neutral));

                    @supports (color: color-mix(in lab, red, red)) {
                        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
                    }
                }
            }

            &.gmf3v {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
                }
            }
        }

        .disabled & {
            --btn-shadow: "";
            color: var(--btn-color, var(--color-neutral));
            --btn-bg: var(--btn-color, var(--color-neutral));

            @supports (color: color-mix(in lab, red, red)) {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, var(--color-base-100));
            }

            border-width: 0;
            --btn-noise: none;

            &:focus-visible {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
                }
            }

            @media (hover: hover) {
                &:hover {
                    --btn-bg: var(--btn-color, var(--color-neutral));

                    @supports (color: color-mix(in lab, red, red)) {
                        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
                    }
                }
            }

            &.gmf3v {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 20%, var(--color-base-100));
                }
            }
        }
    }

    .carousel-disabled\:btn-outline {
        &.disabled {
            --btn-shadow: "";
            --btn-bg: "";
            color: var(--btn-color, var(--color-neutral));
            --btn-border: var(--btn-color, var(--color-neutral));
            --btn-noise: none;
            outline-color: var(--btn-color, var(--color-neutral));

            @media (hover: hover) {
                &:hover {
                    --btn-bg: var(--btn-color, var(--color-neutral));

                    @supports (color: color-mix(in lab, red, red)) {
                        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                    }
                }
            }

            &:focus-visible {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }

                outline-width: 1px;
            }

            &.gmf3v {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }
            }
        }

        .disabled & {
            --btn-shadow: "";
            --btn-bg: "";
            color: var(--btn-color, var(--color-neutral));
            --btn-border: var(--btn-color, var(--color-neutral));
            --btn-noise: none;
            outline-color: var(--btn-color, var(--color-neutral));

            @media (hover: hover) {
                &:hover {
                    --btn-bg: var(--btn-color, var(--color-neutral));

                    @supports (color: color-mix(in lab, red, red)) {
                        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                    }
                }
            }

            &:focus-visible {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }

                outline-width: 1px;
            }

            &.gmf3v {
                --btn-bg: var(--btn-color, var(--color-neutral));

                @supports (color: color-mix(in lab, red, red)) {
                    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-neutral)) 10%, #0000);
                }
            }
        }
    }

    .carousel-disabled\:opacity-100 {
        &.disabled {
            opacity: 100%;
        }

        .disabled & {
            opacity: 100%;
        }
    }

    .selected\:block {
        &.selected {
            display: block;
        }

        .selected & {
            display: block;
        }
    }

    .selected\:select-active {
        &.selected {
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
            }

            color: var(--color-primary);
        }

        .selected & {
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
            }

            color: var(--color-primary);
        }
    }

    .select-disabled\:pointer-events-none {
        &.disabled {
            pointer-events: none;
        }

        .disabled & {
            pointer-events: none;
        }
    }

    .select-disabled\:opacity-40 {
        &.disabled {
            opacity: 40%;
        }

        .disabled & {
            opacity: 40%;
        }
    }

    .password-active\:block {
        &.active {
            display: block;
        }

        .active & {
            display: block;
        }
    }

    .password-active\:hidden {
        &.active {
            display: none;
        }

        .active & {
            display: none;
        }
    }

    .stepper-active\:text-bg-primary {
        &.active {
            background-color: var(--color-primary);
            color: var(--color-primary-content);
        }

        .active & {
            background-color: var(--color-primary);
            color: var(--color-primary-content);
        }
    }

    .stepper-active\:text-primary {
        &.active {
            color: var(--color-primary);
        }

        .active & {
            color: var(--color-primary);
        }
    }

    .stepper-success\:text-bg-primary {
        &.is-valid {
            background-color: var(--color-primary);
            color: var(--color-primary-content);
        }

        .is-valid & {
            background-color: var(--color-primary);
            color: var(--color-primary-content);
        }
    }

    .stepper-success\:text-bg-soft-primary {
        &.is-valid {
            color: var(--color-primary);
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
            }
        }

        .is-valid & {
            color: var(--color-primary);
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
            }
        }
    }

    .stepper-success\:bg-primary {
        &.is-valid {
            background-color: var(--color-primary);
        }

        .is-valid & {
            background-color: var(--color-primary);
        }
    }

    .stepper-success\:bg-success {
        &.is-valid {
            background-color: var(--color-success);
        }

        .is-valid & {
            background-color: var(--color-success);
        }
    }

    .stepper-success\:text-base-content\/50 {
        &.is-valid {
            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }
        }

        .is-valid & {
            color: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
            }
        }
    }

    .stepper-success\:text-primary {
        &.is-valid {
            color: var(--color-primary);
        }

        .is-valid & {
            color: var(--color-primary);
        }
    }

    .stepper-completed\:text-bg-success {
        &.completed {
            background-color: var(--color-success);
            color: var(--color-success-content);
        }

        .completed & {
            background-color: var(--color-success);
            color: var(--color-success-content);
        }
    }

    .stepper-completed\:bg-success {
        &.completed {
            background-color: var(--color-success);
        }

        .completed & {
            background-color: var(--color-success);
        }
    }

    .stepper-completed\:text-success {
        &.completed {
            color: var(--color-success);
        }

        .completed & {
            color: var(--color-success);
        }
    }

    .stepper-error\:text-bg-error {
        &.is-invalid {
            background-color: var(--color-error);
            color: var(--color-error-content);
        }

        .is-invalid & {
            background-color: var(--color-error);
            color: var(--color-error-content);
        }
    }

    .combo-box-selected\:block {
        &.selected {
            display: block;
        }

        .selected & {
            display: block;
        }
    }

    .combo-box-selected\:dropdown-active {
        &.selected {
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
            }

            color: var(--color-primary);
        }

        .selected & {
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
            }

            color: var(--color-primary);
        }
    }

    .datatable-ordering-asc\:block {
        &.dt-ordering-asc {
            display: block;
        }

        .dt-ordering-asc & {
            display: block;
        }
    }

    .datatable-ordering-desc\:block {
        &.dt-ordering-desc {
            display: block;
        }

        .dt-ordering-desc & {
            display: block;
        }
    }

    .file-upload-complete\:progress-success {
        &.complete {
            background-color: var(--color-success);
            color: var(--color-success-content);
        }

        .complete & {
            background-color: var(--color-success);
            color: var(--color-success-content);
        }
    }

    .intersect\:motion-preset-bounce {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
            --motion-translate-timing: var(--motion-bounce);
            --motion-translate-perceptual-duration-multiplier: 2;
            --motion-origin-opacity: 0;
            --motion-origin-translate-y: -25%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-bounce {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
            --motion-translate-timing: var(--motion-bounce);
            --motion-translate-perceptual-duration-multiplier: 2;
            --motion-origin-opacity: 0;
            --motion-origin-translate-y: -25%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-bounce {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
            --motion-translate-timing: var(--motion-bounce);
            --motion-translate-perceptual-duration-multiplier: 2;
            --motion-origin-opacity: 0;
            --motion-origin-translate-y: -25%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-bounce {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
            --motion-translate-timing: var(--motion-bounce);
            --motion-translate-perceptual-duration-multiplier: 2;
            --motion-origin-opacity: 0;
            --motion-origin-translate-y: -25%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-bounce {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
            --motion-translate-timing: var(--motion-bounce);
            --motion-translate-perceptual-duration-multiplier: 2;
            --motion-origin-opacity: 0;
            --motion-origin-translate-y: -25%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-pop {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-scale-timing: var(--motion-spring-bouncier);
            --motion-scale-perceptual-duration-multiplier: 2.035;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-pop {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-scale-timing: var(--motion-spring-bouncier);
            --motion-scale-perceptual-duration-multiplier: 2.035;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-pop {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-scale-timing: var(--motion-spring-bouncier);
            --motion-scale-perceptual-duration-multiplier: 2.035;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-pop {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-scale-timing: var(--motion-spring-bouncier);
            --motion-scale-perceptual-duration-multiplier: 2.035;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-pop {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-scale-timing: var(--motion-spring-bouncier);
            --motion-scale-perceptual-duration-multiplier: 2.035;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-down-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-left {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-left {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-left {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-left {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-left {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-right {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-right {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-right {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-right {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-right {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-x: -5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-up {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-up {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-up {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-up {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-blur-up {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-translate-y: 5%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-expand {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-expand {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-expand {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-expand {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-expand {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 50%;
            --motion-origin-scale-y: 50%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-shrink {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 150%;
            --motion-origin-scale-y: 150%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-shrink {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 150%;
            --motion-origin-scale-y: 150%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-shrink {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 150%;
            --motion-origin-scale-y: 150%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-shrink {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 150%;
            --motion-origin-scale-y: 150%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-shrink {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 150%;
            --motion-origin-scale-y: 150%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-lg {
        &:not([no-intersect]) {
            --motion-origin-blur: 10px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-lg {
        &:not([no-intersect]) {
            --motion-origin-blur: 10px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-lg {
        &:not([no-intersect]) {
            --motion-origin-blur: 10px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-lg {
        &:not([no-intersect]) {
            --motion-origin-blur: 10px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-lg {
        &:not([no-intersect]) {
            --motion-origin-blur: 10px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-focus-md {
        &:not([no-intersect]) {
            --motion-origin-blur: 5px;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration, var(--motion-duration)) * var(--motion-filter-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-filter-timing, var(--motion-timing)) var(--motion-filter-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down-lg {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -100%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down-lg {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -100%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down-lg {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -100%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down-lg {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -100%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-down-lg {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -100%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-left-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-right-md {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-up {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-up {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-up {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-up {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-slide-up {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 25%;
            --motion-origin-opacity: 0;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade-md {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade-md {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade-md {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade-md {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-preset-fade-md {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0;
            --motion-duration: 500ms;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-scale-in-\[0\.5\] {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 0.5;
            --motion-origin-scale-y: 0.5;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-scale-in-\[0\.5\] {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 0.5;
            --motion-origin-scale-y: 0.5;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-scale-in-\[0\.5\] {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 0.5;
            --motion-origin-scale-y: 0.5;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-scale-in-\[0\.5\] {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 0.5;
            --motion-origin-scale-y: 0.5;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-scale-in-\[0\.5\] {
        &:not([no-intersect]) {
            --motion-origin-scale-x: 0.5;
            --motion-origin-scale-y: 0.5;
            --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration, var(--motion-duration)) * var(--motion-scale-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-scale-timing, var(--motion-timing)) var(--motion-scale-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-0 {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0.001;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-0 {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0.001;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-0 {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0.001;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-0 {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0.001;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-0 {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0.001;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-\[0\%\] {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-\[0\%\] {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-\[0\%\] {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-\[0\%\] {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-opacity-in-\[0\%\] {
        &:not([no-intersect]) {
            --motion-origin-opacity: 0%;
            --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration, var(--motion-duration)) * var(--motion-opacity-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-opacity-timing, var(--motion-timing)) var(--motion-opacity-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-rotate-in-\[-10deg\] {
        &:not([no-intersect]) {
            --motion-origin-rotate: -10deg;
            --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-rotate-in-\[-10deg\] {
        &:not([no-intersect]) {
            --motion-origin-rotate: -10deg;
            --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-rotate-in-\[-10deg\] {
        &:not([no-intersect]) {
            --motion-origin-rotate: -10deg;
            --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-rotate-in-\[-10deg\] {
        &:not([no-intersect]) {
            --motion-origin-rotate: -10deg;
            --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-rotate-in-\[-10deg\] {
        &:not([no-intersect]) {
            --motion-origin-rotate: -10deg;
            --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration, var(--motion-duration)) * var(--motion-rotate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-rotate-timing, var(--motion-timing)) var(--motion-rotate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-100 {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 100%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-100 {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 100%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-100 {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 100%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-100 {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 100%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-100 {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 100%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[-56\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -56%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[-56\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -56%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[-56\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -56%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[-56\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -56%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[-56\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: -56%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[80\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 80%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[80\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 80%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[80\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 80%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[80\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 80%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-x-in-\[80\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-x: 80%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[-69\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -69%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[-69\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -69%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[-69\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -69%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[-69\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -69%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[-69\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: -69%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[82\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 82%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[82\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 82%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[82\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 82%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[82\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 82%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-translate-y-in-\[82\%\] {
        &:not([no-intersect]) {
            --motion-origin-translate-y: 82%;
            --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration, var(--motion-duration)) * var(--motion-translate-perceptual-duration-multiplier, var(--motion-perceptual-duration-multiplier))) var(--motion-translate-timing, var(--motion-timing)) var(--motion-translate-delay, var(--motion-delay)) both;
            animation: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation), var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
        }
    }

    .intersect\:motion-ease-spring-bouncier {
        &:not([no-intersect]) {
            --motion-timing: var(--motion-spring-bouncier);
            --motion-perceptual-duration-multiplier: 2.035;
            --motion-filter-timing: var(--motion-spring-smooth);
            --motion-opacity-timing: var(--motion-spring-smooth);
            --motion-background-color-timing: var(--motion-spring-smooth);
            --motion-text-color-timing: var(--motion-spring-smooth);
            --motion-filter-perceptual-duration-multiplier: 1.66;
            --motion-opacity-perceptual-duration-multiplier: 1.66;
            --motion-background-color-perceptual-duration-multiplier: 1.66;
            --motion-text-color-perceptual-duration-multiplier: 1.66;
        }
    }

    .intersect\:motion-ease-spring-bouncier {
        &:not([no-intersect]) {
            --motion-timing: var(--motion-spring-bouncier);
            --motion-perceptual-duration-multiplier: 2.035;
            --motion-filter-timing: var(--motion-spring-smooth);
            --motion-opacity-timing: var(--motion-spring-smooth);
            --motion-background-color-timing: var(--motion-spring-smooth);
            --motion-text-color-timing: var(--motion-spring-smooth);
            --motion-filter-perceptual-duration-multiplier: 1.66;
            --motion-opacity-perceptual-duration-multiplier: 1.66;
            --motion-background-color-perceptual-duration-multiplier: 1.66;
            --motion-text-color-perceptual-duration-multiplier: 1.66;
        }
    }

    .intersect\:motion-ease-spring-bouncier {
        &:not([no-intersect]) {
            --motion-timing: var(--motion-spring-bouncier);
            --motion-perceptual-duration-multiplier: 2.035;
            --motion-filter-timing: var(--motion-spring-smooth);
            --motion-opacity-timing: var(--motion-spring-smooth);
            --motion-background-color-timing: var(--motion-spring-smooth);
            --motion-text-color-timing: var(--motion-spring-smooth);
            --motion-filter-perceptual-duration-multiplier: 1.66;
            --motion-opacity-perceptual-duration-multiplier: 1.66;
            --motion-background-color-perceptual-duration-multiplier: 1.66;
            --motion-text-color-perceptual-duration-multiplier: 1.66;
        }
    }

    .intersect\:motion-ease-spring-bouncier {
        &:not([no-intersect]) {
            --motion-timing: var(--motion-spring-bouncier);
            --motion-perceptual-duration-multiplier: 2.035;
            --motion-filter-timing: var(--motion-spring-smooth);
            --motion-opacity-timing: var(--motion-spring-smooth);
            --motion-background-color-timing: var(--motion-spring-smooth);
            --motion-text-color-timing: var(--motion-spring-smooth);
            --motion-filter-perceptual-duration-multiplier: 1.66;
            --motion-opacity-perceptual-duration-multiplier: 1.66;
            --motion-background-color-perceptual-duration-multiplier: 1.66;
            --motion-text-color-perceptual-duration-multiplier: 1.66;
        }
    }

    .intersect\:motion-ease-spring-bouncier {
        &:not([no-intersect]) {
            --motion-timing: var(--motion-spring-bouncier);
            --motion-perceptual-duration-multiplier: 2.035;
            --motion-filter-timing: var(--motion-spring-smooth);
            --motion-opacity-timing: var(--motion-spring-smooth);
            --motion-background-color-timing: var(--motion-spring-smooth);
            --motion-text-color-timing: var(--motion-spring-smooth);
            --motion-filter-perceptual-duration-multiplier: 1.66;
            --motion-opacity-perceptual-duration-multiplier: 1.66;
            --motion-background-color-perceptual-duration-multiplier: 1.66;
            --motion-text-color-perceptual-duration-multiplier: 1.66;
        }
    }

    .intersect\:motion-delay-100 {
        &:not([no-intersect]) {
            --motion-delay: 100ms;
        }
    }

    .intersect\:motion-delay-100 {
        &:not([no-intersect]) {
            --motion-delay: 100ms;
        }
    }

    .intersect\:motion-delay-100 {
        &:not([no-intersect]) {
            --motion-delay: 100ms;
        }
    }

    .intersect\:motion-delay-100 {
        &:not([no-intersect]) {
            --motion-delay: 100ms;
        }
    }

    .intersect\:motion-delay-100 {
        &:not([no-intersect]) {
            --motion-delay: 100ms;
        }
    }

    .intersect\:motion-delay-200 {
        &:not([no-intersect]) {
            --motion-delay: 200ms;
        }
    }

    .intersect\:motion-delay-200 {
        &:not([no-intersect]) {
            --motion-delay: 200ms;
        }
    }

    .intersect\:motion-delay-200 {
        &:not([no-intersect]) {
            --motion-delay: 200ms;
        }
    }

    .intersect\:motion-delay-200 {
        &:not([no-intersect]) {
            --motion-delay: 200ms;
        }
    }

    .intersect\:motion-delay-200 {
        &:not([no-intersect]) {
            --motion-delay: 200ms;
        }
    }

    .intersect\:motion-delay-300 {
        &:not([no-intersect]) {
            --motion-delay: 300ms;
        }
    }

    .intersect\:motion-delay-300 {
        &:not([no-intersect]) {
            --motion-delay: 300ms;
        }
    }

    .intersect\:motion-delay-300 {
        &:not([no-intersect]) {
            --motion-delay: 300ms;
        }
    }

    .intersect\:motion-delay-300 {
        &:not([no-intersect]) {
            --motion-delay: 300ms;
        }
    }

    .intersect\:motion-delay-300 {
        &:not([no-intersect]) {
            --motion-delay: 300ms;
        }
    }

    .intersect\:motion-delay-400 {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-400 {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-400 {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-400 {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-400 {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-500 {
        &:not([no-intersect]) {
            --motion-delay: 500ms;
        }
    }

    .intersect\:motion-delay-500 {
        &:not([no-intersect]) {
            --motion-delay: 500ms;
        }
    }

    .intersect\:motion-delay-500 {
        &:not([no-intersect]) {
            --motion-delay: 500ms;
        }
    }

    .intersect\:motion-delay-500 {
        &:not([no-intersect]) {
            --motion-delay: 500ms;
        }
    }

    .intersect\:motion-delay-500 {
        &:not([no-intersect]) {
            --motion-delay: 500ms;
        }
    }

    .intersect\:motion-delay-600 {
        &:not([no-intersect]) {
            --motion-delay: 600ms;
        }
    }

    .intersect\:motion-delay-600 {
        &:not([no-intersect]) {
            --motion-delay: 600ms;
        }
    }

    .intersect\:motion-delay-600 {
        &:not([no-intersect]) {
            --motion-delay: 600ms;
        }
    }

    .intersect\:motion-delay-600 {
        &:not([no-intersect]) {
            --motion-delay: 600ms;
        }
    }

    .intersect\:motion-delay-600 {
        &:not([no-intersect]) {
            --motion-delay: 600ms;
        }
    }

    .intersect\:motion-delay-700 {
        &:not([no-intersect]) {
            --motion-delay: 700ms;
        }
    }

    .intersect\:motion-delay-700 {
        &:not([no-intersect]) {
            --motion-delay: 700ms;
        }
    }

    .intersect\:motion-delay-700 {
        &:not([no-intersect]) {
            --motion-delay: 700ms;
        }
    }

    .intersect\:motion-delay-700 {
        &:not([no-intersect]) {
            --motion-delay: 700ms;
        }
    }

    .intersect\:motion-delay-700 {
        &:not([no-intersect]) {
            --motion-delay: 700ms;
        }
    }

    .intersect\:motion-delay-800 {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-800 {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-800 {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-800 {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-800 {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-900 {
        &:not([no-intersect]) {
            --motion-delay: 900ms;
        }
    }

    .intersect\:motion-delay-900 {
        &:not([no-intersect]) {
            --motion-delay: 900ms;
        }
    }

    .intersect\:motion-delay-900 {
        &:not([no-intersect]) {
            --motion-delay: 900ms;
        }
    }

    .intersect\:motion-delay-900 {
        &:not([no-intersect]) {
            --motion-delay: 900ms;
        }
    }

    .intersect\:motion-delay-900 {
        &:not([no-intersect]) {
            --motion-delay: 900ms;
        }
    }

    .intersect\:motion-delay-1000 {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-1000 {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-1000 {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-1000 {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-1000 {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-1100 {
        &:not([no-intersect]) {
            --motion-delay: 1100ms;
        }
    }

    .intersect\:motion-delay-1100 {
        &:not([no-intersect]) {
            --motion-delay: 1100ms;
        }
    }

    .intersect\:motion-delay-1100 {
        &:not([no-intersect]) {
            --motion-delay: 1100ms;
        }
    }

    .intersect\:motion-delay-1100 {
        &:not([no-intersect]) {
            --motion-delay: 1100ms;
        }
    }

    .intersect\:motion-delay-1100 {
        &:not([no-intersect]) {
            --motion-delay: 1100ms;
        }
    }

    .intersect\:motion-delay-1200 {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-1200 {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-1200 {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-1200 {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-1200 {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-1250 {
        &:not([no-intersect]) {
            --motion-delay: 1250ms;
        }
    }

    .intersect\:motion-delay-1250 {
        &:not([no-intersect]) {
            --motion-delay: 1250ms;
        }
    }

    .intersect\:motion-delay-1250 {
        &:not([no-intersect]) {
            --motion-delay: 1250ms;
        }
    }

    .intersect\:motion-delay-1250 {
        &:not([no-intersect]) {
            --motion-delay: 1250ms;
        }
    }

    .intersect\:motion-delay-1250 {
        &:not([no-intersect]) {
            --motion-delay: 1250ms;
        }
    }

    .intersect\:motion-delay-1300 {
        &:not([no-intersect]) {
            --motion-delay: 1300ms;
        }
    }

    .intersect\:motion-delay-1300 {
        &:not([no-intersect]) {
            --motion-delay: 1300ms;
        }
    }

    .intersect\:motion-delay-1300 {
        &:not([no-intersect]) {
            --motion-delay: 1300ms;
        }
    }

    .intersect\:motion-delay-1300 {
        &:not([no-intersect]) {
            --motion-delay: 1300ms;
        }
    }

    .intersect\:motion-delay-1300 {
        &:not([no-intersect]) {
            --motion-delay: 1300ms;
        }
    }

    .intersect\:motion-delay-1400 {
        &:not([no-intersect]) {
            --motion-delay: 1400ms;
        }
    }

    .intersect\:motion-delay-1400 {
        &:not([no-intersect]) {
            --motion-delay: 1400ms;
        }
    }

    .intersect\:motion-delay-1400 {
        &:not([no-intersect]) {
            --motion-delay: 1400ms;
        }
    }

    .intersect\:motion-delay-1400 {
        &:not([no-intersect]) {
            --motion-delay: 1400ms;
        }
    }

    .intersect\:motion-delay-1400 {
        &:not([no-intersect]) {
            --motion-delay: 1400ms;
        }
    }

    .intersect\:motion-delay-1500 {
        &:not([no-intersect]) {
            --motion-delay: 1500ms;
        }
    }

    .intersect\:motion-delay-1500 {
        &:not([no-intersect]) {
            --motion-delay: 1500ms;
        }
    }

    .intersect\:motion-delay-1500 {
        &:not([no-intersect]) {
            --motion-delay: 1500ms;
        }
    }

    .intersect\:motion-delay-1500 {
        &:not([no-intersect]) {
            --motion-delay: 1500ms;
        }
    }

    .intersect\:motion-delay-1500 {
        &:not([no-intersect]) {
            --motion-delay: 1500ms;
        }
    }

    .intersect\:motion-delay-1600 {
        &:not([no-intersect]) {
            --motion-delay: 1600ms;
        }
    }

    .intersect\:motion-delay-1600 {
        &:not([no-intersect]) {
            --motion-delay: 1600ms;
        }
    }

    .intersect\:motion-delay-1600 {
        &:not([no-intersect]) {
            --motion-delay: 1600ms;
        }
    }

    .intersect\:motion-delay-1600 {
        &:not([no-intersect]) {
            --motion-delay: 1600ms;
        }
    }

    .intersect\:motion-delay-1600 {
        &:not([no-intersect]) {
            --motion-delay: 1600ms;
        }
    }

    .intersect\:motion-delay-1700 {
        &:not([no-intersect]) {
            --motion-delay: 1700ms;
        }
    }

    .intersect\:motion-delay-1700 {
        &:not([no-intersect]) {
            --motion-delay: 1700ms;
        }
    }

    .intersect\:motion-delay-1700 {
        &:not([no-intersect]) {
            --motion-delay: 1700ms;
        }
    }

    .intersect\:motion-delay-1700 {
        &:not([no-intersect]) {
            --motion-delay: 1700ms;
        }
    }

    .intersect\:motion-delay-1700 {
        &:not([no-intersect]) {
            --motion-delay: 1700ms;
        }
    }

    .intersect\:motion-delay-1800 {
        &:not([no-intersect]) {
            --motion-delay: 1800ms;
        }
    }

    .intersect\:motion-delay-1800 {
        &:not([no-intersect]) {
            --motion-delay: 1800ms;
        }
    }

    .intersect\:motion-delay-1800 {
        &:not([no-intersect]) {
            --motion-delay: 1800ms;
        }
    }

    .intersect\:motion-delay-1800 {
        &:not([no-intersect]) {
            --motion-delay: 1800ms;
        }
    }

    .intersect\:motion-delay-1800 {
        &:not([no-intersect]) {
            --motion-delay: 1800ms;
        }
    }

    .intersect\:motion-delay-1900 {
        &:not([no-intersect]) {
            --motion-delay: 1900ms;
        }
    }

    .intersect\:motion-delay-1900 {
        &:not([no-intersect]) {
            --motion-delay: 1900ms;
        }
    }

    .intersect\:motion-delay-1900 {
        &:not([no-intersect]) {
            --motion-delay: 1900ms;
        }
    }

    .intersect\:motion-delay-1900 {
        &:not([no-intersect]) {
            --motion-delay: 1900ms;
        }
    }

    .intersect\:motion-delay-1900 {
        &:not([no-intersect]) {
            --motion-delay: 1900ms;
        }
    }

    .intersect\:motion-delay-2000 {
        &:not([no-intersect]) {
            --motion-delay: 2000ms;
        }
    }

    .intersect\:motion-delay-2000 {
        &:not([no-intersect]) {
            --motion-delay: 2000ms;
        }
    }

    .intersect\:motion-delay-2000 {
        &:not([no-intersect]) {
            --motion-delay: 2000ms;
        }
    }

    .intersect\:motion-delay-2000 {
        &:not([no-intersect]) {
            --motion-delay: 2000ms;
        }
    }

    .intersect\:motion-delay-2000 {
        &:not([no-intersect]) {
            --motion-delay: 2000ms;
        }
    }

    .intersect\:motion-delay-2100 {
        &:not([no-intersect]) {
            --motion-delay: 2100ms;
        }
    }

    .intersect\:motion-delay-2100 {
        &:not([no-intersect]) {
            --motion-delay: 2100ms;
        }
    }

    .intersect\:motion-delay-2100 {
        &:not([no-intersect]) {
            --motion-delay: 2100ms;
        }
    }

    .intersect\:motion-delay-2100 {
        &:not([no-intersect]) {
            --motion-delay: 2100ms;
        }
    }

    .intersect\:motion-delay-2100 {
        &:not([no-intersect]) {
            --motion-delay: 2100ms;
        }
    }

    .intersect\:motion-delay-2200 {
        &:not([no-intersect]) {
            --motion-delay: 2200ms;
        }
    }

    .intersect\:motion-delay-2200 {
        &:not([no-intersect]) {
            --motion-delay: 2200ms;
        }
    }

    .intersect\:motion-delay-2200 {
        &:not([no-intersect]) {
            --motion-delay: 2200ms;
        }
    }

    .intersect\:motion-delay-2200 {
        &:not([no-intersect]) {
            --motion-delay: 2200ms;
        }
    }

    .intersect\:motion-delay-2200 {
        &:not([no-intersect]) {
            --motion-delay: 2200ms;
        }
    }

    .intersect\:motion-delay-2300 {
        &:not([no-intersect]) {
            --motion-delay: 2300ms;
        }
    }

    .intersect\:motion-delay-2300 {
        &:not([no-intersect]) {
            --motion-delay: 2300ms;
        }
    }

    .intersect\:motion-delay-2300 {
        &:not([no-intersect]) {
            --motion-delay: 2300ms;
        }
    }

    .intersect\:motion-delay-2300 {
        &:not([no-intersect]) {
            --motion-delay: 2300ms;
        }
    }

    .intersect\:motion-delay-2300 {
        &:not([no-intersect]) {
            --motion-delay: 2300ms;
        }
    }

    .intersect\:motion-delay-2500 {
        &:not([no-intersect]) {
            --motion-delay: 2500ms;
        }
    }

    .intersect\:motion-delay-2500 {
        &:not([no-intersect]) {
            --motion-delay: 2500ms;
        }
    }

    .intersect\:motion-delay-2500 {
        &:not([no-intersect]) {
            --motion-delay: 2500ms;
        }
    }

    .intersect\:motion-delay-2500 {
        &:not([no-intersect]) {
            --motion-delay: 2500ms;
        }
    }

    .intersect\:motion-delay-2500 {
        &:not([no-intersect]) {
            --motion-delay: 2500ms;
        }
    }

    .intersect\:motion-delay-4100 {
        &:not([no-intersect]) {
            --motion-delay: 4100ms;
        }
    }

    .intersect\:motion-delay-4100 {
        &:not([no-intersect]) {
            --motion-delay: 4100ms;
        }
    }

    .intersect\:motion-delay-4100 {
        &:not([no-intersect]) {
            --motion-delay: 4100ms;
        }
    }

    .intersect\:motion-delay-4100 {
        &:not([no-intersect]) {
            --motion-delay: 4100ms;
        }
    }

    .intersect\:motion-delay-4100 {
        &:not([no-intersect]) {
            --motion-delay: 4100ms;
        }
    }

    .intersect\:motion-delay-\[400ms\] {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-\[400ms\] {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-\[400ms\] {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-\[400ms\] {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-\[400ms\] {
        &:not([no-intersect]) {
            --motion-delay: 400ms;
        }
    }

    .intersect\:motion-delay-\[800ms\] {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-\[800ms\] {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-\[800ms\] {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-\[800ms\] {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-\[800ms\] {
        &:not([no-intersect]) {
            --motion-delay: 800ms;
        }
    }

    .intersect\:motion-delay-\[1000ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-\[1000ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-\[1000ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-\[1000ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-\[1000ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1000ms;
        }
    }

    .intersect\:motion-delay-\[1200ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-\[1200ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-\[1200ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-\[1200ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-delay-\[1200ms\] {
        &:not([no-intersect]) {
            --motion-delay: 1200ms;
        }
    }

    .intersect\:motion-duration-300 {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
        }
    }

    .intersect\:motion-duration-300 {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
        }
    }

    .intersect\:motion-duration-300 {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
        }
    }

    .intersect\:motion-duration-300 {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
        }
    }

    .intersect\:motion-duration-300 {
        &:not([no-intersect]) {
            --motion-duration: 300ms;
        }
    }

    .intersect\:motion-duration-800 {
        &:not([no-intersect]) {
            --motion-duration: 800ms;
        }
    }

    .intersect\:motion-duration-800 {
        &:not([no-intersect]) {
            --motion-duration: 800ms;
        }
    }

    .intersect\:motion-duration-800 {
        &:not([no-intersect]) {
            --motion-duration: 800ms;
        }
    }

    .intersect\:motion-duration-800 {
        &:not([no-intersect]) {
            --motion-duration: 800ms;
        }
    }

    .intersect\:motion-duration-800 {
        &:not([no-intersect]) {
            --motion-duration: 800ms;
        }
    }

    .intersect\:motion-duration-900 {
        &:not([no-intersect]) {
            --motion-duration: 900ms;
        }
    }

    .intersect\:motion-duration-900 {
        &:not([no-intersect]) {
            --motion-duration: 900ms;
        }
    }

    .intersect\:motion-duration-900 {
        &:not([no-intersect]) {
            --motion-duration: 900ms;
        }
    }

    .intersect\:motion-duration-900 {
        &:not([no-intersect]) {
            --motion-duration: 900ms;
        }
    }

    .intersect\:motion-duration-900 {
        &:not([no-intersect]) {
            --motion-duration: 900ms;
        }
    }

    .intersect\:motion-duration-\[0\.35s\] {
        &:not([no-intersect]) {
            --motion-duration: 0.35s;
        }
    }

    .intersect\:motion-duration-\[0\.35s\] {
        &:not([no-intersect]) {
            --motion-duration: 0.35s;
        }
    }

    .intersect\:motion-duration-\[0\.35s\] {
        &:not([no-intersect]) {
            --motion-duration: 0.35s;
        }
    }

    .intersect\:motion-duration-\[0\.35s\] {
        &:not([no-intersect]) {
            --motion-duration: 0.35s;
        }
    }

    .intersect\:motion-duration-\[0\.35s\] {
        &:not([no-intersect]) {
            --motion-duration: 0.35s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/scale {
        &:not([no-intersect]) {
            --motion-scale-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/scale {
        &:not([no-intersect]) {
            --motion-scale-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/scale {
        &:not([no-intersect]) {
            --motion-scale-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/scale {
        &:not([no-intersect]) {
            --motion-scale-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/scale {
        &:not([no-intersect]) {
            --motion-scale-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/translate {
        &:not([no-intersect]) {
            --motion-translate-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/translate {
        &:not([no-intersect]) {
            --motion-translate-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/translate {
        &:not([no-intersect]) {
            --motion-translate-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/translate {
        &:not([no-intersect]) {
            --motion-translate-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.53s\]\/translate {
        &:not([no-intersect]) {
            --motion-translate-duration: 0.53s;
        }
    }

    .intersect\:motion-duration-\[0\.63s\]\/rotate {
        &:not([no-intersect]) {
            --motion-rotate-duration: 0.63s;
        }
    }

    .intersect\:motion-duration-\[0\.63s\]\/rotate {
        &:not([no-intersect]) {
            --motion-rotate-duration: 0.63s;
        }
    }

    .intersect\:motion-duration-\[0\.63s\]\/rotate {
        &:not([no-intersect]) {
            --motion-rotate-duration: 0.63s;
        }
    }

    .intersect\:motion-duration-\[0\.63s\]\/rotate {
        &:not([no-intersect]) {
            --motion-rotate-duration: 0.63s;
        }
    }

    .intersect\:motion-duration-\[0\.63s\]\/rotate {
        &:not([no-intersect]) {
            --motion-rotate-duration: 0.63s;
        }
    }

    .intersect\:motion-reduce\:animate-none {
        &:not([no-intersect]) {
            @media (prefers-reduced-motion: reduce) {
                animation: none;
            }
        }
    }

    .\[\&\.direction-active\]\:border-primary {
        &.direction-active {
            border-color: var(--color-primary);
        }
    }

    .\[\&\.direction-active\]\:bg-primary\/10 {
        &.direction-active {
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
            }
        }
    }

    .\[\&\.direction-active\]\:text-primary {
        &.direction-active {
            color: var(--color-primary);
        }
    }

    .\[\&\.theme-active\]\:ring {
        &.theme-active {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .\[\&\>\.active\]\:text-bg-soft-primary {
        &>.active {
            color: var(--color-primary);
            background-color: var(--color-primary);

            @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-primary) 10%, var(--color-base-100));
            }
        }
    }
}

[data-theme='dark'] li:not(.bsinl, .p851q)> :not(ul, .bsinl, .collapse, .accordion-content, .btn).w0v1k {
    background-color: var(--color-primary);
    color: var(--color-primary-content);
}

body {
    color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}

.dt-layout-row:has(.pzmev),
.dt-layout-row:has(.upcfl),
.dt-layout-row:has(.sf16m),
.oau8l thead {
    display: none !important;
}

.flatpickr-calendar {
    visibility: hidden;
    position: absolute;
    display: flex;
    max-width: calc(var(--spacing) * 72);
    touch-action: manipulation;
    flex-direction: row;
    gap: calc(var(--spacing) * 1.5);
    overflow: hidden;
    border-radius: var(--radius-box);
    border-color: transparent;
    background-color: var(--color-base-100);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);

    &.hasWeeks {
        max-width: 21rem;
    }

    &::after,
    &::before {
        content: none;
    }
}

.flatpickr-current-month {
    position: absolute;
    inset-inline-start: calc(var(--spacing) * 4);
    display: flex;
    width: auto;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 1);
    padding-top: calc(var(--spacing) * 0);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        inset-inline-start: auto;
    }

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        inset-inline-end: calc(var(--spacing) * 4);
    }

    .flatpickr-monthDropdown-months,
    input.cur-year {
        display: flex;
        cursor: pointer;
        align-items: center;
        justify-content: center;
        border-radius: 0;
        border-style: var(--tw-border-style);
        border-width: 0px;
        vertical-align: middle;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        --tw-outline-style: none;
        outline-style: none;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        color: inherit;
    }

    span.qiynv {
        margin: calc(var(--spacing) * 0);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);

        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .numInputWrapper {
        display: inline-block;
        width: 6ch;

        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .flatpickr-monthDropdown-months {
        position: relative;
        margin-top: -1px;
        cursor: pointer;
        background-color: var(--color-base-100) !important;
        padding: calc(var(--spacing) * 0);
    }

    input.cur-year {
        margin: calc(var(--spacing) * 0);
        height: calc(var(--spacing) * 5);
        cursor: default;
        padding-inline-start: calc(var(--spacing) * 1);

        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }

        &[disabled],
        &[disabled]:hover {
            pointer-events: none;
            background-color: transparent;
        }
    }
}

.flatpickr-months {
    .flatpickr-month {
        position: relative;
        display: flex;
        height: calc(var(--spacing) * 15);
        align-items: center;
        overflow: hidden;
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
        padding-inline: calc(var(--spacing) * 4);
        text-align: center;
        -webkit-user-select: none;
        user-select: none;
    }

    .flatpickr-prev-month,
    .flatpickr-next-month {
        position: absolute;
        top: calc(var(--spacing) * 4);
        display: flex;
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
        align-items: center;
        justify-content: center;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }

        padding: calc(var(--spacing) * 0);
        color: var(--color-base-content);
        text-decoration-line: none;

        &:hover {
            @media (hover: hover) {
                fill: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
                }
            }
        }

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: 180deg;
        }

        svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
            fill: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
            }

            vertical-align: middle;
            color: var(--color-base-content);
        }
    }

    .flatpickr-prev-month:hover svg,
    .flatpickr-next-month:hover svg {
        fill: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
        }
    }

    .flatpickr-prev-month {
        &.flatpickr-prev-month {
            inset-inline-start: auto;
            inset-inline-end: 50px;

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-start: calc(var(--spacing) * 14);
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-end: auto;
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                --tw-skew-x: skewX(calc(1deg * -1));
                transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
            }
        }
    }

    .flatpickr-next-month {
        &.flatpickr-prev-month {
            inset-inline-start: calc(var(--spacing) * 0);
            inset-inline-end: calc(var(--spacing) * 0);
        }

        &.flatpickr-next-month {
            inset-inline-end: calc(var(--spacing) * 4);

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-start: calc(var(--spacing) * 4);
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-end: auto;
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                --tw-skew-x: skewX(calc(1deg * -1));
                transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
            }
        }
    }
}

.flatpickr-weekdays {
    display: flex;
    width: 100%;
    align-items: center;
    overflow: hidden;
    padding-inline: calc(var(--spacing) * 3);
    text-align: center;
}

.flatpickr-weekdaycontainer {
    display: flex;
    width: 100%;
}

span.flatpickr-weekday,
.yve2z .flatpickr-weekday {
    margin: calc(var(--spacing) * 0);
    display: block;
    cursor: default;
    text-align: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
}

.flatpickr-days {
    position: relative;
    display: flex;
    width: 100%;
    max-width: calc(var(--spacing) * 72);
    flex-wrap: wrap;
    overflow: hidden;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);

    &:focus {
        --tw-outline-style: none;
        outline-style: none;
    }

    .flatpickr-calendar.nwjxk & {
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0px;
    }

    & .dayContainer {
        display: flex;
        max-width: 100%;
        min-width: 100%;
        flex-wrap: wrap;
        justify-content: center;
        row-gap: calc(var(--spacing) * 0.5);
        padding: calc(var(--spacing) * 0);
        opacity: 100%;
        --tw-outline-style: none;
        outline-style: none;
    }
}

.flatpickr-day {
    position: relative;
    margin: calc(var(--spacing) * 0);
    display: flex;
    width: calc(var(--spacing) * 9.5);
    height: calc(var(--spacing) * 9.5);
    max-width: calc(var(--spacing) * 9.5);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);

    &.today:not(.selected) {
        border-color: transparent;
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }

        color: var(--color-primary);
    }

    &.inRange,
    &.prevMonthDay.inRange,
    &.nextMonthDay.inRange,
    &.today.inRange,
    &.prevMonthDay.today.inRange,
    &.nextMonthDay.today.inRange,
    &:hover,
    &.prevMonthDay:hover,
    &.nextMonthDay:hover,
    &:focus,
    &.prevMonthDay:focus,
    &.nextMonthDay:focus {
        cursor: pointer;
        --tw-outline-style: none;
        outline-style: none;
    }

    &:hover:not(.selected, .today, .inRange, .endRange),
    &:focus:not(.selected, .today, .inRange, .endRange),
    &.prevMonthDay:hover:not(.selected, .today, .inRange, .endRange),
    &.nextMonthDay:hover:not(.selected, .today, .inRange, .endRange),
    &.prevMonthDay:focus:not(.selected, .today, .inRange, .endRange),
    &.nextMonthDay:focus:not(.selected, .today, .inRange, .endRange) {
        border-color: transparent;
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
    }

    &.selected,
    &.startRange,
    &.endRange,
    &.selected.inRange,
    &.startRange.inRange,
    &.endRange.inRange,
    &.selected:focus,
    &.startRange:focus,
    &.endRange:focus,
    &.selected:hover,
    &.startRange:hover,
    &.endRange:hover,
    &.selected.prevMonthDay,
    &.startRange.prevMonthDay,
    &.endRange.prevMonthDay,
    &.selected.nextMonthDay,
    &.startRange.nextMonthDay,
    &.endRange.nextMonthDay {
        border-color: transparent;
        background-color: var(--color-primary);
        color: var(--color-primary-content);
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    &.inRange:not(.startRange):not(.endRange) {
        border-radius: 0;
        border-color: transparent;
    }

    z &.disabled,
    &.disabled:hover {
        pointer-events: none;
        border-color: transparent;
        background-color: transparent;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }

    &.prevMonthDay,
    &.nextMonthDay,
    &.notAllowed,
    &.notAllowed.prevMonthDay,
    &.notAllowed.nextMonthDay {
        border-color: transparent;
        background-color: transparent;
    }

    &.week.selected {
        border-radius: 0;
    }

    &.selected.startRange,
    &.startRange.startRange,
    &.endRange.startRange {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
    }

    &.selected.endRange,
    &.startRange.endRange,
    &.endRange.endRange {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
    }

    &.flatpickr-disabled,
    &.flatpickr-disabled:hover,
    &.prevMonthDay,
    &.nextMonthDay,
    &.notAllowed,
    &.notAllowed.prevMonthDay,
    &.notAllowed.nextMonthDay {
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }
}

.flatpickr-day.inRange,
.flatpickr-day.nextMonthDay.inRange,
.flatpickr-day.inRange:hover {
    background-color: var(--color-primary);

    @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }

    color: var(--color-primary);
    box-shadow: unset;
}

.flatpickr-day.selected.startRange+.endRange:not(:nth-child(7n + 1)),
.flatpickr-day.startRange.startRange+.endRange:not(:nth-child(7n + 1)),
.flatpickr-day.endRange.startRange+.endRange:not(:nth-child(7n + 1)) {
    box-shadow: unset;
}

.yve2z {

    & span.flatpickr-day,
    & span.flatpickr-day:hover {
        margin: calc(var(--spacing) * 0);
        display: flex;
        width: calc(var(--spacing) * 9.5);
        height: calc(var(--spacing) * 9.5);
        max-width: calc(var(--spacing) * 9.5);
        cursor: pointer;
        align-items: center;
        justify-content: center;
        text-align: center;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--color-base-content);

        &:not(:last-child) {
            margin-bottom: calc(var(--spacing) * 0.5);
        }
    }

    & .flatpickr-weeks {
        padding-block: calc(var(--spacing) * 2);
        padding-inline-start: calc(var(--spacing) * 2.5);
        padding-inline-end: calc(var(--spacing) * 0);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    & .flatpickr-weekday {
        padding-inline-start: calc(var(--spacing) * 3);
        line-height: 28px;
    }
}

.flatpickr-calendar .flatpickr-innerContainer:has(> .yve2z) {

    &>.flatpickr-rContainer .flatpickr-weekdays,
    &>.flatpickr-rContainer .flatpickr-days {
        padding-inline-start: calc(var(--spacing) * 0);
    }
}

.flatpickr-calendar.nwjxk .flatpickr-time {
    height: 100%;
    border-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }

    padding-inline: calc(var(--spacing) * 4.5);
    padding-block: calc(var(--spacing) * 3);
}

.flatpickr-time {
    max-height: unset;
    gap: calc(var(--spacing) * 2);
    --tw-leading: 30px;
    line-height: 30px;

    & .numInputWrapper {
        border-radius: var(--radius-field);
        height: inherit;
    }

    & input:hover,
    & .flatpickr-am-pm:hover,
    & input:focus,
    & .flatpickr-am-pm:focus {
        background: unset;
    }

    & .numInputWrapper span.arrowUp {
        top: 10%;
    }

    & .flatpickr-time-separator {
        color: var(--color-base-content);
    }
}

.flatpickr-time:after {
    content: none;
}

.flatpickr-calendar.nwjxk.v3tby>.flatpickr-time {
    border-color: transparent;
}

.flatpickr-time input.flatpickr-hour {
    height: auto;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: solid;
    border-style: solid;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
}

.flatpickr-time input.flatpickr-minute {
    height: auto;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: solid;
    border-style: solid;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    color: var(--color-base-content);
}

.flatpickr-time .flatpickr-am-pm {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    color: var(--color-base-content);
}

.numInputWrapper:hover,
.numInputWrapper span:hover {
    background: unset;
}

.flatpickr-current-month .numInputWrapper span.arrowUp:after,
.flatpickr-time .numInputWrapper span.arrowUp:after {
    border-bottom-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}

.flatpickr-current-month .numInputWrapper span.arrowDown:after,
.flatpickr-time .numInputWrapper span.arrowDown:after {
    border-top-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-top-color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}

.numInputWrapper span {
    border-style: var(--tw-border-style);
    border-width: 0px;
}

.flatpickr-calendar:not(.wp3g9):not(.open) {
    display: none;
}

.apexcharts-tooltip-series-group.apexcharts-active {
    padding-bottom: calc(var(--spacing) * 0) !important;
}

.apexcharts-tooltip.apexcharts-theme-light,
.apexcharts-tooltip.apexcharts-theme-dark {
    --tw-border-style: none !important;
    border-style: none !important;
    background-color: var(--color-base-100) !important;
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title,
.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
    border-color: var(--color-base-content) !important;

    @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
    }

    background-color: var(--color-base-100) !important;
}

.dt-layout-row:has(.pzmev),
.dt-layout-row:has(.upcfl),
.dt-layout-row:has(.sf16m),
.oau8l thead {
    display: none !important;
}

.flatpickr-calendar {
    visibility: hidden;
    position: absolute;
    display: flex;
    max-width: calc(var(--spacing) * 72);
    touch-action: manipulation;
    flex-direction: row;
    gap: calc(var(--spacing) * 1.5);
    overflow: hidden;
    border-radius: var(--radius-box);
    border-color: transparent;
    background-color: var(--color-base-100);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);

    &.hasWeeks {
        max-width: 21rem;
    }

    &::after,
    &::before {
        content: none;
    }
}

.flatpickr-current-month {
    position: absolute;
    inset-inline-start: calc(var(--spacing) * 4);
    display: flex;
    width: auto;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 1);
    padding-top: calc(var(--spacing) * 0);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        inset-inline-start: auto;
    }

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        inset-inline-end: calc(var(--spacing) * 4);
    }

    .flatpickr-monthDropdown-months,
    input.cur-year {
        display: flex;
        cursor: pointer;
        align-items: center;
        justify-content: center;
        border-radius: 0;
        border-style: var(--tw-border-style);
        border-width: 0px;
        vertical-align: middle;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        --tw-outline-style: none;
        outline-style: none;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        color: inherit;
    }

    span.qiynv {
        margin: calc(var(--spacing) * 0);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);

        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .numInputWrapper {
        display: inline-block;
        width: 6ch;

        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .flatpickr-monthDropdown-months {
        position: relative;
        margin-top: -1px;
        cursor: pointer;
        background-color: var(--color-base-100) !important;
        padding: calc(var(--spacing) * 0);
    }

    input.cur-year {
        margin: calc(var(--spacing) * 0);
        height: calc(var(--spacing) * 5);
        cursor: default;
        padding-inline-start: calc(var(--spacing) * 1);

        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }

        &[disabled],
        &[disabled]:hover {
            pointer-events: none;
            background-color: transparent;
        }
    }
}

.flatpickr-months {
    .flatpickr-month {
        position: relative;
        display: flex;
        height: calc(var(--spacing) * 15);
        align-items: center;
        overflow: hidden;
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
        padding-inline: calc(var(--spacing) * 4);
        text-align: center;
        -webkit-user-select: none;
        user-select: none;
    }

    .flatpickr-prev-month,
    .flatpickr-next-month {
        position: absolute;
        top: calc(var(--spacing) * 4);
        display: flex;
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
        align-items: center;
        justify-content: center;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }

        padding: calc(var(--spacing) * 0);
        color: var(--color-base-content);
        text-decoration-line: none;

        &:hover {
            @media (hover: hover) {
                fill: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
                }
            }
        }

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: 180deg;
        }

        svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
            fill: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
            }

            vertical-align: middle;
            color: var(--color-base-content);
        }
    }

    .flatpickr-prev-month:hover svg,
    .flatpickr-next-month:hover svg {
        fill: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
        }
    }

    .flatpickr-prev-month {
        &.flatpickr-prev-month {
            inset-inline-start: auto;
            inset-inline-end: 50px;

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-start: calc(var(--spacing) * 14);
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-end: auto;
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                --tw-skew-x: skewX(calc(1deg * -1));
                transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
            }
        }
    }

    .flatpickr-next-month {
        &.flatpickr-prev-month {
            inset-inline-start: calc(var(--spacing) * 0);
            inset-inline-end: calc(var(--spacing) * 0);
        }

        &.flatpickr-next-month {
            inset-inline-end: calc(var(--spacing) * 4);

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-start: calc(var(--spacing) * 4);
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-end: auto;
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                --tw-skew-x: skewX(calc(1deg * -1));
                transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
            }
        }
    }
}

.flatpickr-weekdays {
    display: flex;
    width: 100%;
    align-items: center;
    overflow: hidden;
    padding-inline: calc(var(--spacing) * 3);
    text-align: center;
}

.flatpickr-weekdaycontainer {
    display: flex;
    width: 100%;
}

span.flatpickr-weekday,
.yve2z .flatpickr-weekday {
    margin: calc(var(--spacing) * 0);
    display: block;
    cursor: default;
    text-align: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
}

.flatpickr-days {
    position: relative;
    display: flex;
    width: 100%;
    max-width: calc(var(--spacing) * 72);
    flex-wrap: wrap;
    overflow: hidden;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);

    &:focus {
        --tw-outline-style: none;
        outline-style: none;
    }

    .flatpickr-calendar.nwjxk & {
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0px;
    }

    & .dayContainer {
        display: flex;
        max-width: 100%;
        min-width: 100%;
        flex-wrap: wrap;
        justify-content: center;
        row-gap: calc(var(--spacing) * 0.5);
        padding: calc(var(--spacing) * 0);
        opacity: 100%;
        --tw-outline-style: none;
        outline-style: none;
    }
}

.flatpickr-day {
    position: relative;
    margin: calc(var(--spacing) * 0);
    display: flex;
    width: calc(var(--spacing) * 9.5);
    height: calc(var(--spacing) * 9.5);
    max-width: calc(var(--spacing) * 9.5);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);

    &.today:not(.selected) {
        border-color: transparent;
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }

        color: var(--color-primary);
    }

    &.inRange,
    &.prevMonthDay.inRange,
    &.nextMonthDay.inRange,
    &.today.inRange,
    &.prevMonthDay.today.inRange,
    &.nextMonthDay.today.inRange,
    &:hover,
    &.prevMonthDay:hover,
    &.nextMonthDay:hover,
    &:focus,
    &.prevMonthDay:focus,
    &.nextMonthDay:focus {
        cursor: pointer;
        --tw-outline-style: none;
        outline-style: none;
    }

    &:hover:not(.selected, .today, .inRange, .endRange),
    &:focus:not(.selected, .today, .inRange, .endRange),
    &.prevMonthDay:hover:not(.selected, .today, .inRange, .endRange),
    &.nextMonthDay:hover:not(.selected, .today, .inRange, .endRange),
    &.prevMonthDay:focus:not(.selected, .today, .inRange, .endRange),
    &.nextMonthDay:focus:not(.selected, .today, .inRange, .endRange) {
        border-color: transparent;
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
    }

    &.selected,
    &.startRange,
    &.endRange,
    &.selected.inRange,
    &.startRange.inRange,
    &.endRange.inRange,
    &.selected:focus,
    &.startRange:focus,
    &.endRange:focus,
    &.selected:hover,
    &.startRange:hover,
    &.endRange:hover,
    &.selected.prevMonthDay,
    &.startRange.prevMonthDay,
    &.endRange.prevMonthDay,
    &.selected.nextMonthDay,
    &.startRange.nextMonthDay,
    &.endRange.nextMonthDay {
        border-color: transparent;
        background-color: var(--color-primary);
        color: var(--color-primary-content);
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    &.inRange:not(.startRange):not(.endRange) {
        border-radius: 0;
        border-color: transparent;
    }

    z &.disabled,
    &.disabled:hover {
        pointer-events: none;
        border-color: transparent;
        background-color: transparent;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }

    &.prevMonthDay,
    &.nextMonthDay,
    &.notAllowed,
    &.notAllowed.prevMonthDay,
    &.notAllowed.nextMonthDay {
        border-color: transparent;
        background-color: transparent;
    }

    &.week.selected {
        border-radius: 0;
    }

    &.selected.startRange,
    &.startRange.startRange,
    &.endRange.startRange {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
    }

    &.selected.endRange,
    &.startRange.endRange,
    &.endRange.endRange {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
    }

    &.flatpickr-disabled,
    &.flatpickr-disabled:hover,
    &.prevMonthDay,
    &.nextMonthDay,
    &.notAllowed,
    &.notAllowed.prevMonthDay,
    &.notAllowed.nextMonthDay {
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }
}

.flatpickr-day.inRange,
.flatpickr-day.nextMonthDay.inRange,
.flatpickr-day.inRange:hover {
    background-color: var(--color-primary);

    @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }

    color: var(--color-primary);
    box-shadow: unset;
}

.flatpickr-day.selected.startRange+.endRange:not(:nth-child(7n + 1)),
.flatpickr-day.startRange.startRange+.endRange:not(:nth-child(7n + 1)),
.flatpickr-day.endRange.startRange+.endRange:not(:nth-child(7n + 1)) {
    box-shadow: unset;
}

.yve2z {

    & span.flatpickr-day,
    & span.flatpickr-day:hover {
        margin: calc(var(--spacing) * 0);
        display: flex;
        width: calc(var(--spacing) * 9.5);
        height: calc(var(--spacing) * 9.5);
        max-width: calc(var(--spacing) * 9.5);
        cursor: pointer;
        align-items: center;
        justify-content: center;
        text-align: center;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--color-base-content);

        &:not(:last-child) {
            margin-bottom: calc(var(--spacing) * 0.5);
        }
    }

    & .flatpickr-weeks {
        padding-block: calc(var(--spacing) * 2);
        padding-inline-start: calc(var(--spacing) * 2.5);
        padding-inline-end: calc(var(--spacing) * 0);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    & .flatpickr-weekday {
        padding-inline-start: calc(var(--spacing) * 3);
        line-height: 28px;
    }
}

.flatpickr-calendar .flatpickr-innerContainer:has(> .yve2z) {

    &>.flatpickr-rContainer .flatpickr-weekdays,
    &>.flatpickr-rContainer .flatpickr-days {
        padding-inline-start: calc(var(--spacing) * 0);
    }
}

.flatpickr-calendar.nwjxk .flatpickr-time {
    height: 100%;
    border-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }

    padding-inline: calc(var(--spacing) * 4.5);
    padding-block: calc(var(--spacing) * 3);
}

.flatpickr-time {
    max-height: unset;
    gap: calc(var(--spacing) * 2);
    --tw-leading: 30px;
    line-height: 30px;

    & .numInputWrapper {
        border-radius: var(--radius-field);
        height: inherit;
    }

    & input:hover,
    & .flatpickr-am-pm:hover,
    & input:focus,
    & .flatpickr-am-pm:focus {
        background: unset;
    }

    & .numInputWrapper span.arrowUp {
        top: 10%;
    }

    & .flatpickr-time-separator {
        color: var(--color-base-content);
    }
}

.flatpickr-time:after {
    content: none;
}

.flatpickr-calendar.nwjxk.v3tby>.flatpickr-time {
    border-color: transparent;
}

.flatpickr-time input.flatpickr-hour {
    height: auto;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: solid;
    border-style: solid;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
}

.flatpickr-time input.flatpickr-minute {
    height: auto;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: solid;
    border-style: solid;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    color: var(--color-base-content);
}

.flatpickr-time .flatpickr-am-pm {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    color: var(--color-base-content);
}

.numInputWrapper:hover,
.numInputWrapper span:hover {
    background: unset;
}

.flatpickr-current-month .numInputWrapper span.arrowUp:after,
.flatpickr-time .numInputWrapper span.arrowUp:after {
    border-bottom-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}

.flatpickr-current-month .numInputWrapper span.arrowDown:after,
.flatpickr-time .numInputWrapper span.arrowDown:after {
    border-top-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-top-color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}

.numInputWrapper span {
    border-style: var(--tw-border-style);
    border-width: 0px;
}

.flatpickr-calendar:not(.wp3g9):not(.open) {
    display: none;
}

.apexcharts-tooltip-series-group.apexcharts-active {
    padding-bottom: calc(var(--spacing) * 0) !important;
}

.apexcharts-tooltip.apexcharts-theme-light,
.apexcharts-tooltip.apexcharts-theme-dark {
    --tw-border-style: none !important;
    border-style: none !important;
    background-color: var(--color-base-100) !important;
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title,
.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
    border-color: var(--color-base-content) !important;

    @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
    }

    background-color: var(--color-base-100) !important;
}

.apexcharts-tooltip-series-group.apexcharts-active {
    padding-bottom: calc(var(--spacing) * 0) !important;
}

.apexcharts-tooltip.apexcharts-theme-light,
.apexcharts-tooltip.apexcharts-theme-dark {
    --tw-border-style: none !important;
    border-style: none !important;
    background-color: var(--color-base-100) !important;
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title,
.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
    border-color: var(--color-base-content) !important;

    @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
    }

    background-color: var(--color-base-100) !important;
}

.flatpickr-calendar {
    visibility: hidden;
    position: absolute;
    display: flex;
    max-width: calc(var(--spacing) * 72);
    touch-action: manipulation;
    flex-direction: row;
    gap: calc(var(--spacing) * 1.5);
    overflow: hidden;
    border-radius: var(--radius-box);
    border-color: transparent;
    background-color: var(--color-base-100);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);

    &.hasWeeks {
        max-width: 21rem;
    }

    &::after,
    &::before {
        content: none;
    }
}

.flatpickr-current-month {
    position: absolute;
    inset-inline-start: calc(var(--spacing) * 4);
    display: flex;
    width: auto;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 1);
    padding-top: calc(var(--spacing) * 0);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        inset-inline-start: auto;
    }

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        inset-inline-end: calc(var(--spacing) * 4);
    }

    .flatpickr-monthDropdown-months,
    input.cur-year {
        display: flex;
        cursor: pointer;
        align-items: center;
        justify-content: center;
        border-radius: 0;
        border-style: var(--tw-border-style);
        border-width: 0px;
        vertical-align: middle;
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
        --tw-outline-style: none;
        outline-style: none;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        color: inherit;
    }

    span.qiynv {
        margin: calc(var(--spacing) * 0);
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);

        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .numInputWrapper {
        display: inline-block;
        width: 6ch;

        &:hover {
            @media (hover: hover) {
                background-color: transparent;
            }
        }
    }

    .flatpickr-monthDropdown-months {
        position: relative;
        margin-top: -1px;
        cursor: pointer;
        background-color: var(--color-base-100) !important;
        padding: calc(var(--spacing) * 0);
    }

    input.cur-year {
        margin: calc(var(--spacing) * 0);
        height: calc(var(--spacing) * 5);
        cursor: default;
        padding-inline-start: calc(var(--spacing) * 1);

        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }

        &[disabled],
        &[disabled]:hover {
            pointer-events: none;
            background-color: transparent;
        }
    }
}

.flatpickr-months {
    .flatpickr-month {
        position: relative;
        display: flex;
        height: calc(var(--spacing) * 15);
        align-items: center;
        overflow: hidden;
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
        padding-inline: calc(var(--spacing) * 4);
        text-align: center;
        -webkit-user-select: none;
        user-select: none;
    }

    .flatpickr-prev-month,
    .flatpickr-next-month {
        position: absolute;
        top: calc(var(--spacing) * 4);
        display: flex;
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
        align-items: center;
        justify-content: center;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }

        padding: calc(var(--spacing) * 0);
        color: var(--color-base-content);
        text-decoration-line: none;

        &:hover {
            @media (hover: hover) {
                fill: var(--color-base-content);

                @supports (color: color-mix(in lab, red, red)) {
                    fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
                }
            }
        }

        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            rotate: 180deg;
        }

        svg {
            width: calc(var(--spacing) * 3);
            height: calc(var(--spacing) * 3);
            fill: var(--color-base-content);

            @supports (color: color-mix(in lab, red, red)) {
                fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
            }

            vertical-align: middle;
            color: var(--color-base-content);
        }
    }

    .flatpickr-prev-month:hover svg,
    .flatpickr-next-month:hover svg {
        fill: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            fill: color-mix(in oklab, var(--color-base-content) 90%, transparent);
        }
    }

    .flatpickr-prev-month {
        &.flatpickr-prev-month {
            inset-inline-start: auto;
            inset-inline-end: 50px;

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-start: calc(var(--spacing) * 14);
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-end: auto;
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                --tw-skew-x: skewX(calc(1deg * -1));
                transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
            }
        }
    }

    .flatpickr-next-month {
        &.flatpickr-prev-month {
            inset-inline-start: calc(var(--spacing) * 0);
            inset-inline-end: calc(var(--spacing) * 0);
        }

        &.flatpickr-next-month {
            inset-inline-end: calc(var(--spacing) * 4);

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-start: calc(var(--spacing) * 4);
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                inset-inline-end: auto;
            }

            &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
                --tw-skew-x: skewX(calc(1deg * -1));
                transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
            }
        }
    }
}

.flatpickr-weekdays {
    display: flex;
    width: 100%;
    align-items: center;
    overflow: hidden;
    padding-inline: calc(var(--spacing) * 3);
    text-align: center;
}

.flatpickr-weekdaycontainer {
    display: flex;
    width: 100%;
}

span.flatpickr-weekday,
.yve2z .flatpickr-weekday {
    margin: calc(var(--spacing) * 0);
    display: block;
    cursor: default;
    text-align: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
}

.flatpickr-days {
    position: relative;
    display: flex;
    width: 100%;
    max-width: calc(var(--spacing) * 72);
    flex-wrap: wrap;
    overflow: hidden;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);

    &:focus {
        --tw-outline-style: none;
        outline-style: none;
    }

    .flatpickr-calendar.nwjxk & {
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0px;
    }

    & .dayContainer {
        display: flex;
        max-width: 100%;
        min-width: 100%;
        flex-wrap: wrap;
        justify-content: center;
        row-gap: calc(var(--spacing) * 0.5);
        padding: calc(var(--spacing) * 0);
        opacity: 100%;
        --tw-outline-style: none;
        outline-style: none;
    }
}

.flatpickr-day {
    position: relative;
    margin: calc(var(--spacing) * 0);
    display: flex;
    width: calc(var(--spacing) * 9.5);
    height: calc(var(--spacing) * 9.5);
    max-width: calc(var(--spacing) * 9.5);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);

    &.today:not(.selected) {
        border-color: transparent;
        background-color: var(--color-primary);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }

        color: var(--color-primary);
    }

    &.inRange,
    &.prevMonthDay.inRange,
    &.nextMonthDay.inRange,
    &.today.inRange,
    &.prevMonthDay.today.inRange,
    &.nextMonthDay.today.inRange,
    &:hover,
    &.prevMonthDay:hover,
    &.nextMonthDay:hover,
    &:focus,
    &.prevMonthDay:focus,
    &.nextMonthDay:focus {
        cursor: pointer;
        --tw-outline-style: none;
        outline-style: none;
    }

    &:hover:not(.selected, .today, .inRange, .endRange),
    &:focus:not(.selected, .today, .inRange, .endRange),
    &.prevMonthDay:hover:not(.selected, .today, .inRange, .endRange),
    &.nextMonthDay:hover:not(.selected, .today, .inRange, .endRange),
    &.prevMonthDay:focus:not(.selected, .today, .inRange, .endRange),
    &.nextMonthDay:focus:not(.selected, .today, .inRange, .endRange) {
        border-color: transparent;
        background-color: var(--color-neutral);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 10%, transparent);
        }
    }

    &.selected,
    &.startRange,
    &.endRange,
    &.selected.inRange,
    &.startRange.inRange,
    &.endRange.inRange,
    &.selected:focus,
    &.startRange:focus,
    &.endRange:focus,
    &.selected:hover,
    &.startRange:hover,
    &.endRange:hover,
    &.selected.prevMonthDay,
    &.startRange.prevMonthDay,
    &.endRange.prevMonthDay,
    &.selected.nextMonthDay,
    &.startRange.nextMonthDay,
    &.endRange.nextMonthDay {
        border-color: transparent;
        background-color: var(--color-primary);
        color: var(--color-primary-content);
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-shadow-color: var(--color-base-300);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-base-300) 20%, transparent) var(--tw-shadow-alpha), transparent);
        }
    }

    &.inRange:not(.startRange):not(.endRange) {
        border-radius: 0;
        border-color: transparent;
    }

    z &.disabled,
    &.disabled:hover {
        pointer-events: none;
        border-color: transparent;
        background-color: transparent;
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }

    &.prevMonthDay,
    &.nextMonthDay,
    &.notAllowed,
    &.notAllowed.prevMonthDay,
    &.notAllowed.nextMonthDay {
        border-color: transparent;
        background-color: transparent;
    }

    &.week.selected {
        border-radius: 0;
    }

    &.selected.startRange,
    &.startRange.startRange,
    &.endRange.startRange {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
    }

    &.selected.endRange,
    &.startRange.endRange,
    &.endRange.endRange {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
    }

    &.flatpickr-disabled,
    &.flatpickr-disabled:hover,
    &.prevMonthDay,
    &.nextMonthDay,
    &.notAllowed,
    &.notAllowed.prevMonthDay,
    &.notAllowed.nextMonthDay {
        color: var(--color-base-content);

        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }
}

.flatpickr-day.inRange,
.flatpickr-day.nextMonthDay.inRange,
.flatpickr-day.inRange:hover {
    background-color: var(--color-primary);

    @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }

    color: var(--color-primary);
    box-shadow: unset;
}

.flatpickr-day.selected.startRange+.endRange:not(:nth-child(7n + 1)),
.flatpickr-day.startRange.startRange+.endRange:not(:nth-child(7n + 1)),
.flatpickr-day.endRange.startRange+.endRange:not(:nth-child(7n + 1)) {
    box-shadow: unset;
}

.yve2z {

    & span.flatpickr-day,
    & span.flatpickr-day:hover {
        margin: calc(var(--spacing) * 0);
        display: flex;
        width: calc(var(--spacing) * 9.5);
        height: calc(var(--spacing) * 9.5);
        max-width: calc(var(--spacing) * 9.5);
        cursor: pointer;
        align-items: center;
        justify-content: center;
        text-align: center;
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        color: var(--color-base-content);

        &:not(:last-child) {
            margin-bottom: calc(var(--spacing) * 0.5);
        }
    }

    & .flatpickr-weeks {
        padding-block: calc(var(--spacing) * 2);
        padding-inline-start: calc(var(--spacing) * 2.5);
        padding-inline-end: calc(var(--spacing) * 0);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    & .flatpickr-weekday {
        padding-inline-start: calc(var(--spacing) * 3);
        line-height: 28px;
    }
}

.flatpickr-calendar .flatpickr-innerContainer:has(> .yve2z) {

    &>.flatpickr-rContainer .flatpickr-weekdays,
    &>.flatpickr-rContainer .flatpickr-days {
        padding-inline-start: calc(var(--spacing) * 0);
    }
}

.flatpickr-calendar.nwjxk .flatpickr-time {
    height: 100%;
    border-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }

    padding-inline: calc(var(--spacing) * 4.5);
    padding-block: calc(var(--spacing) * 3);
}

.flatpickr-time {
    max-height: unset;
    gap: calc(var(--spacing) * 2);
    --tw-leading: 30px;
    line-height: 30px;

    & .numInputWrapper {
        border-radius: var(--radius-field);
        height: inherit;
    }

    & input:hover,
    & .flatpickr-am-pm:hover,
    & input:focus,
    & .flatpickr-am-pm:focus {
        background: unset;
    }

    & .numInputWrapper span.arrowUp {
        top: 10%;
    }

    & .flatpickr-time-separator {
        color: var(--color-base-content);
    }
}

.flatpickr-time:after {
    content: none;
}

.flatpickr-calendar.nwjxk.v3tby>.flatpickr-time {
    border-color: transparent;
}

.flatpickr-time input.flatpickr-hour {
    height: auto;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: solid;
    border-style: solid;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
}

.flatpickr-time input.flatpickr-minute {
    height: auto;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: solid;
    border-style: solid;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    color: var(--color-base-content);
}

.flatpickr-time .flatpickr-am-pm {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-field);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: inherit;
    line-height: inherit;
    color: var(--color-base-content);
}

.numInputWrapper:hover,
.numInputWrapper span:hover {
    background: unset;
}

.flatpickr-current-month .numInputWrapper span.arrowUp:after,
.flatpickr-time .numInputWrapper span.arrowUp:after {
    border-bottom-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}

.flatpickr-current-month .numInputWrapper span.arrowDown:after,
.flatpickr-time .numInputWrapper span.arrowDown:after {
    border-top-color: var(--color-base-content);

    @supports (color: color-mix(in lab, red, red)) {
        border-top-color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}

.numInputWrapper span {
    border-style: var(--tw-border-style);
    border-width: 0px;
}

.flatpickr-calendar:not(.wp3g9):not(.open) {
    display: none;
}

@keyframes slideOut {
    0% {
        transform: translateX(0);
    }

    100% {
        transform: translateX(100%);
    }
}

#slide {
    animation: slideOut 4s forwards;
    animation-delay: 2s;
}

@keyframes draw {
    to {
        stroke-dashoffset: 0;
    }
}

@keyframes fadeIn {
    from {
        fill-opacity: 0;
    }

    to {
        fill-opacity: 1;
    }
}

.d101o {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    animation: draw 5s ease-in-out forwards, fadeIn 5s ease-in-out forwards;
}

.dot {
    position: absolute;
    border-radius: 50%;
    opacity: 0.7;
    animation: moveDots linear infinite;
}

@keyframes moveDots {
    0% {
        transform: translate(0, 0);
    }

    100% {
        transform: translate(var(--move-x), var(--move-y));
    }
}

.o79s3 {
    .h4zzk {
        fill: none;
        stroke-dasharray: 400;
        stroke-dashoffset: 400;
        animation-duration: 2s;
        animation-fill-mode: forwards;
        animation-name: draw;
        animation-iteration-count: infinite;

        &.svluu {
            animation-delay: 0.2s infinite;
        }

        &.u6ltt {
            animation-delay: 0.5s infinite;
        }
    }
}

@keyframes draw {
    0% {
        stroke-dashoffset: 400;
    }

    50% {
        stroke-dashoffset: 10;
    }

    100% {
        stroke-dashoffset: 400;
    }
}


@layer base {
    @media (prefers-color-scheme: dark) {
        :root {
            color-scheme: dark;
            --color-base-100: oklch(31.23% 0.026 301.24);
            --color-base-200: oklch(25.39% 0.025 298.72);
            --color-base-300: oklch(23.44% 0.0194 298.63);
            --color-base-content: oklch(84.98% 0.014 295.28);
            --color-primary: oklch(53.93% 0.271 286.75);
            --color-primary-content: oklch(88.22% 0.062 290.17);
            --color-secondary: oklch(49.12% 0.021 303.05);
            --color-secondary-content: oklch(88.83% 0.007 304.23);
            --color-accent: oklch(54.61% 0.215 262.88);
            --color-accent-content: oklch(88.23% 0.057 254.13);
            --color-neutral: oklch(65.75% 0.022 294.95);
            --color-neutral-content: oklch(18.51% 0.017 301.92);
            --color-info: oklch(60.89% 0.111 221.72);
            --color-info-content: oklch(91.67% 0.077 205.04);
            --color-success: oklch(67.35% 0.201 146.84);
            --color-success-content: oklch(91.38% 0.069 168.24);
            --color-warning: oklch(72.59% 0.152 69.05);
            --color-warning-content: oklch(96.07% 0.057 93.2);
            --color-error: oklch(59.54% 0.208 26.28);
            --color-error-content: oklch(93.4% 0.039 54.86);
            --radius-selector: 0.25rem;
            --radius-field: 0.375rem;
            --radius-box: 0.5rem;
            --size-selector: 0.25rem;
            --size-field: 0.25rem;
            --border: 1px;
            --depth: 0;
            --noise: 0;
        }
    }
}


@layer base {

    :root:has(input.theme-controller[value=dark]:checked),
    [data-theme=dark] {
        color-scheme: dark;
        --color-base-100: oklch(31.23% 0.026 301.24);
        --color-base-200: oklch(25.39% 0.025 298.72);
        --color-base-300: oklch(23.44% 0.0194 298.63);
        --color-base-content: oklch(84.98% 0.014 295.28);
        --color-primary: #1D378D;
        --color-primary-content: oklch(88.22% 0.062 290.17);
        --color-secondary: oklch(49.12% 0.021 303.05);
        --color-secondary-content: oklch(88.83% 0.007 304.23);
        --color-accent: oklch(54.61% 0.215 262.88);
        --color-accent-content: oklch(88.23% 0.057 254.13);
        --color-neutral: oklch(65.75% 0.022 294.95);
        --color-neutral-content: oklch(18.51% 0.017 301.92);
        --color-info: oklch(60.89% 0.111 221.72);
        --color-info-content: oklch(91.67% 0.077 205.04);
        --color-success: oklch(67.35% 0.201 146.84);
        --color-success-content: oklch(91.38% 0.069 168.24);
        --color-warning: oklch(72.59% 0.152 69.05);
        --color-warning-content: oklch(96.07% 0.057 93.2);
        --color-error: oklch(59.54% 0.208 26.28);
        --color-error-content: oklch(93.4% 0.039 54.86);
        --radius-selector: 0.25rem;
        --radius-field: 0.375rem;
        --radius-box: 0.5rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 0;
        --noise: 0;
    }
}

@layer base {

    :root:has(input.theme-controller[value=black]:checked),
    [data-theme=black] {
        color-scheme: dark;
        --color-base-100: oklch(23.2% 0.006 285.95);
        --color-base-200: oklch(14% 0.005 285.823);
        --color-base-300: oklch(14% 0 0);
        --color-base-content: oklch(96% 0.001 286.375);
        --color-primary: #1D378D;
        --color-primary-content: oklch(98% 0.022 95.277);
        --color-secondary: oklch(60% 0.118 184.704);
        --color-secondary-content: oklch(98% 0.014 180.72);
        --color-accent: oklch(0.51 0.27 271.36);
        --color-accent-content: oklch(100% 0 0);
        --color-neutral: oklch(98% 0 0);
        --color-neutral-content: oklch(37% 0.044 257.287);
        --color-info: oklch(58% 0.158 241.966);
        --color-info-content: oklch(97% 0.013 236.62);
        --color-success: oklch(64% 0.2 131.684);
        --color-success-content: oklch(98% 0.031 120.757);
        --color-warning: oklch(55% 0.163 48.998);
        --color-warning-content: oklch(98% 0.026 102.212);
        --color-error: oklch(63% 0.237 25.331);
        --color-error-content: oklch(97% 0.013 17.38);
        --radius-selector: 2rem;
        --radius-field: 0.25rem;
        --radius-box: 0.5rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 2px;
        --depth: 1;
        --noise: 0;
    }
}





@layer base {

    :root:has(input.theme-controller[value=vscode]:checked),
    [data-theme=vscode] {
        color-scheme: "dark";
        --color-base-100: oklch(0.18 0.02 271.27);
        --color-base-200: oklch(0.22 0.02 271.67);
        --color-base-300: oklch(0.28 0.03 270.91);
        --color-base-content: oklch(0.994 0 0);
        --color-primary: #1D378D;
        --color-primary-content: oklch(0.94 0.03 232.39);
        --color-secondary: oklch(88% 0.059 254.128);
        --color-secondary-content: oklch(0 0 0);
        --color-accent: oklch(0.5636 0.0173 273.66);
        --color-accent-content: oklch(86% 0.022 252.894);
        --color-neutral: oklch(86% 0.022 252.894);
        --color-neutral-content: oklch(14% 0 0);
        --color-info: oklch(0.6 0.1 269.83);
        --color-info-content: oklch(0.9 0.01 238.47);
        --color-success: oklch(0.7 0.15 159.83);
        --color-success-content: oklch(0.9 0.01 238.47);
        --color-warning: oklch(0.8 0.1 100.65);
        --color-warning-content: oklch(0 0 0);
        --color-error: oklch(0.64 0.25 19.69);
        --color-error-content: oklch(0.9 0.01 238.47);
        --radius-selector: 0rem;
        --radius-field: 0rem;
        --radius-box: 0rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 1;
        --noise: 0;
    }
}

@layer base {

    :root,
    [data-theme] {
        background-color: var(--root-bg, var(--color-base-100));
        color: var(--color-base-content);
    }
}

@layer base {
    :root {
        --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
    }

    .chat {
        --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
    }

    .tooltip {
        --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
    }
}

@layer base {
    @property --radialprogress {
        syntax: "<percentage>";
        inherits: true;
        initial-value: 0%;
    }
}

@layer base {

    button:not(:disabled),
    [role="button"]:not(:disabled) {
        cursor: pointer;
    }
}

@layer base {
    :root {
        scrollbar-color: currentColor #0000;

        @supports (color: color-mix(in lab, red, red)) {
            scrollbar-color: color-mix(in oklch, currentColor 20%, #0000) #0000;
        }
    }
}

@keyframes indeterminate-progress {
    0% {
        background-position-x: -75%;
    }

    50% {
        background-position-x: 125%;
    }

    100% {
        background-position-x: -75%;
    }
}

@keyframes progress-bar-stripes {
    0% {
        background-position-x: 0.75rem;
    }
}

@keyframes radio {
    0% {
        padding: 5px;
    }

    50% {
        padding: 3px;
    }
}

@keyframes radio-inset {
    0% {
        padding: 1px;
    }

    50% {
        padding: 4px;
    }
}

@keyframes skeleton {
    0% {
        background-position: 150%;
    }

    100% {
        background-position: -50%;
    }
}



@layer base {

    :root:has(input.theme-controller[value=corporate-dark]:checked),
    [data-theme="corporate-dark"] {
        color-scheme: normal;
        --font-sans: 'Public Sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto;
    }
}

@layer base {

    :root:has(input.theme-controller[value=corporate-dark]:checked),
    [data-theme="corporate-dark"] {
        color-scheme: dark;
        --color-base-100: oklch(23.2% 0.006 285.95);
        --color-base-200: oklch(0.2694 0.0037 286.15);
        --color-base-300: oklch(14% 0 0);
        --color-base-content: oklch(96% 0.001 286.375);
        --color-primary: #1D378D;
        --color-primary-content: oklch(97.05% 0.014 254.6);
        --color-secondary: oklch(55.79% 0.022 301.91);
        --color-secondary-content: oklch(95.05% 0.003 308.43);
        --color-accent: oklch(65.59% 0.212 354.31);
        --color-accent-content: oklch(97.14% 0.014 343.2);
        --color-neutral: oklch(0.8681 0.033 285.69);
        --color-neutral-content: oklch(82.15% 0.055 277.12);
        --color-info: oklch(70.38% 0.123 182.5);
        --color-info-content: oklch(98.36% 0.014 180.72);
        --color-success: oklch(76.81% 0.204 130.85);
        --color-success-content: oklch(98.57% 0.031 120.76);
        --color-warning: oklch(79.52% 0.162 86.05);
        --color-warning-content: oklch(98.73% 0.026 102.21);
        --color-error: oklch(64.5% 0.215 16.44);
        --color-error-content: oklch(96.94% 0.015 12.42);
        --radius-selector: 0.125rem;
        --radius-field: 0.25rem;
        --radius-box: 0.375rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 1;
        --noise: 0;
    }
}

@layer base {
    @property --motion-bounce {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765, 1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785, 0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953, 0.973, 1, 0.988, 0.984, 0.988, 1);
    }

    @property --motion-spring-smooth {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
    }

    @property --motion-spring-snappy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
    }

    @property --motion-spring-bouncy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
    }

    @property --motion-spring-bouncier {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
    }

    @property --motion-spring-bounciest {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
    }

    @property --motion-origin-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-origin-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-origin-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-origin-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-end-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-end-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-loop-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-loop-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-duration {
        syntax: "*";
        inherits: false;
        initial-value: 700ms;
    }

    @property --motion-timing {
        syntax: "*";
        inherits: false;
        initial-value: cubic-bezier(.165, .84, .44, 1);
    }

    @property --motion-perceptual-duration-multiplier {
        syntax: "*";
        inherits: false;
        initial-value: 1;
    }

    @property --motion-delay {
        syntax: "*";
        inherits: false;
        initial-value: 0ms;
    }

    @property --motion-loop-count {
        syntax: "*";
        inherits: false;
        initial-value: infinite;
    }

    @property --motion-scale-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
}

@layer base {
    @media screen and (prefers-reduced-motion: no-preference) {
        @keyframes motion-scale-in {
            0% {
                scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
            }

            100% {
                scale: 1 1;
            }
        }

        @keyframes motion-scale-out {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
            }
        }

        @keyframes motion-scale-loop-mirror {

            0%,
            100% {
                scale: 1 1;
            }

            50% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-scale-loop-reset {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-translate-in {
            0% {
                translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
            }

            100% {
                translate: 0 0;
            }
        }

        @keyframes motion-translate-out {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
            }
        }

        @keyframes motion-translate-loop-mirror {

            0%,
            100% {
                translate: 0 0;
            }

            50% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-translate-loop-reset {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-rotate-in {
            0% {
                rotate: var(--motion-origin-rotate);
            }

            100% {
                rotate: 0;
            }
        }

        @keyframes motion-rotate-out {
            0% {
                rotate: 0;
            }

            100% {
                rotate: var(--motion-end-rotate);
            }
        }

        @keyframes motion-rotate-loop-mirror {

            0%,
            100% {
                rotate: 0deg;
            }

            50% {
                rotate: var(--motion-loop-rotate);
            }
        }

        @keyframes motion-rotate-loop-reset {
            100% {
                rotate: var(--motion-loop-rotate);
            }
        }
    }

    @keyframes motion-filter-in {
        0% {
            filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
        }

        100% {
            filter: blur(0) grayscale(0);
        }
    }

    @keyframes motion-filter-out {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
        }
    }

    @keyframes motion-filter-loop-mirror {

        0%,
        100% {
            filter: blur(0) grayscale(0);
        }

        50% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-filter-loop-reset {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-opacity-in {
        0% {
            opacity: var(--motion-origin-opacity);
        }
    }

    @keyframes motion-opacity-out {
        100% {
            opacity: var(--motion-end-opacity);
        }
    }

    @keyframes motion-opacity-loop-mirror {
        50% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-opacity-loop-reset {
        100% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-background-color-in {
        0% {
            background-color: var(--motion-origin-background-color);
        }
    }

    @keyframes motion-background-color-out {
        100% {
            background-color: var(--motion-end-background-color);
        }
    }

    @keyframes motion-background-color-loop-mirror {
        50% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-background-color-loop-reset {
        100% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-text-color-in {
        0% {
            color: var(--motion-origin-text-color);
        }
    }

    @keyframes motion-text-color-out {
        100% {
            color: var(--motion-end-text-color);
        }
    }

    @keyframes motion-text-color-loop-mirror {
        50% {
            color: var(--motion-loop-text-color);
        }
    }

    @keyframes motion-text-color-loop-reset {
        100% {
            color: var(--motion-loop-text-color);
        }
    }
}

@layer base {
    @property --motion-bounce {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765, 1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785, 0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953, 0.973, 1, 0.988, 0.984, 0.988, 1);
    }

    @property --motion-spring-smooth {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
    }

    @property --motion-spring-snappy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
    }

    @property --motion-spring-bouncy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
    }

    @property --motion-spring-bouncier {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
    }

    @property --motion-spring-bounciest {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
    }

    @property --motion-origin-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-origin-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-origin-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-origin-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-end-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-end-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-loop-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-loop-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-duration {
        syntax: "*";
        inherits: false;
        initial-value: 700ms;
    }

    @property --motion-timing {
        syntax: "*";
        inherits: false;
        initial-value: cubic-bezier(.165, .84, .44, 1);
    }

    @property --motion-perceptual-duration-multiplier {
        syntax: "*";
        inherits: false;
        initial-value: 1;
    }

    @property --motion-delay {
        syntax: "*";
        inherits: false;
        initial-value: 0ms;
    }

    @property --motion-loop-count {
        syntax: "*";
        inherits: false;
        initial-value: infinite;
    }

    @property --motion-scale-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
}

@layer base {
    @media screen and (prefers-reduced-motion: no-preference) {
        @keyframes motion-scale-in {
            0% {
                scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
            }

            100% {
                scale: 1 1;
            }
        }

        @keyframes motion-scale-out {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
            }
        }

        @keyframes motion-scale-loop-mirror {

            0%,
            100% {
                scale: 1 1;
            }

            50% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-scale-loop-reset {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-translate-in {
            0% {
                translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
            }

            100% {
                translate: 0 0;
            }
        }

        @keyframes motion-translate-out {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
            }
        }

        @keyframes motion-translate-loop-mirror {

            0%,
            100% {
                translate: 0 0;
            }

            50% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-translate-loop-reset {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-rotate-in {
            0% {
                rotate: var(--motion-origin-rotate);
            }

            100% {
                rotate: 0;
            }
        }

        @keyframes motion-rotate-out {
            0% {
                rotate: 0;
            }

            100% {
                rotate: var(--motion-end-rotate);
            }
        }

        @keyframes motion-rotate-loop-mirror {

            0%,
            100% {
                rotate: 0deg;
            }

            50% {
                rotate: var(--motion-loop-rotate);
            }
        }

        @keyframes motion-rotate-loop-reset {
            100% {
                rotate: var(--motion-loop-rotate);
            }
        }
    }

    @keyframes motion-filter-in {
        0% {
            filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
        }

        100% {
            filter: blur(0) grayscale(0);
        }
    }

    @keyframes motion-filter-out {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
        }
    }

    @keyframes motion-filter-loop-mirror {

        0%,
        100% {
            filter: blur(0) grayscale(0);
        }

        50% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-filter-loop-reset {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-opacity-in {
        0% {
            opacity: var(--motion-origin-opacity);
        }
    }

    @keyframes motion-opacity-out {
        100% {
            opacity: var(--motion-end-opacity);
        }
    }

    @keyframes motion-opacity-loop-mirror {
        50% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-opacity-loop-reset {
        100% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-background-color-in {
        0% {
            background-color: var(--motion-origin-background-color);
        }
    }

    @keyframes motion-background-color-out {
        100% {
            background-color: var(--motion-end-background-color);
        }
    }

    @keyframes motion-background-color-loop-mirror {
        50% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-background-color-loop-reset {
        100% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-text-color-in {
        0% {
            color: var(--motion-origin-text-color);
        }
    }

    @keyframes motion-text-color-out {
        100% {
            color: var(--motion-end-text-color);
        }
    }

    @keyframes motion-text-color-loop-mirror {
        50% {
            color: var(--motion-loop-text-color);
        }
    }

    @keyframes motion-text-color-loop-reset {
        100% {
            color: var(--motion-loop-text-color);
        }
    }
}

@layer base {

    :root:has(input.theme-controller[value=corporate-dark]:checked),
    [data-theme="corporate-dark"] {
        color-scheme: normal;
        --font-sans: 'Public Sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto;
    }
}

@layer base {

    :root:has(input.theme-controller[value=corporate-dark]:checked),
    [data-theme="corporate-dark"] {
        color-scheme: dark;
        --color-base-100: oklch(23.2% 0.006 285.95);
        --color-base-200: oklch(0.2694 0.0037 286.15);
        --color-base-300: oklch(14% 0 0);
        --color-base-content: oklch(96% 0.001 286.375);
        --color-primary: #1D378D;
        --color-primary-content: oklch(97.05% 0.014 254.6);
        --color-secondary: oklch(55.79% 0.022 301.91);
        --color-secondary-content: oklch(95.05% 0.003 308.43);
        --color-accent: oklch(65.59% 0.212 354.31);
        --color-accent-content: oklch(97.14% 0.014 343.2);
        --color-neutral: oklch(0.8681 0.033 285.69);
        --color-neutral-content: oklch(82.15% 0.055 277.12);
        --color-info: oklch(70.38% 0.123 182.5);
        --color-info-content: oklch(98.36% 0.014 180.72);
        --color-success: oklch(76.81% 0.204 130.85);
        --color-success-content: oklch(98.57% 0.031 120.76);
        --color-warning: oklch(79.52% 0.162 86.05);
        --color-warning-content: oklch(98.73% 0.026 102.21);
        --color-error: oklch(64.5% 0.215 16.44);
        --color-error-content: oklch(96.94% 0.015 12.42);
        --radius-selector: 0.125rem;
        --radius-field: 0.25rem;
        --radius-box: 0.375rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 1;
        --noise: 0;
    }
}

@layer base {
    @property --motion-bounce {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765, 1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785, 0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953, 0.973, 1, 0.988, 0.984, 0.988, 1);
    }

    @property --motion-spring-smooth {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
    }

    @property --motion-spring-snappy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
    }

    @property --motion-spring-bouncy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
    }

    @property --motion-spring-bouncier {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
    }

    @property --motion-spring-bounciest {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
    }

    @property --motion-origin-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-origin-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-origin-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-origin-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-end-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-end-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-loop-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-loop-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-duration {
        syntax: "*";
        inherits: false;
        initial-value: 700ms;
    }

    @property --motion-timing {
        syntax: "*";
        inherits: false;
        initial-value: cubic-bezier(.165, .84, .44, 1);
    }

    @property --motion-perceptual-duration-multiplier {
        syntax: "*";
        inherits: false;
        initial-value: 1;
    }

    @property --motion-delay {
        syntax: "*";
        inherits: false;
        initial-value: 0ms;
    }

    @property --motion-loop-count {
        syntax: "*";
        inherits: false;
        initial-value: infinite;
    }

    @property --motion-scale-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
}

@layer base {
    @media screen and (prefers-reduced-motion: no-preference) {
        @keyframes motion-scale-in {
            0% {
                scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
            }

            100% {
                scale: 1 1;
            }
        }

        @keyframes motion-scale-out {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
            }
        }

        @keyframes motion-scale-loop-mirror {

            0%,
            100% {
                scale: 1 1;
            }

            50% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-scale-loop-reset {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-translate-in {
            0% {
                translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
            }

            100% {
                translate: 0 0;
            }
        }

        @keyframes motion-translate-out {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
            }
        }

        @keyframes motion-translate-loop-mirror {

            0%,
            100% {
                translate: 0 0;
            }

            50% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-translate-loop-reset {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-rotate-in {
            0% {
                rotate: var(--motion-origin-rotate);
            }

            100% {
                rotate: 0;
            }
        }

        @keyframes motion-rotate-out {
            0% {
                rotate: 0;
            }

            100% {
                rotate: var(--motion-end-rotate);
            }
        }

        @keyframes motion-rotate-loop-mirror {

            0%,
            100% {
                rotate: 0deg;
            }

            50% {
                rotate: var(--motion-loop-rotate);
            }
        }

        @keyframes motion-rotate-loop-reset {
            100% {
                rotate: var(--motion-loop-rotate);
            }
        }
    }

    @keyframes motion-filter-in {
        0% {
            filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
        }

        100% {
            filter: blur(0) grayscale(0);
        }
    }

    @keyframes motion-filter-out {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
        }
    }

    @keyframes motion-filter-loop-mirror {

        0%,
        100% {
            filter: blur(0) grayscale(0);
        }

        50% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-filter-loop-reset {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-opacity-in {
        0% {
            opacity: var(--motion-origin-opacity);
        }
    }

    @keyframes motion-opacity-out {
        100% {
            opacity: var(--motion-end-opacity);
        }
    }

    @keyframes motion-opacity-loop-mirror {
        50% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-opacity-loop-reset {
        100% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-background-color-in {
        0% {
            background-color: var(--motion-origin-background-color);
        }
    }

    @keyframes motion-background-color-out {
        100% {
            background-color: var(--motion-end-background-color);
        }
    }

    @keyframes motion-background-color-loop-mirror {
        50% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-background-color-loop-reset {
        100% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-text-color-in {
        0% {
            color: var(--motion-origin-text-color);
        }
    }

    @keyframes motion-text-color-out {
        100% {
            color: var(--motion-end-text-color);
        }
    }

    @keyframes motion-text-color-loop-mirror {
        50% {
            color: var(--motion-loop-text-color);
        }
    }

    @keyframes motion-text-color-loop-reset {
        100% {
            color: var(--motion-loop-text-color);
        }
    }
}

@layer base {
    @property --motion-bounce {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765, 1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785, 0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953, 0.973, 1, 0.988, 0.984, 0.988, 1);
    }

    @property --motion-spring-smooth {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
    }

    @property --motion-spring-snappy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
    }

    @property --motion-spring-bouncy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
    }

    @property --motion-spring-bouncier {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
    }

    @property --motion-spring-bounciest {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
    }

    @property --motion-origin-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-origin-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-origin-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-origin-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-end-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-end-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-loop-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-loop-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-duration {
        syntax: "*";
        inherits: false;
        initial-value: 700ms;
    }

    @property --motion-timing {
        syntax: "*";
        inherits: false;
        initial-value: cubic-bezier(.165, .84, .44, 1);
    }

    @property --motion-perceptual-duration-multiplier {
        syntax: "*";
        inherits: false;
        initial-value: 1;
    }

    @property --motion-delay {
        syntax: "*";
        inherits: false;
        initial-value: 0ms;
    }

    @property --motion-loop-count {
        syntax: "*";
        inherits: false;
        initial-value: infinite;
    }

    @property --motion-scale-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
}

@layer base {
    @media screen and (prefers-reduced-motion: no-preference) {
        @keyframes motion-scale-in {
            0% {
                scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
            }

            100% {
                scale: 1 1;
            }
        }

        @keyframes motion-scale-out {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
            }
        }

        @keyframes motion-scale-loop-mirror {

            0%,
            100% {
                scale: 1 1;
            }

            50% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-scale-loop-reset {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-translate-in {
            0% {
                translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
            }

            100% {
                translate: 0 0;
            }
        }

        @keyframes motion-translate-out {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
            }
        }

        @keyframes motion-translate-loop-mirror {

            0%,
            100% {
                translate: 0 0;
            }

            50% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-translate-loop-reset {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-rotate-in {
            0% {
                rotate: var(--motion-origin-rotate);
            }

            100% {
                rotate: 0;
            }
        }

        @keyframes motion-rotate-out {
            0% {
                rotate: 0;
            }

            100% {
                rotate: var(--motion-end-rotate);
            }
        }

        @keyframes motion-rotate-loop-mirror {

            0%,
            100% {
                rotate: 0deg;
            }

            50% {
                rotate: var(--motion-loop-rotate);
            }
        }

        @keyframes motion-rotate-loop-reset {
            100% {
                rotate: var(--motion-loop-rotate);
            }
        }
    }

    @keyframes motion-filter-in {
        0% {
            filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
        }

        100% {
            filter: blur(0) grayscale(0);
        }
    }

    @keyframes motion-filter-out {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
        }
    }

    @keyframes motion-filter-loop-mirror {

        0%,
        100% {
            filter: blur(0) grayscale(0);
        }

        50% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-filter-loop-reset {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-opacity-in {
        0% {
            opacity: var(--motion-origin-opacity);
        }
    }

    @keyframes motion-opacity-out {
        100% {
            opacity: var(--motion-end-opacity);
        }
    }

    @keyframes motion-opacity-loop-mirror {
        50% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-opacity-loop-reset {
        100% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-background-color-in {
        0% {
            background-color: var(--motion-origin-background-color);
        }
    }

    @keyframes motion-background-color-out {
        100% {
            background-color: var(--motion-end-background-color);
        }
    }

    @keyframes motion-background-color-loop-mirror {
        50% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-background-color-loop-reset {
        100% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-text-color-in {
        0% {
            color: var(--motion-origin-text-color);
        }
    }

    @keyframes motion-text-color-out {
        100% {
            color: var(--motion-end-text-color);
        }
    }

    @keyframes motion-text-color-loop-mirror {
        50% {
            color: var(--motion-loop-text-color);
        }
    }

    @keyframes motion-text-color-loop-reset {
        100% {
            color: var(--motion-loop-text-color);
        }
    }
}

@layer base {
    @property --motion-bounce {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765, 1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785, 0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953, 0.973, 1, 0.988, 0.984, 0.988, 1);
    }

    @property --motion-spring-smooth {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
    }

    @property --motion-spring-snappy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
    }

    @property --motion-spring-bouncy {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
    }

    @property --motion-spring-bouncier {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
    }

    @property --motion-spring-bounciest {
        syntax: "*";
        inherits: false;
        initial-value: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
    }

    @property --motion-origin-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-origin-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-origin-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-origin-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-origin-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-origin-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-end-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-end-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-end-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-end-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-end-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }

    @property --motion-loop-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }

    @property --motion-loop-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }

    @property --motion-loop-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }

    @property --motion-loop-background-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-loop-text-color {
        syntax: "*";
        inherits: false;
    }

    @property --motion-duration {
        syntax: "*";
        inherits: false;
        initial-value: 700ms;
    }

    @property --motion-timing {
        syntax: "*";
        inherits: false;
        initial-value: cubic-bezier(.165, .84, .44, 1);
    }

    @property --motion-perceptual-duration-multiplier {
        syntax: "*";
        inherits: false;
        initial-value: 1;
    }

    @property --motion-delay {
        syntax: "*";
        inherits: false;
        initial-value: 0ms;
    }

    @property --motion-loop-count {
        syntax: "*";
        inherits: false;
        initial-value: infinite;
    }

    @property --motion-scale-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-scale-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-translate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-rotate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-filter-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-opacity-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-background-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }

    @property --motion-text-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
}

@layer base {
    @media screen and (prefers-reduced-motion: no-preference) {
        @keyframes motion-scale-in {
            0% {
                scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
            }

            100% {
                scale: 1 1;
            }
        }

        @keyframes motion-scale-out {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
            }
        }

        @keyframes motion-scale-loop-mirror {

            0%,
            100% {
                scale: 1 1;
            }

            50% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-scale-loop-reset {
            0% {
                scale: 1 1;
            }

            100% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }

        @keyframes motion-translate-in {
            0% {
                translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
            }

            100% {
                translate: 0 0;
            }
        }

        @keyframes motion-translate-out {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
            }
        }

        @keyframes motion-translate-loop-mirror {

            0%,
            100% {
                translate: 0 0;
            }

            50% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-translate-loop-reset {
            0% {
                translate: 0 0;
            }

            100% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }

        @keyframes motion-rotate-in {
            0% {
                rotate: var(--motion-origin-rotate);
            }

            100% {
                rotate: 0;
            }
        }

        @keyframes motion-rotate-out {
            0% {
                rotate: 0;
            }

            100% {
                rotate: var(--motion-end-rotate);
            }
        }

        @keyframes motion-rotate-loop-mirror {

            0%,
            100% {
                rotate: 0deg;
            }

            50% {
                rotate: var(--motion-loop-rotate);
            }
        }

        @keyframes motion-rotate-loop-reset {
            100% {
                rotate: var(--motion-loop-rotate);
            }
        }
    }

    @keyframes motion-filter-in {
        0% {
            filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
        }

        100% {
            filter: blur(0) grayscale(0);
        }
    }

    @keyframes motion-filter-out {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
        }
    }

    @keyframes motion-filter-loop-mirror {

        0%,
        100% {
            filter: blur(0) grayscale(0);
        }

        50% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-filter-loop-reset {
        0% {
            filter: blur(0) grayscale(0);
        }

        100% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }

    @keyframes motion-opacity-in {
        0% {
            opacity: var(--motion-origin-opacity);
        }
    }

    @keyframes motion-opacity-out {
        100% {
            opacity: var(--motion-end-opacity);
        }
    }

    @keyframes motion-opacity-loop-mirror {
        50% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-opacity-loop-reset {
        100% {
            opacity: var(--motion-loop-opacity);
        }
    }

    @keyframes motion-background-color-in {
        0% {
            background-color: var(--motion-origin-background-color);
        }
    }

    @keyframes motion-background-color-out {
        100% {
            background-color: var(--motion-end-background-color);
        }
    }

    @keyframes motion-background-color-loop-mirror {
        50% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-background-color-loop-reset {
        100% {
            background-color: var(--motion-loop-background-color);
        }
    }

    @keyframes motion-text-color-in {
        0% {
            color: var(--motion-origin-text-color);
        }
    }

    @keyframes motion-text-color-out {
        100% {
            color: var(--motion-end-text-color);
        }
    }

    @keyframes motion-text-color-loop-mirror {
        50% {
            color: var(--motion-loop-text-color);
        }
    }

    @keyframes motion-text-color-loop-reset {
        100% {
            color: var(--motion-loop-text-color);
        }
    }
}

@layer base {

    :root:has(input.theme-controller[value=gourmet-dark]:checked),
    [data-theme="gourmet-dark"] {
        color-scheme: dark;
        --color-base-100: oklch(32.38% 0.009 67.5);
        --color-base-200: oklch(0.35 0.01 59.3);
        --color-base-300: oklch(0.48 0.05 54.27);
        --color-base-content: oklch(0.96 0.01 54.55);
        --color-primary: oklch(70.49% 0.187 47.6);
        --color-primary-content: oklch(97.96% 0.016 73.68);
        --color-secondary: oklch(55.79% 0.022 301.91);
        --color-secondary-content: oklch(95.05% 0.003 308.43);
        --color-accent: oklch(65.59% 0.212 354.31);
        --color-accent-content: oklch(97.14% 0.014 343.2);
        --color-neutral: oklch(0.82 0.03 67.39);
        --color-neutral-content: oklch(99.45% 0.002 67.8);
        --color-info: oklch(68.47% 0.148 237.32);
        --color-info-content: oklch(97.71% 0.012 236.62);
        --color-success: oklch(69.59% 0.149 162.48);
        --color-success-content: oklch(97.93% 0.021 166.11);
        --color-warning: oklch(57.59% 0.247 287.24);
        --color-warning-content: oklch(96.57% 0.017 289.61);
        --color-error: oklch(65.39% 0.222 25.86);
        --color-error-content: oklch(98.76% 0.009 67.73);
        --radius-selector: 2rem;
        --radius-field: 2rem;
        --radius-box: 0.75rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 1;
        --noise: 0;
    }
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-divide-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false;
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}

@property --tw-tracking {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-duration {
    syntax: "*";
    inherits: false;
}

@property --tw-ease {
    syntax: "*";
    inherits: false;
}

@property --tw-content {
    syntax: "*";
    initial-value: "";
    inherits: false;
}

@property --tw-divide-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

@keyframes pulse {
    50% {
        opacity: 0.5;
    }
}

@keyframes marqueeLeft {
    0% {
        left: 0%;
    }

    100% {
        left: -100%;
    }
}

@keyframes marqueeRight {
    0% {
        left: -100%;
    }

    100% {
        left: 0%;
    }
}

@keyframes marqueeLeft {
    0% {
        left: 0%;
    }

    100% {
        left: -100%;
    }
}

@keyframes marqueeRight {
    0% {
        left: -100%;
    }

    100% {
        left: 0%;
    }
}

@keyframes marqueeLeft {
    0% {
        left: 0%;
    }

    100% {
        left: -100%;
    }
}

@keyframes marqueeRight {
    0% {
        left: -100%;
    }

    100% {
        left: 0%;
    }
}

@keyframes marqueeTop {
    0% {
        top: 0%;
    }

    100% {
        top: -100%;
    }
}

@keyframes marqueeBottom {
    0% {
        top: -100%;
    }

    100% {
        top: 0%;
    }
}

@keyframes marqueeLeft {
    0% {
        left: 0%;
    }

    100% {
        left: -100%;
    }
}

@keyframes marqueeRight {
    0% {
        left: -100%;
    }

    100% {
        left: 0%;
    }
}

@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {

        *,
        ::before,
        ::after,
        ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-space-x-reverse: 0;
            --tw-divide-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-content: "";
            --tw-divide-x-reverse: 0;
        }
    }
}